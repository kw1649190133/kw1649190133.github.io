<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Yolov8-目标检测初尝试</title>
    <link href="/2024/02/27/Yolov8-%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E5%88%9D%E5%B0%9D%E8%AF%95/"/>
    <url>/2024/02/27/Yolov8-%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E5%88%9D%E5%B0%9D%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前先是尝试了yolov8的安卓移植，然后遭遇了许多问题。没栽在yolov8上而是栽在Android开发上。现在要利用空闲时间，补齐有关yolo和Android的相关知识。相比以前为了写论文训练的全卷积神经网络，yolo的部署要简单很多，主要得益于完善的软件配套。</p><p>相关资料：<br>YOLOv8代码：<a href="https://github.com/ultralytics/ultralytics">https://github.com/ultralytics/ultralytics</a><br>YOLOv8文档：<a href="https://docs.ultralytics.com/">https://docs.ultralytics.com/</a></p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>使用Andconda做环境管理，创建一个yolov8的专属环境</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">conda create -n yolov8 python=<span class="hljs-number">3.8</span> <span class="hljs-comment">#创建python环境</span><br>conda <span class="hljs-built_in">activate</span> yolov8 <span class="hljs-comment">#进入环境</span><br></code></pre></td></tr></table></figure><p>获取yolo代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/ultralytics/u</span>ltralytics.git <span class="hljs-comment">#下载代码</span><br>pip install ultralytics <span class="hljs-comment">#安装训练环境</span><br></code></pre></td></tr></table></figure><p>以前还需要逐个安装组件，现在其他的操作都已经集成到ultralytics里面了，直接pip install就OK了。</p><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>单个目标的输入只需要指定处理类型、模型类型、输入文件路径即可。<br>程序会在<strong>当前路径</strong>寻找模型，模型可以直接放在根目录，当程序找不到模型时会自动从网上下载。<br>文件类型支持图片和视频，当输入为视频时输出也会自动转为视频。（简直太方便了）常见格式<strong>jpeg</strong>和<strong>mp4</strong>，其他支持格式可以查看官网文档。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yolo detect predict <span class="hljs-attribute">model</span>=yolov8m.pt <span class="hljs-attribute">source</span>=ultralytics/assets/bus.jpg<br></code></pre></td></tr></table></figure><p>执行之后可以看到，结果自动保存在runs\detect\predict中。<br>并且可以看到，这里直接用CPU来运行的。处理图片还可以，处理视频就太慢了，需要调整一下。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">(yolov8train) H:\work\yolov8train\ultralytics&gt;yolo detect predict model=yolov8m.pt source=ultralytics<span class="hljs-regexp">/assets/</span>bus.jpg<br>Ultralytics YOLOv8.<span class="hljs-number">1.18</span> 🚀 Python-<span class="hljs-number">3.8</span>.<span class="hljs-number">18</span> torch-<span class="hljs-number">2.2</span>.<span class="hljs-number">1</span>+cpu CPU (Intel Core(TM) i5-<span class="hljs-number">4210</span>M <span class="hljs-number">2.60</span>GHz)<br>YOLOv8m summary (fused): <span class="hljs-number">218</span> layers, <span class="hljs-number">25886080</span> parameters, <span class="hljs-number">0</span> gradients, <span class="hljs-number">78.9</span> GFLOPs<br><br>image <span class="hljs-number">1</span>/<span class="hljs-number">1</span> H:\work\yolov8train\ultralytics\ultralytics\assets\bus.jpg: <span class="hljs-number">640</span>x480 <span class="hljs-number">4</span> persons, <span class="hljs-number">1</span> bus, <span class="hljs-number">1251.3</span>ms<br>Speed: <span class="hljs-number">6.0</span>ms preprocess, <span class="hljs-number">1251.3</span>ms inference, <span class="hljs-number">5.0</span>ms postprocess per image at shape (<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">640</span>, <span class="hljs-number">480</span>)<br>Results saved to runs\detect\predict<br>💡 Learn more at https:<span class="hljs-regexp">//</span>docs.ultralytics.com<span class="hljs-regexp">/modes/</span>predict<br></code></pre></td></tr></table></figure><p>输出结果<br><img src="/2024/02/27/Yolov8-%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E5%88%9D%E5%B0%9D%E8%AF%95/fd172c59d68bd767d02238b53b03cb9e.png"></p><h1 id="调整"><a href="#调整" class="headerlink" title="调整"></a>调整</h1><h3 id="解决显卡不上班的问题"><a href="#解决显卡不上班的问题" class="headerlink" title="解决显卡不上班的问题"></a>解决显卡不上班的问题</h3><p>检查显卡情况<br><code>nvidia-smi</code><br>查看cuda版本<br><code>nvcc --version</code><br>到这里发现问题了，电脑里居然没有cuda…去官网找老黄要一下(<a href="https://developer.nvidia.com/">https://developer.nvidia.com/</a>)<br>下载的时候需要注意，查看显卡情况时右上角会显示最高支持的cuda版本，老电脑要注意下载版本低于最高版本。<br><img src="/2024/02/27/Yolov8-%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E5%88%9D%E5%B0%9D%E8%AF%95/50e80dfb684ec42d94b64f5c081812fb.png"></p><p>在Nvidia控制面板中也能看到CODA的最高支持版本<br><img src="/2024/02/27/Yolov8-%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E5%88%9D%E5%B0%9D%E8%AF%95/f3f96e1046b8d73cfbb41d1178dd84a9.png"></p><p>下载安装之后，再次使用<code>nvcc -v</code>查看Cuda版本，有结果了</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">(yolov8train) C:\Users\Administrator&gt;nvcc --<span class="hljs-keyword">version</span><br>nvcc: NVIDIA (R) Cuda <span class="hljs-keyword">compiler</span> driver<br>Copyright (<span class="hljs-keyword">c</span>) <span class="hljs-number">2005</span>-<span class="hljs-number">2022</span> NVIDIA Corporation<br>Built <span class="hljs-keyword">on</span> Mon_Oct_24_19:<span class="hljs-number">40</span>:<span class="hljs-number">05</span>_Pacific_Daylight_Time_2022<br>Cuda compilation tools, release <span class="hljs-number">12.0</span>, V12.<span class="hljs-number">0.76</span><br>Build cuda_12.<span class="hljs-number">0</span>.r12.<span class="hljs-number">0</span>/<span class="hljs-keyword">compiler</span>.<span class="hljs-number">31968024</span>_0<br></code></pre></td></tr></table></figure><p>在给其他电脑装CUDA的时候遇到了NVCC不能用的问题，明明装了CUDA，也配置了系统变量，摸不着头脑。</p><h3 id="关于cuDNN"><a href="#关于cuDNN" class="headerlink" title="关于cuDNN"></a>关于cuDNN</h3><p>cuDNN在CUDA的基础上，使计算速度进一步加快，可以的话最好安装一下，并且注意版本号对齐CUDA<br><a href="https://developer.nvidia.cn/rdp/cudnn-archive">https://developer.nvidia.cn/rdp/cudnn-archive</a><br>下载以后是一个压缩包，直接解压，复制到CUDA的安装路径下即可。然后配置一下环境变量，添加到系统变量中。</p><p>检查cuDNN是否可用（python语句，需要在Python环境下运行）</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">import torch<br>torch.<span class="hljs-keyword">backends.cudnn.is_available() </span> <span class="hljs-comment"># 检查cudnn是否可用</span><br>torch.<span class="hljs-keyword">backends.cudnn.version() </span>      <span class="hljs-comment"># 查看cudnn版本</span><br></code></pre></td></tr></table></figure><h3 id="检查Torch与cuda兼容性"><a href="#检查Torch与cuda兼容性" class="headerlink" title="检查Torch与cuda兼容性"></a>检查Torch与cuda兼容性</h3><p>安装好Cuda之后还是不行，开始检查兼容性。这段是Python代码，需要输入Python进入对应环境才可以运行，CMD不识别import。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import torch  <br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(torch.__version__)</span></span>  #查看当前torch版本<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(torch.cuda.is_available()</span></span>) #检查cuda和torch是否匹配<br></code></pre></td></tr></table></figure><p>运行得到了False，不兼容。有点难搞，暂时没搞明白。只能换台电脑试试了。<br>当电脑硬件过老的时候就真的没办法，只能换电脑了。</p><p>PS：第二天又继续折腾了一下，然后在下班前搞定了 -20240227</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-keyword">import</span> torch</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">print</span>(torch.cuda.is_available()) <span class="hljs-comment">#检查cuda和torch是否匹配</span></span><br>True<br></code></pre></td></tr></table></figure><p>在pytorch的官网去选择对应的版本，然后复制下面的链接用pip下载。去官网下最省事，但是往往因为网络小水管问题速度比较慢，着急的时候可以直接去其他的下载站，下载对应版本的文件。<br>pytorch官网地址：<a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a><br>其他下载站：<a href="https://download.pytorch.org/whl/cu116">https://download.pytorch.org/whl/cu116</a><br><img src="/pytorch%E4%B8%8B%E8%BD%BD.png" alt="pytorch下载"></p><p>重新安装后再运行yolo，又莫名其妙的提示少了一个chardet模块，直接用<code>pip install chardet</code>下载一下，最终顺利运行，在GTX950M的加持下，计算速度比i5-4210M快了足足十倍。听说再加上cuDNN的话还能进一步提高。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>初次尝试的成功取决于工程师的基础建设，在没有完善配套的年代，自己搭建整个流程是非常非常累的事情，而在今天只需要短短两三句代码。当然还有很多兼容性的问题还有待解决，这个只能是一步步来了。</p><p>本篇中没有解决，仍然需要进步的地方：</p><ul><li>深入学习其中的算法和原理</li><li>尝试语义分割和姿态检测等其他案例</li><li>多文件处理</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>yolov8</tag>
      
      <tag>目标识别</tag>
      
      <tag>计算机视觉</tag>
      
      <tag>神经网络</tag>
      
      <tag>Anaconda</tag>
      
      <tag>CUDA</tag>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>地理三维场景制作-影像贴图优化</title>
    <link href="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/"/>
    <url>/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="遥感影像的增强处理"><a href="#遥感影像的增强处理" class="headerlink" title="遥感影像的增强处理"></a>遥感影像的增强处理</h1><p>对遥感影像影响最大的就是颜色，在PS中对颜色处理后，可以极大地提升整体的观感。</p><h2 id="了解基本的色彩理论"><a href="#了解基本的色彩理论" class="headerlink" title="了解基本的色彩理论"></a>了解基本的色彩理论</h2><p>RGB模型以红绿蓝为三原色，色彩是相对的关系，例如增强红色，蓝绿保持不变，就会看到画面变红，而相对的是青色的部分减少。<br>当红绿蓝同时增强时，表现为白色，反色为黑色，在画面上就是亮度提高。<br>一般而言，影像的调整就是让植被更绿，水面更蓝。即使在什么都不会的情况下，随便拉一拉<strong>亮度</strong>和<strong>对比度</strong>也是可以明显的提升效果的，毕竟影像一般都比较暗，或者对比度不高。<br><img src="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/31dbba2dd75cf4a40bd1b014254ae46f.png"></p><h2 id="曲线调整"><a href="#曲线调整" class="headerlink" title="曲线调整"></a>曲线调整</h2><p>在图层列表中将遥感影像图层转换为智能对象。调整之后就可以把效果叠加在图层之外，而不改变图层本身，便于随时调整效果。<br>在主菜单-图像-调整-曲线，打开曲线调整界面<br><img src="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/958389c80e96b5eb54ae734d42205bd4.png"></p><h2 id="可选颜色"><a href="#可选颜色" class="headerlink" title="可选颜色"></a>可选颜色</h2><p>在主菜单-图形-调整-可选颜色，打开颜色选择器，可以更精准的进行颜色调整，<br>曲线调的好的情况下，基本上就不需要进入到可选颜色调整里，因为变化已很小。而在曲线不好调整的时候（色彩跨度大，画面本身已经色彩丰富饱满），就可以使用<br><img src="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/d93ef673bf37f9f75dea948d2f704e03.png"></p><h2 id="分层处理"><a href="#分层处理" class="headerlink" title="分层处理"></a>分层处理</h2><p>除了使用颜色调整工具直接调整整幅画面的颜色以外，还可以直接对栅格进行颜色修改，重新上色。分层处理需要栅格化对象，在图层里按右键可以进行变更。</p><p>主菜单-选择-色彩范围，打开色彩范围选择器<br>色彩范围可以选择相同以及一定容差内的颜色，选择之后就可以直接用复制或者剪切，把这些像素贴到另一个图层里，进行分层处理。分层之后再进行各种操作就很方便了。<br>可以直接修改分图层的栅格颜色，也可以对拆分的图层单独应用颜色调整。<br><img src="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/dbe10f85cc682edbc828da13b3da13e4.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>调色后的图像可以存储为PNG或者tiff。</li><li>影像有黑边的时候，可以使用魔棒工具去除。</li><li>一些影像上的接缝处可以用印章工具刷掉。</li></ul><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p>将导出的影像图直接替换到Blander中，重新渲染。另外在Blander中还可以根据修改后的贴图调整光影。<br>调整前的影像贴图：<br><img src="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/6362661915c62b57b768656873a3b797.png"></p><p>调整后的影像贴图：<br><img src="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/d25ac69052ccc19890af847000f29fee.png"></p><p>调整后的Blander渲染效果：<br><img src="/2024/02/27/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E5%BD%B1%E5%83%8F%E8%B4%B4%E5%9B%BE%E4%BC%98%E5%8C%96/c44f9990967fa89b77afdcdbf6ce4c79.png"><br>只是简单的提了一下亮度，增强绿色，就能起到不错的效果。周边的水域还没有处理干净，所以整体上有点不协调，还有非常多可以改进的空间。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>即使在不掌握色彩理论的情况下，拉高一点亮度、对比度，也能达到七八十分的效果。</li><li>有时候贴图的颜色调整可以更夸张一些，在Blander里进行渲染的时候，因为有光照和阴影，实际上可能会有意想不到的效果。</li><li>要取得更好的效果，大部分时间都会花在对细节的打磨上。步骤可以非常繁琐，也可以非常简单，有些步骤其实做了之后效果并不明显，处理过程要注意成本和效率。</li><li>PhotoShop是应用非常广泛的工具，熟练掌握之后可以应用在很多领域。但是不得不吐槽一下，PS处理大型影像真的太吃空间了，动不动就几十个G没了，空间不足会直接报错。</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>模型</tag>
      
      <tag>地理信息</tag>
      
      <tag>blander</tag>
      
      <tag>三维</tag>
      
      <tag>渲染</tag>
      
      <tag>影像处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AndroidStudio安装部署</title>
    <link href="/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <url>/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><ol><li>去官方网站下载最新的安装包<br><a href="https://developer.android.google.cn/studio?hl=zh-cn">https://developer.android.google.cn/studio?hl=zh-cn</a></li><li>安装AndroidStudio</li><li>配置SDK<br>理论上这一步是在安装过程中设置一下路径就可以自动搞定的，但可能因为我安装过其他版本，没有卸载干净，所以识别不到，SDK可以用软件中的SDK manager进行管理。</li><li>配置JAVA环境</li></ol><h2 id="JAVA基础知识"><a href="#JAVA基础知识" class="headerlink" title="JAVA基础知识"></a>JAVA基础知识</h2><p>简单复习一下各个J的用途，虽然学过但几年不用早就还给老师了。</p><ol><li><strong>JRE</strong>（Java Runtime Environment，Java运行时环境）：JRE是指Java应用程序运行所需的软件环境。它包含Java虚拟机（JVM）和Java类库，用于解释和执行Java字节码，并提供了Java核心库和其他运行时支持。JRE只能用于运行Java程序，而无法进行开发。当用户想要运行Java程序时，需要先安装JRE。常见的JRE包括Oracle JRE、OpenJDK JRE等。</li><li><strong>JDK</strong>（Java Development Kit，Java开发工具包）：JDK是用于开发Java应用程序的软件包。它包含了JRE以及用于开发Java程序所需的工具和库，如编译器（javac）、调试器（jdb）、Java API文档、开发工具等。JDK提供了完整的Java开发环境，开发人员可以使用JDK进行Java程序的编写、调试和构建。常见的JDK包括Oracle JDK、OpenJDK等。</li><li><strong>JDE</strong>（Java Development Environment，Java开发环境）：JDE是指用于开发Java应用程序的集成开发环境（IDE）。它提供了开发人员所需的工具和功能，包括代码编辑器、调试器、编译器、构建工具等，用于编写、调试和构建Java程序。常见的JDE包括Eclipse、IntelliJ IDEA和NetBeans等。</li></ol><p>下载地址：<a href="https://www.oracle.com/java/">https://www.oracle.com/java/</a><br>因为Java被Oracle买下来了，所以实际上是在Oracle官网下载.。</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li>JDE（Java Development Environment）是用于开发Java应用程序的集成开发环境（IDE）。</li><li>JRE（Java Runtime Environment）是Java应用程序运行所需的运行时环境。</li><li>JDK（Java Development Kit）是用于开发Java应用程序的软件包，包含JRE和开发工具。</li></ul><p>JDK是最全面的，包含了JRE和开发工具，而JRE只包含了运行时环境，JDE则是指特定的集成开发环境。根据具体需求，选择合适的组件来进行Java程序的开发和运行。<br>JAVA的JDE和Python的IDE是类似的东西。</p><h2 id="Android-SDK基础知识"><a href="#Android-SDK基础知识" class="headerlink" title="Android SDK基础知识"></a>Android SDK基础知识</h2><p>Android Studio 相当于是一个IDE环境，而安卓的SDK就是真正用到的开发工具包，它比JAVA复杂的地方在于它分了很多个模块，而最关键的是其中的三个。</p><ul><li><p>Android平台工具（Android Platform Tools）：包括adb（Android Debug Bridge）和其他命令行工具，用于与Android设备进行通信、调试和管理。</p></li><li><p>Android构建工具（Android Build Tools）：包括dx（Dalvik Executable）工具、aapt（Android Asset Packaging Tool）等，用于将Java源代码编译为Dalvik字节码、打包资源文件等。</p></li><li><p>Android模拟器（Android Emulator）是Android SDK中的一个工具，用于在计算机上模拟Android设备的运行环境。它允许开发人员在没有真实设备的情况下进行应用程序的测试和调试。</p></li></ul><h1 id="汉化过程"><a href="#汉化过程" class="headerlink" title="汉化过程"></a>汉化过程</h1><p>汉化的方法与VScode类似，都是直接加载外置插件就可以了，只是现在汉化插件不在官方的插件库中，必须要自己下载导入。</p><ol><li>查看当前版本号</li></ol><p><strong>版本号前三位必须与汉化包一致，否则会报错</strong>。下载的压缩包不用解压。<br><img src="/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/31e7401844b6f27405014d2d6883497e.png"></p><ol><li><p>在中文包网站找到相应的语言包，Download<br><a href="https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----/versions/stable">https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----/versions/stable</a></p></li><li><p>从AndroidStudio中导入<br>在菜单里找到Setting，打开Plugins标签，点中间的齿轮打开加载本地包，然后宣导刚刚下载的压缩包，直接导入，然后重启软件刷新，中文界面就有了。<br><img src="/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/8d3d41c6b2caaa52c33eab9de54a2429.png"></p></li></ol><h1 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h1><p>因为Android的构建工具比较多，会涉及各种版本插件兼容的问题，所以原本能正常运行的项目，可能换个地方又跑不动了，所以需要了解这些插件的版本差异和兼容情况。</p><h2 id="报错”the-android-sdk-location-cannot-be-at-the-filesystem-root”解决方案"><a href="#报错”the-android-sdk-location-cannot-be-at-the-filesystem-root”解决方案" class="headerlink" title="报错”the android sdk location cannot be at the filesystem root”解决方案"></a>报错”the android sdk location cannot be at the filesystem root”解决方案</h2><p>打开SDK manager，在尝试获取AndroidSDK时遇到“the android sdk location cannot be at the filesystem root”问题，并且无法加载包目录。<br><img src="/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/f6eb989002fb915f782221bea991cbdf.png"></p><p>处理办法：</p><ol><li>删除User文件夹下的.android文件夹、android studio 文件夹和.gradle文件夹</li><li>在AndroidStudio的系统设置中选择无代理<br><img src="/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/6d9811312ad361ae6ad272d52917f5fd.png"></li><li>重启电脑</li></ol><h2 id="报错”Gradle-syns-failed”的解决办法"><a href="#报错”Gradle-syns-failed”的解决办法" class="headerlink" title="报错”Gradle syns failed”的解决办法"></a>报错”Gradle syns failed”的解决办法</h2><p>新建项目或使用别人的项目时，遇到”Gradle syns failed”和”Connect time out”，可能是网络原因让Gradle无法从服务器自动下载。<br>解决办法：</p><ol><li><p>在项目文件夹中找到gradle文件夹，在gradle/warpper目录下找到.properties配置文件，查看gradle版本。这里看到使用的是7.5版本。<br><img src="/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/a7dd9e9fba9652c1fef3cae3d19e0f02.png"></p></li><li><p>去官网下载对应版本的包<br>官网地址：<a href="https://services.gradle.org/distributions/">https://services.gradle.org/distributions/</a><br>外网反应会比较慢，可以加速一下。<br>选择名称为【gradle对应版本-all】的包下载</p></li><li><p>把压缩包放到本地目录中去<br>默认路径：C:\Users\用户名.gradle\wrapper\dists\gradle-7.5-all\6qsw290k5lz422uaf8jf6m7co<br>最后是一个乱码字符串的文件夹，不用管那么多直接把ZIP压缩包丢进去就行。<br>最后回到项目点击Try Again。</p></li></ol><h2 id="NDK相关"><a href="#NDK相关" class="headerlink" title="NDK相关"></a>NDK相关</h2><p>报错<br>java.lang.NullPointerException (no error message)</p><p><img src="/2024/02/26/AndroidStudio%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/3573e662eab4ff9dd5ddc28a3f4d907c.png"></p><p>[CXX1101] NDK at D:\app\Android\SDK\ndk did not have a source.properties file</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>只是向着Android开发迈出的一小步，想让项目运行起来并不容易，还需要理解Android项目的结构，各部分代码的作用等等。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Android</tag>
      
      <tag>环境部署</tag>
      
      <tag>开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anaconda基本使用方法</title>
    <link href="/2024/02/26/Anaconda%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2024/02/26/Anaconda%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="Anaconda简介"><a href="#Anaconda简介" class="headerlink" title="Anaconda简介"></a>Anaconda简介</h2><p>Anaconda是一个环境管理器。当运行各种项目时，电脑中可能需要同时安装多个版本的Python，使用环境管理器避免环境之间的冲突。</p><p>可以使用Prompt打开命令行，也可以用Navigator打开图形界面<br><img src="/2024/02/26/Anaconda%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/298ff5c6b9f43f618ccf45ff3756d979.png"></p><h2 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h2><p>在图形界面可以简单直观地管理环境和包<br><img src="/2024/02/26/Anaconda%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/1f1715edfa8a940916d9082acc265c6b.png"></p><p>将Anaconda的安装路径添加到系统变量中。控制面板→系统属性→高级→环境变量，在系统变量中找到Path，添加下面几条。（一般情况似乎不用手动添加，可能是因为重装了系统）<br><img src="/2024/02/26/Anaconda%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/354c3d7b45865294500ecaec27c903dc.png"></p><p>F:\Softwork\Anacoda<br>F:\Softwork\Anacoda\Scripts<br>F:\Softwork\Anacoda\Library\bin<br>F:\Softwork\Anacoda\Library\mingw-w64\bin</p><h2 id="命令行常用指令"><a href="#命令行常用指令" class="headerlink" title="命令行常用指令"></a>命令行常用指令</h2><h3 id="环境管理"><a href="#环境管理" class="headerlink" title="环境管理"></a>环境管理</h3><p>创建环境<br><code>conda create -n env_name</code></p><p>激活环境<br><code>conda activate env_name</code></p><p>退出环境<br><code>deactivate env_name</code></p><p>克隆环境<br><code>conda create -n new_name --clone old_name</code></p><p>删除环境<br><code>conda remove -n old_name --all</code></p><p>查看当前所有环境<br><code>conda env list</code></p><p>查看conda信息<br><code>conda info</code></p><p>可以使用克隆+删除的方式，重命名环境</p><h3 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h3><p>查看当前环境已安装的包<br><code>conda list</code></p><p>安装<br><code>conda install package_name</code></p><p>安装多个<br><code>conda install numpy scipy pandas</code></p><p>安装指定版本<br><code>conda install numpy=1.10</code></p><p>更新包<br><code>conda update 包名</code><br>可以使用conda更新自己</p><p>卸载包<br><code>conda remove 包名</code></p><p>使用pip也是可以的，还有换源之类的操作略过</p><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">CommandNotFoundError: Your <span class="hljs-built_in">shell</span> has <span class="hljs-keyword">not</span> been properly configured <span class="hljs-built_in">to</span> use <span class="hljs-string">&#x27;conda activate&#x27;</span>.<br>If <span class="hljs-keyword">using</span> <span class="hljs-string">&#x27;conda activate&#x27;</span> <span class="hljs-built_in">from</span> <span class="hljs-keyword">a</span> batch script, change your<br>invocation <span class="hljs-built_in">to</span> <span class="hljs-string">&#x27;CALL conda.bat activate&#x27;</span>.<br></code></pre></td></tr></table></figure><p>输入activate，进入base环境</p><p>再输入进入环境的指令<br>conda activate 指定环境</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>环境部署</tag>
      
      <tag>开发</tag>
      
      <tag>python</tag>
      
      <tag>JavAnaconda</tag>
      
      <tag>环境管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>地理三维场景制作-真模型导出</title>
    <link href="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/"/>
    <url>/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h1><p>之前熟悉了地理信息数据导入Blander做三维渲染图的过程，最后的成果是导出二维的渲染图。但实际上用置换节点做出的渲染效果，并不改变模型本身，模型本质上还是一开始导入的二维平面。并且经过拉伸的DOM，虽然二维渲染的效果好，但模型会有明显的失真，要想导出真模型就去掉拉伸过程，使用原始的DOM高程。<br>本次重点：</p><ol><li>重新处理DOM数据，去掉拉伸过程</li><li>用置换修改器替代置换节点</li></ol><h1 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h1><p>需要保留原始的高程效果，减少失真的话可以选择不拉伸的DOM，但仍然要转成Unit16，考虑到高程有负值，使用无符号会出现异常。</p><h1 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h1><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><p>添加DOM数据平面，和之前一样。</p><h3 id="修改器设置"><a href="#修改器设置" class="headerlink" title="修改器设置"></a>修改器设置</h3><p>在修改器中添加表面细分和置换。需要注意的内容：</p><ul><li>表面细分不再勾选自适应细分，这次要手动进行细分。</li><li>视图层级是后面用来灵活调整面数的，当完成细分以后还想进一步增加面数，就可以增加视图层级。</li><li>置换纹理依然选择DOM</li><li>坐标系改为UV式纹理和平面范围对应</li><li>强度/力度是高程的夸张程度</li><li>中间值控制垂直方向的偏移，改成0避免模型下沉。<br><img src="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/981dd1aeec3cff2a6d56ffc9625ba8ec.png"></li></ul><h3 id="手动表面细分"><a href="#手动表面细分" class="headerlink" title="手动表面细分"></a>手动表面细分</h3><p>在添加面数之前，在右下角可以按右键开启数据统计和计算机资源监控，防止爆显存<br><img src="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/f36178fdf312c685ba86f1ac945aed53.png"></p><p>在三维场景中，选择平面模型，按TAB进入编辑模式，点击右键菜单中第一个就是细分。可以点击一次以后，用Shitf+R快速重复上一次操作。模型细分是一个不可逆过程，除非在一定次数内用Ctrl+Z撤回，但过度细分也会使电脑爆内存卡死，细分到一定程度后再用视图层级进行调整。<br><img src="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/cde761f3077eea91c6c94442bf9afe41.png"></p><p>调整完成后再次点击TAB退出编辑，保存后可以使用视图层级来微调面数。<br><img src="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/e2d034fce68fae5ff31fba27c6de0a75.png"></p><h3 id="在纹理中调整色彩设置"><a href="#在纹理中调整色彩设置" class="headerlink" title="在纹理中调整色彩设置"></a>在纹理中调整色彩设置</h3><p>色彩空间使用Raw或者XYZ，不用RGB，可以更好的还原地面起伏效果。为了防止边缘出现错误，映射→扩展选择裁剪。<br><img src="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/3f1bba4da65a36e5794242f9c3236935.png"></p><h3 id="将修改器内容应用到模型中（可选）"><a href="#将修改器内容应用到模型中（可选）" class="headerlink" title="将修改器内容应用到模型中（可选）"></a>将修改器内容应用到模型中（可选）</h3><p>选择模型之后按右键，可以将模型转换到网格，这样就彻底的将修改器的内容应用到了模型之上，彻底改变模型属性，原来的细分和置换不能再修改。也可以不进行转换，只保存工程文件，直接导出obj模型。<br><img src="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/ff028a0888729ff3b9c5775beb8e6d35.png"></p><h3 id="模型导出"><a href="#模型导出" class="headerlink" title="模型导出"></a>模型导出</h3><p>在菜单栏-文件-导出中，可以选择多种导出格式，例如常用的obj和fbx。导出前先保存工程文件，否则可能出现导出模型过大的情况。一般导出后模型模型大小为600MB（obj）。<br>另外，在右边可以选择模型方向，一般以Z为上方，Y为前方。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本篇主要实现三维场景的模型制作，将DOM处理后最终得到obj或fbx等通用格式的模型。<br>跑通流程只是第一步，要实现更好的效果，就要在贴图素材、光影上进行优化处理。</p><ul><li>使用PS对影像贴图进行调色，达到更明亮更鲜艳的效果</li><li>结合矢量数据对栅格影响进行处理，例如提取水体进行单独调色。</li><li>在Blander中对材质、光源进行调整。</li></ul><p>尤其是PS对影像的效果提升非常明显，原始的航拍或卫星影像受到光照条件的影响通常都比较灰暗，只是进行亮度调整都会有明显的提升效果，要达到案例中的效果就需要进行调色。<br><img src="/2024/02/21/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E7%9C%9F%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%87%BA/dcc981dc31d51378ddd0667a30345075.png"></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>模型</tag>
      
      <tag>地理信息</tag>
      
      <tag>blander</tag>
      
      <tag>三维</tag>
      
      <tag>渲染</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>地理三维场景制作-三维效果渲染图</title>
    <link href="/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/"/>
    <url>/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h1><p>制作地理三维场景需要DOM数据，DOM即可得到白版模型，可以使用正射影像作为模型贴图，达到拟真效果。</p><h3 id="使用栅格计算器去除空值（可选）"><a href="#使用栅格计算器去除空值（可选）" class="headerlink" title="使用栅格计算器去除空值（可选）"></a>使用栅格计算器去除空值（可选）</h3><p><code>Con(IsNull(&quot;dem.tif&quot;),0,&quot;dem.tif&quot;)</code><br>Con判断栅格是否为空值，空值则替换为0。<br><code>Con(IsNull(&quot;raster&quot;), FocalStatistics(&quot;raster&quot;, NbrRectangle(5,5, &quot;CELL&quot;), &quot;MEAN&quot;), &quot;raster&quot;)</code><br>从周围的栅格中获取均值来修补中间的小块空值。</p><h3 id="数据拉伸"><a href="#数据拉伸" class="headerlink" title="数据拉伸"></a>数据拉伸</h3><p>使用栅格计算器进行栅格数据拉伸（在ArcMap中使用Float强制转换避免数据类型错误）<br><strong>使用拉伸是为了更好的二维渲染效果，如果要制作仿真模型需要原始的高程，则不用拉伸</strong><br><code>Float(&quot;DEM&quot;-最低值)/Float(最高值-最低值)*65535</code></p><h3 id="将dom的像元类型改为Uint16"><a href="#将dom的像元类型改为Uint16" class="headerlink" title="将dom的像元类型改为Uint16"></a>将dom的像元类型改为Uint16</h3><p>在ArcMap中使用复制栅格工具可以改变像素类型，需要改为16位无符号(16_BIT_UNSIGNED)，此步骤放在最后，确保数据类型正确。<br><strong>拉伸后的DOM没有负值，所以可以使用无符号的十六位数值，若使用原始高程则使用有符号十六位</strong></p><h3 id="影像的像元类型改为Uint8"><a href="#影像的像元类型改为Uint8" class="headerlink" title="影像的像元类型改为Uint8"></a>影像的像元类型改为Uint8</h3><p>使用栅格复制，过程同上，类型选8_BIT_UNSIGNED。</p><h2 id="数据需要经过处理达到以下条件："><a href="#数据需要经过处理达到以下条件：" class="headerlink" title="数据需要经过处理达到以下条件："></a>数据需要经过处理达到以下条件：</h2><ul><li>DEM的像元类型为Uint16</li><li>影像的像元类型为Uint8</li></ul><h1 id="Blander模型制作"><a href="#Blander模型制作" class="headerlink" title="Blander模型制作"></a>Blander模型制作</h1><h3 id="需要blander插件"><a href="#需要blander插件" class="headerlink" title="需要blander插件"></a>需要blander插件</h3><p>官方版-导入-导出：导入图像为平面</p><h3 id="修改Cycles渲染设置"><a href="#修改Cycles渲染设置" class="headerlink" title="修改Cycles渲染设置"></a>修改Cycles渲染设置</h3><p>Nvidia 30系及以上可以使用OptiX，30系以下使用传统CUDA。AMD使用HIP，Intel显卡使用oneAPI。</p><h3 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h3><p>在数据框的菜单栏中，添加→图像→图像为平面，导入处理好的DOM数据，作为数据底板。或者使用添加数据的快捷操作 Shift+A。</p><p>在属性中修改偏移和选择，把图形居中，相机位置调整到图形正上方，在输出中可以调整输出渲染图像的分辨率。选中相机后在数据页面可以调整相机参数，透视是小孔成像，正交是正射。</p><p>在场景渲染设置中修改渲染引擎和特性集。Cycles效果更好。<br><img src="/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/144d42bbfa3dc39a5229257278439bab.png"></p><p>选择平面模型后，在修改器中修改细分类型，点上自适应细分。<br><img src="/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/a4f1e9e034a208d0fe6ada1e76c65079.png"></p><p>在材质→设置中修改表面置换，改为仅置换。<br><img src="/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/86b5a06b96d9f2299bb4a2af5e8ae4ea.png"></p><p>选择着色器编辑器，添加置换和图形纹理模块，把DOM的纹理置换为空间高度，添加到材质输出中。纹理可以修改为裁剪。将DOM图层作为置换的输入层，将最开始的输入数据替换为影像即可实现贴图效果。<br><img src="/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/a1f17c866ca14682395077c441e6d101.png"></p><p>设置好之后就能看到3D视图中模型出现的变化，通过调整置换中的缩放值，中间值，改变模型的高度效果<br><img src="/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/6dbf57f7709bd03e167e3fd9a4eb3b62.png"></p><p>通过渲染导出可以得到初步效果：<br><img src="/2024/02/20/%E5%9C%B0%E7%90%86%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C-%E4%B8%89%E7%BB%B4%E6%95%88%E6%9E%9C%E6%B8%B2%E6%9F%93%E5%9B%BE/4baedfcfe2686fb8081be295242bb107.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本篇主要记录了从数据处理到模型制作渲染的基本过程，使用Blander制作三维场景可以得到比ArcGIS Scene更好的效果，更高的自由度，但过程也更为繁琐。</p><h2 id="需要掌握的基础知识："><a href="#需要掌握的基础知识：" class="headerlink" title="需要掌握的基础知识："></a>需要掌握的基础知识：</h2><ol><li>基本的GIS知识，包括矢量、栅格等数据的处理。</li><li>掌握Blander的基本用法，理解空间编辑、模型渲染的原理和过程，包括软件设置、数据导入、对象编辑、摄像机设置、光源设置、参数调整、渲染设置等等方面。</li></ol><p>尤其是Blander，对于没接触过三维空间编辑的人来说还是有一些难度。</p><h2 id="下一阶段"><a href="#下一阶段" class="headerlink" title="下一阶段"></a>下一阶段</h2><p>在本篇完成的基本三维模型和制图效果之后，能得到立体感较强的渲染图。而要想实现更好的效果，需要进一步掌握光源用法、模型优化、相机参数调整。<br>关于精细的地理三维模型的用途：可以用于项目展示，沙盘推演，数据底座，文旅收藏品等方面。<br>另外，要将地理三维模型做出实体来的话，手工的难度较大，需要3D打印技术，现在应该是有成熟的彩色3D打印技术服务商的。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>模型</tag>
      
      <tag>地理信息</tag>
      
      <tag>blander</tag>
      
      <tag>三维</tag>
      
      <tag>渲染</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在ArcMap标注中打出分数式</title>
    <link href="/2024/02/02/%E5%A6%82%E4%BD%95%E5%9C%A8ArcMap%E6%A0%87%E6%B3%A8%E4%B8%AD%E6%89%93%E5%87%BA%E5%88%86%E6%95%B0%E5%BC%8F/"/>
    <url>/2024/02/02/%E5%A6%82%E4%BD%95%E5%9C%A8ArcMap%E6%A0%87%E6%B3%A8%E4%B8%AD%E6%89%93%E5%87%BA%E5%88%86%E6%95%B0%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="如何在ArcMap标注中打出分数式"><a href="#如何在ArcMap标注中打出分数式" class="headerlink" title="如何在ArcMap标注中打出分数式"></a>如何在ArcMap标注中打出分数式</h1><h2 id="普通换行表示"><a href="#普通换行表示" class="headerlink" title="普通换行表示"></a>普通换行表示</h2><p>用vb或者python的换行符都可以很简单的实现。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[DLBM]</span> &amp; vbnewline &amp;  <span class="hljs-selector-attr">[DLMC]</span><br></code></pre></td></tr></table></figure><p>效果<br><img src="/2024/02/02/%E5%A6%82%E4%BD%95%E5%9C%A8ArcMap%E6%A0%87%E6%B3%A8%E4%B8%AD%E6%89%93%E5%87%BA%E5%88%86%E6%95%B0%E5%BC%8F/image1.png"></p><h2 id="普通定长分数表示"><a href="#普通定长分数表示" class="headerlink" title="普通定长分数表示"></a>普通定长分数表示</h2><p>只是在换行的基础上加入了一条固定长度的横线。<br>VB语言</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">[DLBM]&amp; vbnew<span class="hljs-type">line</span> &amp; <span class="hljs-string">&quot;——————&quot;</span>  &amp; vbnew<span class="hljs-type">line</span> &amp; [DLMC]<br></code></pre></td></tr></table></figure><p>效果：<br><img src="/2024/02/02/%E5%A6%82%E4%BD%95%E5%9C%A8ArcMap%E6%A0%87%E6%B3%A8%E4%B8%AD%E6%89%93%E5%87%BA%E5%88%86%E6%95%B0%E5%BC%8F/image2.png"></p><p>当分子、分母为多个参数时，比较简单粗暴地做法：<br>Python语言</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs prolog">def <span class="hljs-symbol">FindLabel</span> ( [<span class="hljs-symbol">XBH</span>], [<span class="hljs-symbol">DILEI</span>], [<span class="hljs-symbol">MIANJI</span>], [<span class="hljs-symbol">LINZHONG</span>] ):<br>  return [<span class="hljs-symbol">XBH</span>] +<span class="hljs-string">&quot;-&quot;</span>+ [<span class="hljs-symbol">DILEI</span>] +<span class="hljs-string">&quot;\n&quot;</span>+<span class="hljs-string">&quot;------------&quot;</span>+<span class="hljs-string">&quot;\n&quot;</span>+ [<span class="hljs-symbol">MIANJI</span>] + <span class="hljs-string">&quot;-&quot;</span> + [<span class="hljs-symbol">LINZHONG</span>]<br></code></pre></td></tr></table></figure><h2 id="高级对齐分数表示"><a href="#高级对齐分数表示" class="headerlink" title="高级对齐分数表示"></a>高级对齐分数表示</h2><p>当涉及到对齐的时候，就意味着需要计算分子和分母的长度，比较哪一个更长然后把横线拉长到与其一样的长度，这时候就需要函数的介入了。<br>当然还有一种取巧的方法，就是分子比分母长的时候，直接给分子加下划线，轻松解决长度计算的问题。</p><h3 id="使用下划线直接表示"><a href="#使用下划线直接表示" class="headerlink" title="使用下划线直接表示"></a>使用下划线直接表示</h3><p>当分子比分母长时，用下划线取巧的办法：<br>VB语言函数</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-symbol">Function</span> <span class="hljs-symbol">FindLabel</span> ( [<span class="hljs-symbol">XBH</span>], [地类标注], [面积标注] )<br>  <span class="hljs-symbol">FindLabel</span> = <span class="hljs-string">&quot;&lt;und&gt;&quot;</span>&amp;strLeftSpace&amp; [<span class="hljs-symbol">XBH</span>] &amp;<span class="hljs-string">&quot;-&quot;</span>&amp; [地类标注] &amp; strRightSpace&amp;<span class="hljs-string">&quot;&lt;/und&gt;&quot;</span>&amp;vbnewline&amp; [面积标注] <br><span class="hljs-symbol">End</span> <span class="hljs-symbol">Function</span><br></code></pre></td></tr></table></figure><h3 id="计算分子分母长度的表示"><a href="#计算分子分母长度的表示" class="headerlink" title="计算分子分母长度的表示"></a>计算分子分母长度的表示</h3><p>更加通用的办法：<br>Python语言</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-keyword">FUNCTION</span> str<span class="hljs-built_in">len</span>(str)<br>    <span class="hljs-keyword">dim</span> p_len<br>    p_len=<span class="hljs-number">0</span><br>    strlen=<span class="hljs-number">0</span><br>    p_len=<span class="hljs-built_in">len</span>(str)<br>    <span class="hljs-keyword">FOR</span> xx=<span class="hljs-number">1</span> <span class="hljs-keyword">to</span> p_len<br>        <span class="hljs-keyword">IF</span> <span class="hljs-built_in">asc</span>(<span class="hljs-built_in">mid</span>(str,xx,<span class="hljs-number">1</span>))&lt;<span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>            strlen=<span class="hljs-built_in">int</span>(strlen) + <span class="hljs-number">2</span><br>        <span class="hljs-keyword">ELSE</span><br>            strlen=<span class="hljs-built_in">int</span>(strlen) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">END</span> <span class="hljs-keyword">if</span><br>    <span class="hljs-keyword">NEXT</span><br><span class="hljs-keyword">END</span> <span class="hljs-keyword">function</span><br><span class="hljs-keyword">FUNCTION</span> myFind ( DZM, NAME )<br>    a=str<span class="hljs-built_in">len</span>(dzm) <br>    b=str<span class="hljs-built_in">len</span>(NAME)<br>    <span class="hljs-keyword">IF</span> a&gt;b <span class="hljs-keyword">then</span> <br>       myFind =<span class="hljs-string">&quot;&lt;und&gt;&quot;</span> &amp; DZM &amp; <span class="hljs-string">&quot;&lt;/und&gt;&quot;</span> &amp;  vbnewline &amp; NAME<br>   <span class="hljs-keyword">ELSE</span><br>        str= <span class="hljs-built_in">space</span>((b-a)/<span class="hljs-number">2</span>)<br>        myFind =<span class="hljs-string">&quot;&lt;und&gt;&quot;</span> &amp; str &amp; DZM &amp; str &amp; <span class="hljs-string">&quot;&lt;/und&gt;&quot;</span> &amp; vbnewline &amp; NAME<br>    <span class="hljs-keyword">END</span> <span class="hljs-keyword">if</span><br><span class="hljs-keyword">END</span> <span class="hljs-keyword">Function</span><br><br><span class="hljs-keyword">Function</span> FindLabel ([DLBM],[DLMC])<br>  FindLabel =myFind([DLBM],[DLMC])<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br></code></pre></td></tr></table></figure><p>效果：<br><img src="/2024/02/02/%E5%A6%82%E4%BD%95%E5%9C%A8ArcMap%E6%A0%87%E6%B3%A8%E4%B8%AD%E6%89%93%E5%87%BA%E5%88%86%E6%95%B0%E5%BC%8F/image3.png"></p><h3 id="复杂融合字段的表示"><a href="#复杂融合字段的表示" class="headerlink" title="复杂融合字段的表示"></a>复杂融合字段的表示</h3><p>当处理多个字段组成的标注时，原理也是一样的，先将字段进行字符串组合，再进行长度计算和分数表示。<br>VB语言</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-keyword">Function</span> FindLabel ( [A], [B], [C], [D] ) <br>   <span class="hljs-keyword">Dim</span> fz<br>   <span class="hljs-keyword">Dim</span> fm<br>   fz = <span class="hljs-built_in">len</span>( [A] )+<span class="hljs-built_in">len</span>( [B] ) <br>   fm = <span class="hljs-built_in">len</span>( [C] )+<span class="hljs-built_in">len</span>( [D] )<br>   <span class="hljs-keyword">Dim</span> strLeftSpace<br>   <span class="hljs-keyword">Dim</span> strRightSpace<br>      strLeftSpace=<span class="hljs-string">&quot;&quot;</span><br>      strRightSpace=<span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-keyword">if</span> fm&gt;fz <span class="hljs-keyword">Then</span><br>      <span class="hljs-keyword">For</span> i=<span class="hljs-number">0</span> <span class="hljs-keyword">To</span> (fm-fz)/<span class="hljs-number">2</span><br>      strLeftSpace=strLeftSpace+<span class="hljs-built_in">chr</span>(<span class="hljs-number">32</span>)<br>      strRightSpace=strRightSpace+<span class="hljs-built_in">chr</span>(<span class="hljs-number">32</span>)<br>      <span class="hljs-keyword">Next</span><br>   <span class="hljs-keyword">End</span> <span class="hljs-keyword">if</span> <br><br>FindLabel = <span class="hljs-string">&quot;&lt;und&gt;&quot;</span>&amp;strLeftSpace&amp; [A] &amp;<span class="hljs-string">&quot;-&quot;</span>&amp; [B] &amp; strRightSpace&amp;<span class="hljs-string">&quot;&lt;/und&gt;&quot;</span>&amp;vbnewline&amp;[C]&amp;<span class="hljs-string">&quot;-&quot;</span>&amp;[D]<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br></code></pre></td></tr></table></figure><p>使用样例：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-keyword">Function</span> FindLabel ( [XBH] , [地类标注]  , [面积标注] , [树种标注] ) <br>   <span class="hljs-keyword">Dim</span> fz<br>   <span class="hljs-keyword">Dim</span> fm<br>   fz = <span class="hljs-built_in">len</span>(  [XBH] )+<span class="hljs-built_in">len</span>([地类标注] ) <br>   fm = <span class="hljs-built_in">len</span>(  [面积标注] )+<span class="hljs-built_in">len</span>( [树种标注] )<br>   <span class="hljs-keyword">Dim</span> strLeftSpace<br>   <span class="hljs-keyword">Dim</span> strRightSpace<br>      strLeftSpace=<span class="hljs-string">&quot;&quot;</span><br>      strRightSpace=<span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-keyword">if</span> fm&gt;fz <span class="hljs-keyword">Then</span><br>      <span class="hljs-keyword">For</span> i=<span class="hljs-number">0</span> <span class="hljs-keyword">To</span> (fm-fz)/<span class="hljs-number">2</span><br>      strLeftSpace=strLeftSpace+<span class="hljs-built_in">chr</span>(<span class="hljs-number">32</span>)<br>      strRightSpace=strRightSpace+<span class="hljs-built_in">chr</span>(<span class="hljs-number">32</span>)<br>      <span class="hljs-keyword">Next</span><br>   <span class="hljs-keyword">End</span> <span class="hljs-keyword">if</span> <br><br>FindLabel = <span class="hljs-string">&quot;&lt;und&gt;&quot;</span>&amp;strLeftSpace&amp;  [XBH] &amp;<span class="hljs-string">&quot;-&quot;</span>&amp;[地类标注] &amp; strRightSpace&amp;<span class="hljs-string">&quot;&lt;/und&gt;&quot;</span>&amp;vbnewline&amp; [面积标注]&amp;<span class="hljs-string">&quot;-&quot;</span>&amp; [树种标注]<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br><br></code></pre></td></tr></table></figure><h2 id="高级三分式表示"><a href="#高级三分式表示" class="headerlink" title="高级三分式表示"></a>高级三分式表示</h2><p>这是用到的领域了，在做地籍图的时候会经常有这样的三分式，但是那些一般用CAD做，用GIS做的很少。先记录一下方法以备不时之需。</p><h3 id="后三分式"><a href="#后三分式" class="headerlink" title="后三分式"></a>后三分式</h3><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs vbscript">Python语言<br><span class="hljs-keyword">FUNCTION</span> str<span class="hljs-built_in">len</span>(str)<br>   <span class="hljs-keyword">dim</span> p_len<br>   p_len=<span class="hljs-number">0</span><br>   strlen=<span class="hljs-number">0</span><br>   p_len=<span class="hljs-built_in">len</span>(str)<br>   <span class="hljs-keyword">FOR</span> xx=<span class="hljs-number">1</span> <span class="hljs-keyword">to</span> p_len<br>        <span class="hljs-keyword">IF</span> <span class="hljs-built_in">asc</span>(<span class="hljs-built_in">mid</span>(str,xx,<span class="hljs-number">1</span>))&lt;<span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>            strlen=<span class="hljs-built_in">int</span>(strlen) + <span class="hljs-number">2</span><br>        <span class="hljs-keyword">ELSE</span><br>            strlen=<span class="hljs-built_in">int</span>(strlen) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">END</span> <span class="hljs-keyword">if</span><br>   <span class="hljs-keyword">NEXT</span><br><span class="hljs-keyword">END</span> <span class="hljs-keyword">function</span><br><span class="hljs-keyword">FUNCTION</span> myFind(cunname,DJH,SHAPE_Area)<br>    <span class="hljs-keyword">dim</span> str<br>    str=SHAPE_Area<br>    <span class="hljs-keyword">dim</span> d<br>    d=str<span class="hljs-built_in">len</span>(str)<br>    <span class="hljs-keyword">dim</span> d1<br>    <span class="hljs-keyword">dim</span> d2<br>    d1=str<span class="hljs-built_in">len</span>(cunname) /<span class="hljs-number">2</span><br>    <span class="hljs-keyword">if</span> d1&lt;<span class="hljs-number">1</span> <span class="hljs-keyword">then</span>  <br>        d1=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br>    d2=str<span class="hljs-built_in">len</span>(DJH) /<span class="hljs-number">2</span><br>    <span class="hljs-keyword">if</span> d2&lt;<span class="hljs-number">1</span> <span class="hljs-keyword">then</span>  <br>        d2=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br>    <span class="hljs-keyword">if</span> d2&gt;d1 <span class="hljs-keyword">then</span><br>         d1=d2<br>   <span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span> <br>    myFind = cunname &amp; <span class="hljs-built_in">space</span>(d) &amp; vbnewline  &amp; <span class="hljs-built_in">string</span>(d1,<span class="hljs-string">&quot;—&quot;</span>) &amp; str &amp; vbnewline &amp; DJH &amp; <span class="hljs-built_in">space</span>(d)<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">Function</span><br><br><span class="hljs-keyword">Function</span> FindLabel ([DLBM],[DLMC],[TBMJ])<br>    FindLabel = myFind([DLBM],[DLMC],[TBMJ])<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br></code></pre></td></tr></table></figure><p>效果<br><img src="/2024/02/02/%E5%A6%82%E4%BD%95%E5%9C%A8ArcMap%E6%A0%87%E6%B3%A8%E4%B8%AD%E6%89%93%E5%87%BA%E5%88%86%E6%95%B0%E5%BC%8F/image4.png"></p><h3 id="前三分式"><a href="#前三分式" class="headerlink" title="前三分式"></a>前三分式</h3><p>Python语言</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs vbscript"><span class="hljs-keyword">FUNCTION</span> str<span class="hljs-built_in">len</span>(str)<br>   <span class="hljs-keyword">dim</span> p_len<br>   p_len=<span class="hljs-number">0</span><br>   strlen=<span class="hljs-number">0</span><br>   p_len=<span class="hljs-built_in">len</span>(str)<br>   <span class="hljs-keyword">FOR</span> xx=<span class="hljs-number">1</span> <span class="hljs-keyword">to</span> p_len<br>        <span class="hljs-keyword">IF</span> <span class="hljs-built_in">asc</span>(<span class="hljs-built_in">mid</span>(str,xx,<span class="hljs-number">1</span>))&lt;<span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>            strlen=<span class="hljs-built_in">int</span>(strlen) + <span class="hljs-number">2</span><br>        <span class="hljs-keyword">ELSE</span><br>            strlen=<span class="hljs-built_in">int</span>(strlen) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">END</span> <span class="hljs-keyword">if</span><br>   <span class="hljs-keyword">NEXT</span><br><span class="hljs-keyword">END</span> <span class="hljs-keyword">function</span><br><span class="hljs-keyword">FUNCTION</span> myFind(cunname,DJH,SHAPE_Area)<br>    <span class="hljs-keyword">dim</span> str<br>    str=SHAPE_Area<br>    <span class="hljs-keyword">dim</span> d<br>    d=str<span class="hljs-built_in">len</span>(str)<br>    <span class="hljs-keyword">dim</span> d1<br>    <span class="hljs-keyword">dim</span> d2<br>    d1=str<span class="hljs-built_in">len</span>(cunname) /<span class="hljs-number">2</span><br>    <span class="hljs-keyword">if</span> d1&lt;<span class="hljs-number">1</span> <span class="hljs-keyword">then</span>  <br>        d1=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br>    d2=str<span class="hljs-built_in">len</span>(DJH) /<span class="hljs-number">2</span><br>    <span class="hljs-keyword">if</span> d2&lt;<span class="hljs-number">1</span> <span class="hljs-keyword">then</span>  <br>        d2=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br>    <span class="hljs-keyword">if</span> d2&gt;d1 <span class="hljs-keyword">then</span><br>        d1=d2<br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span><br>    myFind =<span class="hljs-string">&quot;　&quot;</span> &amp; <span class="hljs-built_in">space</span>(d<span class="hljs-number">-1</span>) &amp;cunname &amp; vbnewline  &amp; str &amp; <span class="hljs-built_in">string</span>(d1, <span class="hljs-string">&quot;—&quot;</span>) &amp; vbnewline &amp; <span class="hljs-built_in">space</span>(d) &amp; DJH<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">Function</span><br><span class="hljs-comment">&#x27;编制日期:2020-07-30</span><br><span class="hljs-keyword">Function</span> FindLabel ([DLBM],[DLMC],[TBMJ])<br>    FindLabel = myFind([DLBM],[DLMC],[TBMJ])<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br></code></pre></td></tr></table></figure><p>效果<br><img src="/2024/02/02/%E5%A6%82%E4%BD%95%E5%9C%A8ArcMap%E6%A0%87%E6%B3%A8%E4%B8%AD%E6%89%93%E5%87%BA%E5%88%86%E6%95%B0%E5%BC%8F/image5.png"></p><p>参考原文：<a href="https://blog.csdn.net/qq_31207571/article/details/120238003">https://blog.csdn.net/qq_31207571/article/details/120238003</a></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>分数式</tag>
      
      <tag>标注</tag>
      
      <tag>Arcmap</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AirDroid实现远程控制手机</title>
    <link href="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/"/>
    <url>/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="安卓设备的远程控制"><a href="#安卓设备的远程控制" class="headerlink" title="安卓设备的远程控制"></a>安卓设备的远程控制</h1><h2 id="主要用途"><a href="#主要用途" class="headerlink" title="主要用途"></a>主要用途</h2><p>直接定位家里孩子或老人的手机，防止走丢，远程协助；电脑接收手机的通知和短信，获取屏幕镜像；以及，远程打卡。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="被控制手机配置"><a href="#被控制手机配置" class="headerlink" title="被控制手机配置"></a>被控制手机配置</h3><p>被控制的手机上需要安装AirDroid，并且尽可能多的开启权限。因此尽量不要使用自己的常用手机作为被控手机，尽量不要在被控制手机上存放隐私资料，远程控制是一把双刃剑，谨防重要个人信息泄露。</p><h3 id="电脑控制手机"><a href="#电脑控制手机" class="headerlink" title="电脑控制手机"></a>电脑控制手机</h3><p>网页端<br>这界面还挺好看的，我爱说实话。<br><a href="https://web.airdroid.cn/?lang=zh-cn">https://web.airdroid.cn/?lang=zh-cn</a></p><p><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/web%E7%AB%AF%E7%95%8C%E9%9D%A2.png" alt="web端界面"></p><p>软件端<br>可以在电脑上安装AirDroid桌面端软件，这样更好的体验稳定的远程控制。只满足基本需求的话用网页就可以。</p><h3 id="手机控制手机"><a href="#手机控制手机" class="headerlink" title="手机控制手机"></a>手机控制手机</h3><p>AirDroid手机端是被控制软件，没有控制其他设备的功能，需要在控制手机上安装AirMirror，然后登录同一个账号，然后就可以在设备列表中看到另外一部手机，点击设备即可远程查看和控制安装AirDroid的手机。<br><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/%E6%89%8B%E6%9C%BA%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%95%8C%E9%9D%A2.png" alt="手机远程控制界面"></p><p>远程控制效果，可能会有点糊，操作有些卡，但勉强能用。<br><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/%E6%89%8B%E6%9C%BA%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%95%88%E6%9E%9C.png" alt="手机远程控制效果"></p><h2 id="AirDroid软件族简单介绍"><a href="#AirDroid软件族简单介绍" class="headerlink" title="AirDroid软件族简单介绍"></a>AirDroid软件族简单介绍</h2><p>AirDroid 族群主要实现的功能是对手机的控制，包括手机连手机、电脑连手机，但不支持手机控制电脑。控制电脑可以用向日葵、teamviewer等专门的软件。</p><ul><li>AirDroid Business 商业版的多合一软件，个人用户暂时不考虑<br><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/AirDroid_Business.png" alt="AirDroidBusiness"></li><li>AirDroid Remote Support 支持远程控制、手势引导、实时聊天，算是普通AirDroid的升级版，不需要额外功能可以不用。<br><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/AirDroid_Remote_Support.png" alt="AirDroidRemoteSupport"></li><li>AirDroid 个人版 可以跨平台传输文件，支持控制手机，有Web、Windows、Mac、Android、iOS多个平台的版本支持。被控制设备必须下载。<br><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/AirDroid%E4%B8%AA%E4%BA%BA%E7%89%88%E4%BB%8B%E7%BB%8D.png" alt="AirDroid个人版介绍"></li><li>AirMirror 从手机远程控制其他手机，支持Android和iOS，和被控制手机登录同一个账户即可远程控制。远程连接其他设备的话有使用时长限制。<br><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/AirMirror%E4%BB%8B%E7%BB%8D.png" alt="AirMirror介绍"></li><li>AirDroid Cast 投屏应用，可以将画面投射到电脑、手机、AndroidTV上，可以无线或有线连接，需要在同一局域网。<br><img src="/2024/01/10/AirDroid%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%89%8B%E6%9C%BA/AirDroidCast.png" alt="AirDroidCast"></li></ul>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>手机</tag>
      
      <tag>远程控制</tag>
      
      <tag>钉钉打卡</tag>
      
      <tag>AirDroid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云端部署视频传输业务CMSS</title>
    <link href="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/"/>
    <url>/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/</url>
    
    <content type="html"><![CDATA[<p>前提条件：有一台运行Windows实例的服务器</p><h1 id="安装服务器端的程序包"><a href="#安装服务器端的程序包" class="headerlink" title="安装服务器端的程序包"></a>安装服务器端的程序包</h1><p>CMSServer.exe程序内包含的其实是多项服务器进程，比如什么登录啊、用户管理啊、数据存储啊之类的，它应该是支持分布式安装的，可以将各种进程跑在不同的服务器上。当然本次一站式部署不涉及这种情况。</p><p>在选择安装路径和缓存路径时需要注意，其他IP地址、端口等一般默认就可以。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%851.png" alt="服务器端程序安装"></p><p>装好之后会自动跳出服务器管理界面，此时还不需要做改动。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8F.png" alt="服务器管理程序"></p><p>并且得到一个ReadMe文档，文档可以在<strong>服务器安装目录</strong>找到，也可以在windows程序菜单下找到。文档会说明IP端口、<strong>管理员账户和密码</strong>。</p><h1 id="平台访问"><a href="#平台访问" class="headerlink" title="平台访问"></a>平台访问</h1><p>用本地端个人电脑直接访问地址后可以在主界面下载各个平台的客户端<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E5%B9%B3%E5%8F%B0%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="平台登录界面"></p><p>在本地也可以用客户端进行访问了。客户端的功能会更加全面一些，尤其是要使用视频监控和回放等功能的时候。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%95%8C%E9%9D%A2.png" alt="客户端界面"></p><p>从说明书和软件界面也可以了解到，这是一款集成度非常高的软件，它包含了地图定位、车辆管理业务板块、数据库管理、信息汇总等等很多内容，视频监控和回传保存只是它功能的一部分而已。</p><h1 id="图传设置"><a href="#图传设置" class="headerlink" title="图传设置"></a>图传设置</h1><p>接下来的问题是如何设置视频的发送端，让它能够连接上服务器，并且往里头传画面。</p><h2 id="图传模块设置"><a href="#图传模块设置" class="headerlink" title="图传模块设置"></a>图传模块设置</h2><p>图传模块需要进行IP设置，将IP设置成服务器的地址，端口号不要改。</p><h3 id="手机App连接"><a href="#手机App连接" class="headerlink" title="手机App连接"></a>手机App连接</h3><p>个人觉得手机连接比较方便，先介绍手机连接方式。</p><ol><li>设备启动后，会在一分钟内运行在AP模式下，该模式下图传模块自己是一个<strong>热点</strong>，可以用手机直接搜索附近的WIFI，找到它并连接。</li><li>打开手机端App，不用登录，点击右边的<strong>搜索</strong>按钮，在连上设备热点的情况下可以找到一个设备。然后点击进入，设备管理的初始密码是Adm_123。</li><li>进入后找到<strong>网络设置</strong>，把IP地址改成服务器的IP，或者服务器有域名的话也可以使用域名，端口号默认6608，不能改！<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E6%89%8B%E6%9C%BAAPP%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%B9%B3%E5%8F%B0IP%E8%AE%BE%E7%BD%AE.png" alt="手机APP上进行平台IP设置"></li></ol><h3 id="电脑连接"><a href="#电脑连接" class="headerlink" title="电脑连接"></a>电脑连接</h3><p>电脑连接比较麻烦，推荐使用手机连接。但是电脑画面好。</p><ol><li>图传模块的设备默认IP为192.168.1.253，需要将电脑网络接口的IP也设置在同一子网下，才可以进行连接。</li><li>进入电脑的网络修改界面，把电脑的IP地址改成192.168.1.123，网关设成192.168.1.0。</li><li>接上以后可以使用MVMS_NetPlayer软件查看设备连接、图传画面，这个软件可以在网上随便下到。</li><li>也可以用浏览器直接访问模块的IP，进入系统设置界面。和手机上有点类似。主要是在模块中设置服务器端的IP地址，让它知道该往哪发送视频流。</li></ol><h2 id="服务器端设置"><a href="#服务器端设置" class="headerlink" title="服务器端设置"></a>服务器端设置</h2><p>首先需要在运营管理→公司信息中，添加一个公司。只要输入公司名称和主账户就行了，很多内容可以不填。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E5%85%AC%E5%8F%B8%E7%AE%A1%E7%90%86_%E6%96%B0%E5%BB%BA%E6%89%80%E5%B1%9E%E5%85%AC%E5%8F%B8.png" alt="公司管理_新建所属公司"></p><p>然后在设备管理中，就可以添加发送端设备了。如果是已经将设备IP配置好，那么设备联网后就会出现在未注册设备的目录中，点开看一下把它加上就行。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E6%B7%BB%E5%8A%A0%E6%9C%AA%E6%B3%A8%E5%86%8C%E7%9A%84%E8%AE%BE%E5%A4%87.png" alt="添加未注册的设备"></p><p>在添加设备的时候最重要的是设备编号和所属公司，设备编号可以进入图传模块的设置里更改。也可以提前设置好设备号，这样当设备接入以后，就会自动匹配设备号发送画面。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E7%9B%B4%E6%8E%A5%E8%BE%93%E5%85%A5%E8%AE%BE%E5%A4%87%E5%8F%B7%E6%B7%BB%E5%8A%A0%E6%96%B0%E8%AE%BE%E5%A4%87.png" alt="直接输入设备号添加新设备"></p><h2 id="关于视频保存"><a href="#关于视频保存" class="headerlink" title="关于视频保存"></a>关于视频保存</h2><p>在信号发射端插入sim卡联网后，就会自动向设置好的IP地址传输视频流信号了，但此时并不会在服务器端保存视频画面。如果设备上插入了TF卡的话，倒是会保存在TF卡上。要想视频保存在服务器，就需要在服务器管理程序中设置。<br>选择<strong>存储服务器配置</strong>，选择存储视频画面的硬盘，并且可以设置相关的存储大小、时间间隔，把<strong>存储实时视频改为yes</strong>，最后点保存，完成配置。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BF%9D%E5%AD%98%E8%A7%86%E9%A2%91%E6%B5%81%E7%9A%84%E8%AE%BE%E7%BD%AE.png" alt="服务器保存视频流的设置"></p><p>之后视频会保存在服务器上，在选择的硬盘下，会新建一个gStorage/STOMEDIA/【设备编号】/【日期】的文件夹里。<br>即使没有视频信号，只要发射器能够连上服务器，也会有一个无信号的蓝屏画面。<br><img src="/2023/12/29/%E4%BA%91%E7%AB%AF%E9%83%A8%E7%BD%B2%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E4%B8%9A%E5%8A%A1CMSS/%E4%BF%9D%E5%AD%98%E8%A7%86%E9%A2%91%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%92%8C%E6%A0%BC%E5%BC%8F.png" alt="保存视频的位置和格式"></p><h2 id="关于软件延迟"><a href="#关于软件延迟" class="headerlink" title="关于软件延迟"></a>关于软件延迟</h2><p>服务器端的画面延迟大概在5s左右。用电脑或者手机直接连接模块，延迟大概0.5s左右。<br>另外，双路视频画面会对网络负担比较大，而主码流和子码流这种概念是海康威视提的，主码流画质高、占用带宽资源多，一般用于存储；子码流相对清晰度低，占用资源少，用于网传，保证视频的实时和流畅。需要清晰度的时候可以切换成主码流。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>腾讯云</tag>
      
      <tag>视频</tag>
      
      <tag>图传</tag>
      
      <tag>windows</tag>
      
      <tag>云端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云服务器使用方法_腾讯云</title>
    <link href="/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    <url>/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/</url>
    
    <content type="html"><![CDATA[<p>以腾讯云为例子，记录一下云服务器的基本使用方法和部署流程</p><h2 id="云服务器购买与配置"><a href="#云服务器购买与配置" class="headerlink" title="云服务器购买与配置"></a>云服务器购买与配置</h2><p>腾讯服务器购买后，可以在购买账号的信箱内，可以找到服务器的IP、用户名、密码。这些重要信息一定要妥善保管。<br><img src="/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%B6%88%E6%81%AF.png" alt="腾讯云消息"><br>云服务器的配置、使用时长等都在<strong>腾讯云的网页</strong>上进行管理，操作系统也是在购买时就可以选择并预装的。例如本次使用的Windows server系统在登录过程中就不会遇到对普通人不友好的黑框命令行界面。另外关于服务器使用的方法在腾讯云网站上也有很多文档可以查看，一些基础的东西可以直接在上面找到。</p><p>另外，如果有单独购买的数据盘服务也是需要在腾讯云的网页里进行<strong>挂载</strong>，挂载之后才能在服务器的<strong>磁盘管理</strong>里面看到，相当于把硬盘插上电脑。但是新硬盘还需要在磁盘管理中进行初始化和分区，分配盘符才能正常使用，和本地计算机是一样的。<br><img src="/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86.png" alt="磁盘管理"></p><h2 id="首次登录要做的事情"><a href="#首次登录要做的事情" class="headerlink" title="首次登录要做的事情"></a>首次登录要做的事情</h2><p>第一次登录可以使用腾讯云的网页，可以先上去把密码改了，不然一串乱码真的不好记不好用。另外第一次登录的是管理员账号，如果需要对访客进行限制的话，可以把系统账号也注册一下，设置专用的访客账号。</p><h2 id="使用远程桌面连接"><a href="#使用远程桌面连接" class="headerlink" title="使用远程桌面连接"></a>使用远程桌面连接</h2><p>在确认服务器允许使用远程连接后，打开Windows系统自带的远程桌面连接程序，输入网址或服务器IP地址。（网址的话就是要去域名注册网站去买）<br>成果登录的<strong>必要条件</strong>：</p><ul><li>IP地址或域名</li><li>Windows系统的账号或密码</li><li>服务器允许远程连接（买到云服务器一般默认允许）<br><img src="/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5.png" alt="远程桌面连接"></li></ul><h3 id="关于数据传输"><a href="#关于数据传输" class="headerlink" title="关于数据传输"></a>关于数据传输</h3><p>在启动远程连接之前，如果想和服务器之间传文件的话，为了方便可以点左下角的显示选项，进行本地设备的配置，把本地的硬盘连接到远程服务器上，这样就可以直接在远程服务器上调用本地的硬盘数据。<br><img src="/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E8%AE%BE%E7%BD%AE.png" alt="数据传输设置"></p><h2 id="补充的说明"><a href="#补充的说明" class="headerlink" title="补充的说明"></a>补充的说明</h2><p>一般在使用远程连接之前，需要看一下服务器是否允许使用远程连接。因为是云服务器，所以这一项一般默认是开启动，否则那机器都放在机房里，怎么打开进行设置。如果是自己购买和部署的服务器（自己买机器自己拉专线的），那可能就需要自己去设置一下。<br><img src="/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%AE%B8%E5%8F%AF.png" alt="远程连接许可"></p><h2 id="关于账户管理"><a href="#关于账户管理" class="headerlink" title="关于账户管理"></a>关于账户管理</h2><p>服务器默认使用的是管理员账户登录，但如果遇到一些比较复杂的情况，比如要部署的业务比较复杂，需要让乙方也登录到服务器的系统界面帮助配置业务，那么为了安全考虑就可以另外设置访客账户。<br><img src="/2023/12/29/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E8%85%BE%E8%AE%AF%E4%BA%91/%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7.png" alt="新建用户"></p><h2 id="其他方面的补充说明"><a href="#其他方面的补充说明" class="headerlink" title="其他方面的补充说明"></a>其他方面的补充说明</h2><ul><li><p>windows系统的服务器的优点就是界面完善，自带多种工具功能，windows server和平时使用的windows个人电脑是非常相似的，运行起来就像平时电脑开机一样简单自然。而它的缺点是比较占用硬件资源，冗余进程比较多，处理器不行还带不动。还有系统本很比较复杂，后期的维护会比较麻烦，还有一些组件和代码在Windows系统上跑会遇到各种问题。比如一些机器学习服务器就一般用Linex系统，还有一些机关单位为了保密也不会用Windows。</p></li><li><p>在服务器上运行程序和在个人电脑上一样。若遇到有组件或者依赖库缺失的话，就根据提示在自己电脑上下载，再传到服务器里进行安装。服务器资源非常宝贵，不要随便在上面装软件，比如offic，WPS这种东西。</p></li><li><p>服务器的对外链接主要是需要固定IP，另外服务器的稳定运行需要良好的物理环境，尤其是在防尘、散热方面，这些条件在大企业的机房就比较容易实现。在短时间内使用服务器，租比买划算一些。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>腾讯云</tag>
      
      <tag>windows</tag>
      
      <tag>网络</tag>
      
      <tag>部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OSGB模型压缩测试</title>
    <link href="/2023/12/21/OSGB%E6%A8%A1%E5%9E%8B%E5%8E%8B%E7%BC%A9%E6%B5%8B%E8%AF%95/"/>
    <url>/2023/12/21/OSGB%E6%A8%A1%E5%9E%8B%E5%8E%8B%E7%BC%A9%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="OSGB模型压缩测试"><a href="#OSGB模型压缩测试" class="headerlink" title="OSGB模型压缩测试"></a>OSGB模型压缩测试</h1><h3 id="计算机配置"><a href="#计算机配置" class="headerlink" title="计算机配置"></a>计算机配置</h3><ul><li>CPU：i5-13600KF</li><li>GPU：4060TI</li><li>内存：32GB 4800MHz</li><li>磁盘：Predator SSD GM7 M.2 1TB<h2 id="软件选择"><a href="#软件选择" class="headerlink" title="软件选择"></a>软件选择</h2></li><li>三维工厂  以前了解过，但很少使用。现在更新了版本。</li><li>MeshLab  强力的模型处理软件，但不支持osgb</li><li>OSGBlab  倾斜摄影模型的处理软件，虽然界面简单但非常实用。主要功能是进行osgb模型与各种其他格式的转换，例如osgb转3Dtiles。在2.9.41版本后添加了模型压缩功能。</li></ul><h1 id="开始压缩测试"><a href="#开始压缩测试" class="headerlink" title="开始压缩测试"></a>开始压缩测试</h1><h2 id="OSGBlab"><a href="#OSGBlab" class="headerlink" title="OSGBlab"></a>OSGBlab</h2><p>软件版本：2.9.99<br>OSGBlab试用版在功能上与正式版功能一致，只是处理10G以上的模型时会有水印。</p><p>使用OSGBlab对OSGB模型进行压缩的测试。<br><img src="/a6c3cb18a7aad1eab4493d48a33c373e.png" alt="a6c3cb18a7aad1eab4493d48a33c373e.png"></p><p>处理后模型的大小显著减少，大概能减少一半体积。<br><img src="/62ce4e38821ab46481235126415fb3da.png" alt="62ce4e38821ab46481235126415fb3da.png"></p><h3 id="压缩前"><a href="#压缩前" class="headerlink" title="压缩前"></a>压缩前</h3><p>体积：42GB<br><img src="/d173f2daaabe03e4834524636d7056ce.png" alt="d173f2daaabe03e4834524636d7056ce.png"></p><h3 id="压缩测试1-中等参数"><a href="#压缩测试1-中等参数" class="headerlink" title="压缩测试1-中等参数"></a>压缩测试1-中等参数</h3><p>【参数：简化80，贴图质量49】<br>压缩时间：约十分钟<br>压缩结果：24.6GB<br><img src="/d7f3ed7149705f72131f483cd0d27a20.png" alt="d7f3ed7149705f72131f483cd0d27a20.png"></p><h3 id="压缩测试2-极限参数"><a href="#压缩测试2-极限参数" class="headerlink" title="压缩测试2-极限参数"></a>压缩测试2-极限参数</h3><p>【参数：简化100，贴图质量20】<br>压缩时间：约十分钟<br>压缩结果：23.1GB<br><img src="/35940cfc4194ec2213dbddac5257c726.png" alt="35940cfc4194ec2213dbddac5257c726.png"></p><p>几乎没有肉眼可见的质量损失，效果非常不错，可能是得益于压缩算法的设定比较保守。但是这个压缩率显然有限，10个G的模型变成5个G很好，100G的模型变成50个G，还是很大，在本地查看还行，放在服务器上就太大了。总体来说还是有用的，可以作为优化存储空间的方式。</p><h2 id="三维工厂"><a href="#三维工厂" class="headerlink" title="三维工厂"></a>三维工厂</h2><p>三维工厂：K3D Maker<br>软件版本：V3.2.35<br>和osgblab一样未授权的软件会有水印</p><p>使用三维工厂对OSGB模型进行压缩的测试。<br><img src="/17737b008d680cec3dc21b01062dbec2.png" alt="17737b008d680cec3dc21b01062dbec2.png"></p><h3 id="极限测试"><a href="#极限测试" class="headerlink" title="极限测试"></a>极限测试</h3><p>【参数：模型质量极简，纹理质量极简，网格质量低】网格质量怕坍塌，就没选最后两项。<br>压缩时间：45秒<br>压缩结果：459MB！</p><p><img src="/d4839721163a232f6c2f53bc43bcceb3.png" alt="d4839721163a232f6c2f53bc43bcceb3.png"></p><p>放远了看还可以<br><img src="/9edaeec6912031dcbc3de750b96722a4.png" alt="9edaeec6912031dcbc3de750b96722a4.png"></p><h3 id="普通测试"><a href="#普通测试" class="headerlink" title="普通测试"></a>普通测试</h3><p>【参数：模型质量中，纹理质量中，网格质量高】使用默认设置。<br>压缩时间：7分钟<br>压缩结果：7.14GB！</p><p><img src="/9737db21b7ed5b91e270a381d0f5bfb1.png" alt="9737db21b7ed5b91e270a381d0f5bfb1.png"></p><p>看起来和原模型差别并不大，效果相当不错。而且在普通参数和极限参数之间还有可以调整的空间。</p><h3 id="关于价格"><a href="#关于价格" class="headerlink" title="关于价格"></a>关于价格</h3><p>顺便了解了一下价格，还真不贵，属于个人也能用得起的价格。记得原先是挺贵的，现在的价格是原先的一折。<br><img src="/f57499af8d9fcd12b8625d680646461e.png" alt="f57499af8d9fcd12b8625d680646461e.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>osgblab的表现在预期内，三维工厂超出预期。<br>没想到三维工厂非常厉害，而osgblab的设定非常保守。<br>如果是需要大场景的osgb转3dtiles放到服务器上，还得是三维工厂。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>模型</tag>
      
      <tag>软件</tag>
      
      <tag>osgb</tag>
      
      <tag>压缩</tag>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>地理信息数据处理流程的个人总结</title>
    <link href="/2023/12/18/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <url>/2023/12/18/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="关于地理信息处理工作的方法总结"><a href="#关于地理信息处理工作的方法总结" class="headerlink" title="关于地理信息处理工作的方法总结"></a>关于地理信息处理工作的方法总结</h1><p>不知不觉，也已经工作三年了，关于自己的一些工作方法想在此总结一下，温故而知新。同时也方便以后教别人。</p><h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><p>首先要弄清楚项目的具体情况。可以从一下三点开始入手：</p><ol><li>目标成果是什么样的</li><li>当前有哪些原材料</li><li>当前的资料能否构建出成果</li></ol><p>然后分好参考资料、过程、成果三个文件夹。</p><p>如果遇到困难的话，也是从这几方面去寻找突破：参考别人的成果；找发任务的人要资料、数据；思考成果构建的路径和过程。第三点可能需要一些积累，但并不会很难很多，要在平时注意积累。</p><h2 id="关于软件选择"><a href="#关于软件选择" class="headerlink" title="关于软件选择"></a>关于软件选择</h2><p>大部分情况下，个人更倾向于用功能更多，兼容性更好的Arcgis。</p><p>用CASS主要是图它在制图方面的一些独特便利，以及满足地形图这种特定的专业制图需求。平时一般的矢量处理和计算都是能用GIS就不会碰CASS。</p><h3 id="ArcGIS"><a href="#ArcGIS" class="headerlink" title="ArcGIS"></a>ArcGIS</h3><p>最为经典的地理信息软件，平时用的最多的软件，想必不用再过多描述，简单讲讲它能做的事情：</p><ul><li>基本矢量数据处理</li><li>MDB、GDB数据库构建</li><li>专题地图制作和批量出图</li><li>深度数据分析</li><li>影像处理</li><li>Python和模型构建器</li><li>数据质检</li><li>网络多人协同</li></ul><p>但它也有一些缺点：</p><ul><li>总体上好用，但是处理大规模数据时会卡顿</li><li>软件性能有限，及时换上最新的电脑，效率也并不会进一步提高许多。</li></ul><p>这些缺点在ArcGIS pro上有一些改善，尤其是大规模数据的加载速度，真的快了很多，但占用资源也相当大。Pro也有它自己的问题，需要逐渐完善。</p><h3 id="CASS-for-CAD"><a href="#CASS-for-CAD" class="headerlink" title="CASS for CAD"></a>CASS for CAD</h3><p>除了常用的CASS9.1 for CAD2008，还可以用CASS11 for CAD2022，新CASS融入了。当然软件体积也更大了，运行也更耗性能，根据实际情况使用。</p><p>CAD是直角坐标系，所以在CAD上处理地理信息数据，那一定是投影坐标系。CASS插件使得CAD具有处理小范围地理信息数据的能力，不多但够用，甚至在某些方面还有独特的专长。但是我个人并不喜欢用CASS，因为处理大规模数据时，效率太低了，还是专业的地理信息软件更好。不过在有些时候还是不得不用的。</p><h4 id="一-界址点坐标表。"><a href="#一-界址点坐标表。" class="headerlink" title="一 界址点坐标表。"></a>一 界址点坐标表。</h4><p>做这种界址点坐标表，只有CASS比较方便。<br><img src="/2023/12/18/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/e207535835cab84e65c027d826cc5bb3.png" alt="e207535835cab84e65c027d826cc5bb3.png"></p><h4 id="二-标准地形图"><a href="#二-标准地形图" class="headerlink" title="二 标准地形图"></a>二 标准地形图</h4><p>这个图式、这种线条、以及涉及到数据的编码和样式；等信息，这种就只能使用CASS或者其他企业的付费专业软件了，没办法。不过现在随着信息技术的发展，地形图已经落伍了，现在需要更复杂的空间实体结构来描述世界万物间的关系，以后是实景三维和多维度数据结构的时代了。<br><img src="/2023/12/18/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/170cf62abbef44e83141281f599ac648.png" alt="170cf62abbef44e83141281f599ac648.png"></p><h3 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h3><p>虽然ArcGIS是行业标杆，但它也不是万能的，在一些细分领域国产软件会有更大的本土化优势，而在地图、三维、复杂结构数据等方面，也需要掌握一些处理手段。</p><ul><li>地图软件：奥维地图、谷谷GIS、谷歌地球(大陆版)</li><li>其他GIS软件：QGIS</li><li>三维模型软件：OSGBlab、三维工厂</li><li>其他数据处理软件：FME</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>参考资料的搜集和整理，是决定了任务是否顺利的重要前提，有条件一定要争取弄到更多更好的资料，并且及时清点。<br>有些时候也会遇到资料收集困难，弄到的资料过于古老。比如有一次要找村庄的土地权属范围，结果只拿到了纸质版的土地证，自己手动校准影像，抠权属范围……还好只是制作示意图，精度要求不高。这种数据理论上肯定是存在电子版矢量数据的，只是我找不到以前负责测量的单位，政府的数据管理也存在一些断层，困难重重，没有必要。</p><p><img src="/2023/12/18/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/9664ee96e9c2eaba9080839dc751f422.png" alt="9664ee96e9c2eaba9080839dc751f422.png"></p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>在进行成果构建的过程中，仍然会有无数的问题，这就需要判断困难的程度，是自己钻研能够解决的，还是需要请假他人的，或者在自己认知范围内无法解决的，根据不同的情况来思考解决办法。<br>另外过程中要多做备份，方便回溯，还有防止数据损坏。</p><h3 id="关于请教他人"><a href="#关于请教他人" class="headerlink" title="关于请教他人"></a>关于请教他人</h3><p>请教他人是不耻下问，但什么问题都请教，就是害人害己，一定要首先独立思考。请教之前，提前准备好问题，并且要说明自己的思路，并且要随时做好记录，高效交流。</p><h3 id="关于工作模式"><a href="#关于工作模式" class="headerlink" title="关于工作模式"></a>关于工作模式</h3><p><strong>避免长时间的大量重复劳动</strong><br>遇到实在无法避免的重复劳动时候，除了请教比自己厉害的人有没有什么方法，还可以把任务分解给其他的人，或者研究一下是否有可以自动化的地方。避免自己一个人承担大量的重复劳动，老是打螺丝容易被损伤心智，失去对整体状况的把控。</p><p>还可以<strong>多模型思考</strong>，例如把困难分成原料问题和技术问题，尝试搞到更好的数据，或者是尝试更好的处理方式。思考的过程中最重要的是记得发散思维，多路并发，不要在一条路走到黑，绕过问题，往往比解决问题更有效率。</p><h3 id="一些方法论"><a href="#一些方法论" class="headerlink" title="一些方法论"></a>一些方法论</h3><p>地理信息是传统测绘和计算机的交叉学科，所以遇到困难可以从两个领域中寻找办法。而这两个的底层是数学，虽然离开了学校后很难再去学习复杂的理论，但也可以尝试了解一些东西，而不必对未知的事物充满恐惧。</p><p>处理过程结束后，一定要及时总结！！！例如最关键的公式、代码、软件使用方法等等，一定要总结下来。如果可以的话，最好稍微花一点时间把整个遇到问题和解决问题的过程和思路记下来，比知识更有用的，是思考方式。</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>再举个例子：<br>遇到的问题是：当前公司的服务器上挂载了一个可以展示三维空间空间数据的平台，除了可以显示普通的KML矢量，还可以加载osgb倾斜摄影模型。现在这玩意太卡了，如何优化使用体验？</p><p>我能想到的方法是：</p><ol><li>优化模型，减少数据的体量，稍微牺牲一点模型精度和质量，换取流畅度。【最简单】</li><li>升级服务器和网络，上4090和5G网，力大飞砖。【简单但花钱】</li><li>程序升级，改变软件逻辑。【最难，还不一定成功，但潜力最大】</li></ol><p>最后还需要注意的是，可以经常选简单难度，追求快速通关，但总是走捷径，该打的怪不打，该拿的宝箱不拿，总有一天会因为等级不够碰壁的。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>地理信息</tag>
      
      <tag>FME</tag>
      
      <tag>总结</tag>
      
      <tag>数据处理</tag>
      
      <tag>经验</tag>
      
      <tag>Cass</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新型基础测绘和地理实体的概述</title>
    <link href="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/"/>
    <url>/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="地理信息的发展概况"><a href="#地理信息的发展概况" class="headerlink" title="地理信息的发展概况"></a>地理信息的发展概况</h1><p>简单给外行介绍一下什么是地理信息。从广义上看，以前的地理信息产品主要就是地图，是人们通过标记地物，观察天体来确定自己位置和了解地表情况的工具。狭义上理解，地理信息就是地图，就是坐标，就是导航。</p><h2 id="古代地图"><a href="#古代地图" class="headerlink" title="古代地图"></a>古代地图</h2><p>战国时期地图：<br><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/fad40503c335a27991dd223a50c56dcf.png" alt="战国时期地图"></p><p>而迈入计算机时代后，地理信息行业从绘制传统地图向数字化生产进化，但主要还是以二维的制图为主要成果。而倾斜摄影构建三维模型的技术，是建立在卫星系统完善、飞行器和摄像技术成熟、计算机算力大幅提高的现代化基础上的产物。</p><h2 id="现代3S-4D结构"><a href="#现代3S-4D结构" class="headerlink" title="现代3S+4D结构"></a>现代3S+4D结构</h2><p>3S指的是三种现代的地理信息技术手段</p><ul><li>遥感技术（Remote Senescing）——RS</li><li>地理信息系统（Geographical information System）——GIS</li><li>全球定位系统（Global Positioning System）——GPS</li></ul><p>而4D是四种地理信息产品</p><ul><li>数字线划图(Digital Line Graphic)–DLG</li><li>数字正射影像图_(Digital Orthophoto Map)–DOM</li><li>数字高程模型(Digital Elevation Model)–DEM</li><li>数字栅格地图(Digital Raster Graphic)–DRG</li></ul><p>这些现代技术和产品相比传统纸质地图是质的飞跃，是伴随地理信息行业发展了很长时间的强力支柱。<br>而现在是大数据和AI发展的年代，普通的地理信息产品已经很难容下当下庞大的数据规模和及时响应的业务需求，更重要的是难以实现数据之间的关联互通。地理实体就是在过去各种数据成果类型上的一次迭代升级。</p><h2 id="从4D到4E"><a href="#从4D到4E" class="headerlink" title="从4D到4E"></a>从4D到4E</h2><p>“4E 标准化产品”（组合聚合实体集、无级化<br>地图表达、地形级实景三维、城市级实景三维）</p><p><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/5f8bd842cf0455ca1b884e1a3b840da0.png" alt="几种概念之间的关系"><br>最核心的变化就是数据格式和数据结构的变化，从方便人理解变为方便机器理解的人机兼容模式。因为在数据量暴涨的背景下，只有依靠机器来实现自动化，提升效率、产业升级，才是唯一可行的路径。<br>还有一点，传统测绘基本就是专业的测绘队伍在自己埋头干，而现在是互联网时代了，手机上的地图和导航软件已经比测绘人自己搞出来的地图好用无数倍，人越多的地方越是如此。未来应该是以专业测量为基础的大众测量模式，每一个人都可以是地理信息的使用者和贡献者，这才是行业的进步，是地理信息发展的意义所在。</p><h2 id="简单梳理一条进化路线"><a href="#简单梳理一条进化路线" class="headerlink" title="简单梳理一条进化路线"></a>简单梳理一条进化路线</h2><p>地图→数字化矢量数据→摄影测量和三维成果→统合各种数据的地理实体</p><h1 id="地理实体位置编码和网格系统"><a href="#地理实体位置编码和网格系统" class="headerlink" title="地理实体位置编码和网格系统"></a>地理实体位置编码和网格系统</h1><p>通过看文件了解到，地理实体位置编码的来源，就是北斗卫星系统上应用的北斗网格码。<br>北斗网格码与地理实体位置网格的对应关系<br><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/58dc8cb35b29d2e45b0a57015d8f6cc7.png" alt="北斗网格码与地理实体网格的关系"></p><p>网格系统与传统比例尺地形图的对照<br><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/6853fceea803e48b38cf53473c803d6c.png" alt="传统比例尺与网格之间的关系"></p><p>而这种编码形式的来源又是一种基于经纬网的球面剖分网格：<br>GeoSOT 网格，即GeoSOT（Geographic Coordinate Subdividing Grid with One Dimension Integral Coding on n²-Tree）是基于n²一维整型数组全球经纬剖分网格。</p><p>简单来说，空间编码和网格应该是通过一套经典四叉树结构（考虑高程空间的话就是八叉树），实现了对地理空间的位置描述和结构分级。其本质还是对位置的描述，不过又和传统的经纬度不同，有独特的优势，其中最重要的，是将三维空间降维到了一维的同时，保留了数据的空间关联性。它模糊了比例尺概念、突破了分幅和投影限制、建立了空间数据与现实中其他数据的连接，提高了数据的生产和使用效率。<br>传统测绘在空间上强调比例尺分级制度，在国、省、市之间数据常常是不互通的，各部门还常常重复测量，效率低下；而新型测绘的统一格式，能够解决整个国家地理信息体系中的内耗问题。<br><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/aa04a9f90b2e2620d1db3c7e05b3a6c5.png" alt="GeoSOT网格示例"></p><p>关于网格划分的更详细内容可以看看知乎大佬的文章<br><a href="https://zhuanlan.zhihu.com/p/454504548?utm_id=0">https://zhuanlan.zhihu.com/p/454504548?utm_id=0</a></p><p>关于网格的研究2015年左右就有了，而国家实景三维的文件是2021年年底发出的。当下社会和经济的快速发展，让业务、组织结构和信息化被打的七零八落，各种系统、各种地方标准互不兼容，极大的影响了社会生产和运营管理的效率。<br>这种全国信息系统规则与定义上的统一，如果能够贯彻执行的话，效果和重要程度堪比统一度量衡。</p><h2 id="新体系下的元数据"><a href="#新体系下的元数据" class="headerlink" title="新体系下的元数据"></a>新体系下的元数据</h2><p>元数据（Metadata）是关于数据的描述信息，它提供了关于数据的详细描述和解释，帮助用户理解和使用数据。元数据可以包括数据的属性、结构、内容、质量、来源、格式、时间等信息。<br>如果说数据是产品的话，元数据就是包装盒与说明书，上面要写数据的成分、使用方法、生产日期等。<br>因为新体系必然会包含多种格式的数据，所以元数据也可以说是数据的一部分，通过数据标签和算法，实现多种数据格式的转换和兼容，最终实现数据格式的统一。</p><h2 id="地理实体数据格式"><a href="#地理实体数据格式" class="headerlink" title="地理实体数据格式"></a>地理实体数据格式</h2><p>而新体系的数据来源，除了新建要素以外，更多的应该是从以前的成果转化而来。dwg地形图、GDB数据库、表格、文档等等，转换这些零零散散的数据，维护这个复杂的新体系，又是一个大工程。地信人又有活干了，暂时不用担心失业了。</p><ul><li>三维图元构成的数据格式：OSGB、OBJ、MAX。</li><li>二维图元构成的数据格式：ShapeFile、DXF、DWG、GeoJSON、MDB、GPKG、PostGIS。</li><li>属性和关系单独记录的数据格式：Excel、RDF、Access、MDB。</li></ul><p>很显然，大部分东西其实还是我们所熟知的那一套，只是由国家标准进行了规范和整合。不要小看组合的力量，计算机、机器人等现代社会的先进工业品也都是由一个个简单部件组合而成的。<br>国家文件比较保守的在后面都加了“等”，以后可能有更多数据格式被包含其中。</p><p><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/96108930b06f52051ca9f279c026414e.png" alt="基础地理实体数据库逻辑架构"></p><p>实际上，地理实体并不是各种数据类型的简单组合，国家文件中还花了大量的篇幅来说各种数据之间的关系。例如空间关系、相邻关系，时间关系等等，通过复杂系统来统合一切复杂实体，打通数据链路，这绝对是一项大工程。</p><p><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/5a63167b10a7162bcbc81f5584eb5a42.png" alt="几个地理概念的关系"></p><p>大楼实体和房间实体的关联<br><img src="/2023/12/16/%E6%96%B0%E5%9E%8B%E5%9F%BA%E7%A1%80%E6%B5%8B%E7%BB%98%E5%92%8C%E5%9C%B0%E7%90%86%E5%AE%9E%E4%BD%93%E7%9A%84%E6%A6%82%E8%BF%B0/0395be837e2e101b03705df19e2030c5.png" alt="大楼实体样例"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>从普通的地理信息矢量和三维模型向数字孪生迈进的过程并不容易，虽然现在已经有许多厂商号称自己做数字孪生，但实际上并没有真正打通各种数据。客观来说，统一数据格式这种事情，还是得国家来做。在实现数字孪生之前，先得做地理实体，完善实景三维，统一各种数据，这方面主要还是紧跟国家的动作。<br>另外关于软件方面虽然已经有一些国内厂商在做能够生产地理实体的软件，但都在开发和完善的阶段，并且收费颇高，主要面向企业用户，普通人主要还是依靠那几种破解软件来分别处理各种格式的数据。<br>从个人角度，需要熟悉各种数据格式，掌握转换方法，熟悉处理流程，并且尽量实现流程自动化，因为地理实体的构建，不管是数据数量还是复杂度，都是持续上升的。<br>关于地理实体和实景三维方面的细节问题其实非常多，毕竟涉及到各种数据格式之间的转换和兼容，实际上国家文件中已经做了非常多的规范和描述，需要在实践过程中逐渐了解和掌握。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>行业发展</tag>
      
      <tag>地理实体</tag>
      
      <tag>新型测绘</tag>
      
      <tag>产业升级</tag>
      
      <tag>实景三维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于知识库与信息共享的见解</title>
    <link href="/2023/12/12/%E5%85%B3%E4%BA%8E%E7%9F%A5%E8%AF%86%E5%BA%93%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%85%B1%E4%BA%AB%E7%9A%84%E8%A7%81%E8%A7%A3/"/>
    <url>/2023/12/12/%E5%85%B3%E4%BA%8E%E7%9F%A5%E8%AF%86%E5%BA%93%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%85%B1%E4%BA%AB%E7%9A%84%E8%A7%81%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="关于认知提升与知识积累的个人观点"><a href="#关于认知提升与知识积累的个人观点" class="headerlink" title="关于认知提升与知识积累的个人观点"></a>关于认知提升与知识积累的个人观点</h1><p>你是否被别人批评过：认识太肤浅、站位不够高、不关注新闻？是否感觉到自己的知识太少，别人谈起什么话题都感觉自己所知不多？感觉自己什么都不懂不会，没空学习，而真到有空的时候又不知道学什么，从何下手？</p><p>其实一点也不奇怪，人的认知水平是由经历和见识得来的，没见过就是没见过、不知道就是不知道，不必自卑也不应自负。</p><p>要想提升认知，那就得多听多看多了解，新闻期刊、学术论坛、文本书籍，还有最重要的就是善于利用搜索引擎，在互联网的海洋有目标地航行。总是埋头干，很吃亏的，牛再勤劳它也只是农场主的生产资料。</p><p>人的所见所闻，所思所做，最终在一步步的总结过程中化为知识。这些总结而来的知识碎片可能是片面的、错误的、过时的，但这些都不重要的，重要的是有没有用。</p><p>在总结的过程中，可以使用<strong>结构化思考</strong>的方式，抓住重点，选择合适的结构模型，得出简化的结论。可以准备多个模型，以应对现实的复杂情况。严格来讲所有的模型都是错的，但是所有的模型也都有各自能用的领域，这就是<strong>多模型思维</strong>。</p><p>经历→经验→认知→知识</p><h1 id="团队积累与提升"><a href="#团队积累与提升" class="headerlink" title="团队积累与提升"></a>团队积累与提升</h1><p>目前团队交流太少，有很多可以共享的内容和提升的空间。例如：基本的地理认知，测量理论，摄影测量的方法，基本无人机知识，大疆无人机的操作方法，航片处理与影像和模型的生产，各种软件工具的使用等等。<br>个人积累的作用是有限的，一个人再强也不可能承担所有的工作，只有团队提升才能提高整体效率。</p><h2 id="其他共享方式"><a href="#其他共享方式" class="headerlink" title="其他共享方式"></a>其他共享方式</h2><p>面对面交流是效果最好的方式，也是效率最低的，会占用大块的时间，大多数时候没有这种机会。只有非常重要的事情值得这么做。</p><p>微信是非常高效的交流手段，但是它就像一个有孔洞的竹篮，让信息不断地随时间而流逝，无法形成积累。并且，微信本身的聊天属性，信息密度太低，不适合作为知识载体。</p><p>网盘空间非常大，传输速度快，但可登录设备有限，每次都要验证码非常麻烦，而且查阅内容也不方便，只能作为数据载体。可以用永久链接的形式分享其中的内容。</p><p>关于线上笔记的软件其实很多，包括印象笔记、有道云笔记、语雀等等，但它们作为商用的软件，都是包含了一定的付费内容的。在需要大规模实时共享交流的场景下，商业软件的效率当然是最高的，小规模交流则不需要那么高端的软件，合适的才是最好的。</p><h1 id="知识库构建"><a href="#知识库构建" class="headerlink" title="知识库构建"></a>知识库构建</h1><p>大多数时候工作已经很忙，时间很少且都是碎片化的，这些碎片在大多数时候被当做垃圾时间，让短视频和发呆占据。<br>为了能够实现知识与经验的积累和分享，所以需要构建一个存放文档、查阅文档的空间。通过网站实现的知识库就是一个非常好的形式。</p><h2 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h2><p>知识库的核心目标有三点：</p><ol><li><strong>积累</strong></li><li><strong>共享</strong></li><li><strong>便于查阅</strong></li></ol><p>目前库中的文档数量并不多，个人的力量是有限的，欢迎所有人在库中填入自己的知识碎片，一起积累知识库。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>另外，知识库在积累的过程中，也需要注意一些事项，避免数据库破坏：</p><ol><li>录入的内容要<strong>精简</strong>、控制文字数量，避免破坏易读性。善于总结，最好是自己亲手录入的文字，复制粘贴其他人的文字虽然方便，但非常容易内容过长，需要谨慎复制。优先使用文字，再辅以图片、附件等其他内容。</li><li>内容可以是问题处理经验、技术细节，工具和软件，也可以是个人见解、思考或哲理等。注意分类。本库为“知识库”，一些需要频繁更新的项目文档，最好用其他的线上文档。</li><li>注意<strong>标题和标签</strong>的准确性，便于分类和查找。</li><li>可以在文档中<strong>附带文件</strong>，但需要注意大小，超过100MB的用网盘链接。</li><li><strong>优质的内容</strong>是最重要的核心，格式不重要。</li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>知识库</tag>
      
      <tag>共享</tag>
      
      <tag>知识</tag>
      
      <tag>认知</tag>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>地理坐标系以及投影的应用知识</title>
    <link href="/2023/12/11/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB%E4%BB%A5%E5%8F%8A%E6%8A%95%E5%BD%B1%E7%9A%84%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86/"/>
    <url>/2023/12/11/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB%E4%BB%A5%E5%8F%8A%E6%8A%95%E5%BD%B1%E7%9A%84%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>关于地理坐标系的定义以及各种计算，在大学里的《大地测量学》课程有详细的讲解，国内应该学的都是武汉大学出版的，什么大地高、真高、海平面、高程误差，我听了也头大。而在从事工作以后，一些测绘工作的从业者甚至自己都不是测绘专业，更别提去理解那些复杂的原理和计算公式了。就连我自己一些东西很久不看以后也会忘得一干二净。<br>所以本文从实际应用的角度出发，简单解释有关地理坐标系以及投影的相关知识，目的是让没学过和不了解的人快速熟悉和掌握基本知识和操作方法，提高工作能力。</p><h1 id="地理坐标系"><a href="#地理坐标系" class="headerlink" title="地理坐标系"></a>地理坐标系</h1><p>众所周知地球是一个不规则球体（这应该是初中知识），而人类为了方便计算和描述，就定义了一个数学上的虚拟椭圆球体套到地球上，并且尽可能的和它相似，而通过这个椭球体的长短轴分别画两条直线，就构成了一个坐标系。</p><p><img src="/2023/12/11/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB%E4%BB%A5%E5%8F%8A%E6%8A%95%E5%BD%B1%E7%9A%84%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86/%E5%A4%A7%E5%9C%B0%E5%9D%90%E6%A0%87%E7%B3%BB%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg"></p><p>从数学的基本理论可以知道，在三维空间中描述一个位置，那当然至少是3个参数，现代的椭球体地理坐标系的参数其实也就是两个数字和一个位置：数字就是长轴的和短轴的长度，或者其中一个轴的长度+偏心率，他们俩确定了椭球体的形状；另一个是中央子午线的位置，也就是0度经线的位置，在绝大多数情况下，0度经线在传说中的格林尼治天文台脚下。这就是由人类定义出来笼罩地球的坐标系。<br>而在这个坐标系中描述一个位置，使用的参数就是经纬度，还有一个相对于虚拟椭球面的高度，叫大地高，有时候因为只需要位置不关心高度而忽略它。<br>至于为什么搞这么麻烦，我的理解是长距离测距在人类没有掌握电磁波的时代是很困难的，而转换成角度以后，通过对太阳、星星的观察就可以确定经纬度，巧妙地绕开了测距，非常聪明。而现在这个航空航天放卫星的年代，GPS使用的坐标系就是简单粗暴的XYZ直角坐标系了（当然最后还得转换成大地坐标来使用）。</p><h2 id="常用地理坐标系"><a href="#常用地理坐标系" class="headerlink" title="常用地理坐标系"></a>常用地理坐标系</h2><p>在日常工作里，基本上使用最多的地理坐标系就是WGS1984（世界地理坐标系）以及CGCS2000（中国国家坐标系）这两套（也象征着世界上有航天能力的两个最大体系）。他们俩参数是非常接近的，因为大家的目的都是为了拟合真实的地球表面，不考虑米级以下精度的时候可以相互套用。<br>现在基本已经统一坐标系了，除非从垃圾堆里翻出50年100年前的地图和数据出来，才会涉及到其他的坐标系。</p><h1 id="投影和投影坐标系"><a href="#投影和投影坐标系" class="headerlink" title="投影和投影坐标系"></a>投影和投影坐标系</h1><p>虽然是地球表面是曲面的，但是曲面在数学计算上非常不方便，而且在小范围内基本可以无视地球曲率的影响，所以为了方便画地图和更简单的描述地理位置，就有了投影（具体原因请转到大地测量学）。而投影后的坐标表示方式就和地理坐标系不一样了，例如将地表投影到平面以后，描述位置的参数可以从经纬度变成直角坐标系的X,Y。</p><p>不同的投影方式适合不同的区域，不同的投影有不同的用途。选择投影的依据是测量目标在地理上的位置，和具体追求的测量目标。例如航海地图，在茫茫海面上最重要的不是航行距离，而是航行方向，距离差一点可能就早晚一两天；方向要是错了就可能死在海面上。</p><p>投影的方式有很多，有正面投影，有圆锥投影，有UTM莫卡托投影，而一般测绘工作中使用最多的还是高斯投影。<br>说高斯投影可能非专业的人会不知道，但如果说把西瓜皮（篮球皮）竖着切成一条一条的在拼起来，那受过义务教育的人大概就有印象了。</p><h2 id="高斯克吕格-Gauss-Kruger-投影"><a href="#高斯克吕格-Gauss-Kruger-投影" class="headerlink" title="高斯克吕格(Gauss-Kruger)投影"></a>高斯克吕格(Gauss-Kruger)投影</h2><p>作为一种特殊的UTM投影，高斯投影适用的地区就是赤道和两边的低纬度地区，在赤道线上，高斯投影的长度是1:1的，越远离赤道，畸变就会越大，</p><p>从三维曲面到二维平面，使用的是一套非常复杂的公式，统称高等数学，现在都有成熟的计算机软件，在工作中基本不需要手动去算，只需要知道概念就可以了。</p><p>在进行高斯投影时，最重要的参数就是中央子午线的选择。尽量把目标数据放在接近中央子午线的位置，所得到的投影结果畸变就越小。一般而言高斯投影在设定时就以3度带和6度带做了划分，一般而言为了提高精度用3度带的划分方式比较多，例如国内常用的中央子午线109E，111E。</p><p><img src="/2023/12/11/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB%E4%BB%A5%E5%8F%8A%E6%8A%95%E5%BD%B1%E7%9A%84%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86/%E9%AB%98%E6%96%AF%E6%8A%95%E5%BD%B1%E7%A4%BA%E6%84%8F%E5%9B%BE.png"></p><p>有时候也会选一些奇奇怪怪的中央子午线，例如测量土地面积的时候，真实的土地面积是地球表面上的不规则曲面，而经过投影后的地图是平面，曲面面积和投影后的平面面积就会有一个差值。所以有时候一些测量项目会使用一些109.25之类的奇怪经线作为中央子午线来制图，为的就是减小误差。例如海南岛最新规定的地方坐标系，就是在CGCS2000的地理坐标基础上，对高斯投影的中央子午线进行了重新选取，不同经度的地方用不同的经线作为中央子午线。</p><h2 id="常用坐标系总结"><a href="#常用坐标系总结" class="headerlink" title="常用坐标系总结"></a>常用坐标系总结</h2><p>到这我们工作中常用的坐标系已经非常清晰，就只有三种：</p><ul><li>WGS1984地理坐标(World Geodetic System 1984)</li><li>CGCS2000地理坐标(China Geodetic Coordinate System 2000)</li><li>CGCS2000在不同位置的投影坐标</li></ul><h1 id="实操应用"><a href="#实操应用" class="headerlink" title="实操应用"></a>实操应用</h1><p>在实际的项目和生产过程中，坐标系的作用是贯穿始终的，在进行数据采集、数据处理的过程，首先要弄明白的就是作业区域使用的是什么坐标系，另外就是经常会拿到各种来源的不同数据，需要做一下坐标系的统一。</p><h2 id="ArcGIS里改变投影的方法"><a href="#ArcGIS里改变投影的方法" class="headerlink" title="ArcGIS里改变投影的方法"></a>ArcGIS里改变投影的方法</h2><h3 id="投影"><a href="#投影" class="headerlink" title="投影"></a>投影</h3><p>使用投影工具就可以很方便的转换数据的坐标系。此操作是对数据进行投影转换的，会生成一个转换坐标后的新数据。<br><img src="/2023/12/11/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB%E4%BB%A5%E5%8F%8A%E6%8A%95%E5%BD%B1%E7%9A%84%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86/01436035e7932db3fa54470c1411ca7f.png" alt="投影工具"></p><h3 id="定义投影"><a href="#定义投影" class="headerlink" title="定义投影"></a>定义投影</h3><p>定义投影实际上就是修改数据的地理坐标标注，也就是数据里面，关于这个数据使用的是什么坐标系的一个说明。<br>定义投影功能常用在由其他格式的数据转换到shp格式的时候，比如从CASS导出的dwg图层，是不带地理信息标注的。<br>当然这功能也用在一些骚操作里面，一般情况不建议乱用，容易把数据搞坏。<br><img src="/2023/12/11/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB%E4%BB%A5%E5%8F%8A%E6%8A%95%E5%BD%B1%E7%9A%84%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86/e0fdab44829768db9ae89c79d2686266.png" alt="定义投影工具"></p><p>ArcGIS有自动转换和显示的功能，也就是数据本身坐标系定义没问题的情况下，可以自动转换到数据框的坐标系下显示。当然这个只改变显示方式，不改变数据本身。<br>一般情况下，还是要注意数据坐标系和显示坐标系一致，避免一些莫名其妙的错误。<br><img src="/2023/12/11/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB%E4%BB%A5%E5%8F%8A%E6%8A%95%E5%BD%B1%E7%9A%84%E5%BA%94%E7%94%A8%E7%9F%A5%E8%AF%86/2e29f461c2a1d506fab5e4a745290247.png" alt="数据框的投影属性"></p><h2 id="CASS修改数据坐标系"><a href="#CASS修改数据坐标系" class="headerlink" title="CASS修改数据坐标系"></a>CASS修改数据坐标系</h2><p>首先要提及的是，CAD作为一款工业设计软件，它里面用的就是<strong>直角坐标系</strong>，对应到地理信息领域，就是投影坐标系，比如前面提到常用的高斯投影。所以，可以说CASS中的操作都是在投影坐标系间的转换，涉及到地理坐标系，那还得是ArcGIS来处理。</p><p>另外，关于CASS11里面封装的CASS3D系统，这个可以加载OSGB模型的东西，如果不想冒险或者惹上坐标转换的麻烦，最好是生产之前让osgb模型的坐标系和需要采集的dwg坐标一致。总之，生产出来的dwg一定是投影坐标。</p><h3 id="数据换带"><a href="#数据换带" class="headerlink" title="数据换带"></a>数据换带</h3><p>更换中央子午线，其实也是平面到平面的一个转换，一直是直角坐标系，不过在cass里有专门的工具，直接使用换带工具进行转换，非常方便。</p><h3 id="添加和删除带号"><a href="#添加和删除带号" class="headerlink" title="添加和删除带号"></a>添加和删除带号</h3><p>添加和删除带号的本质就是直接平移数据。例如，把中央子午线为111E的高斯投影，添加带号37，就是在横坐标的前面加上37。横坐标一般是七位数，加上以后变成九位数。</p><p>需要注意的是，CAD平移的方向在有光标引导的时候，以鼠标所指的方向为正向。所以要根据实际情况注意使用+号还是-号。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>地理信息</tag>
      
      <tag>基础知识</tag>
      
      <tag>坐标系</tag>
      
      <tag>投影</tag>
      
      <tag>转化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【警钟长鸣】病毒防护与个人信息安全</title>
    <link href="/2023/11/30/%E3%80%90%E8%AD%A6%E9%92%9F%E9%95%BF%E9%B8%A3%E3%80%91%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4%E4%B8%8E%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    <url>/2023/11/30/%E3%80%90%E8%AD%A6%E9%92%9F%E9%95%BF%E9%B8%A3%E3%80%91%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4%E4%B8%8E%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="中毒了！"><a href="#中毒了！" class="headerlink" title="中毒了！"></a>中毒了！</h1><p>平时习惯了把工作和生活记录写在U盘里，虽然这样有丢失风险，但耐不住非常方便，电脑间传来传去太麻烦了，但今天终于被制裁了，突然发现平时写工作记录的Excel表打开后信息都没了！被随机覆写了！而且文件后缀<strong>从xlsx变成了xlsm</strong>，带宏的文档。<br><img src="/2023/11/30/%E3%80%90%E8%AD%A6%E9%92%9F%E9%95%BF%E9%B8%A3%E3%80%91%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4%E4%B8%8E%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E5%AE%8F%E7%97%85%E6%AF%92%E5%8F%91%E7%8E%B0.png" alt="宏病毒发现"><br>上网查了一下，应该是VBA宏病毒引起的，不知道打开过哪个文档，导致所有的xlsx和xls被强制改名，数据丢失。<br>人教人学不会，事教人一次灵，以后需要注意数据安全了。</p><h1 id="信息安全警钟长鸣"><a href="#信息安全警钟长鸣" class="headerlink" title="信息安全警钟长鸣"></a>信息安全警钟长鸣</h1><h2 id="数据保存习惯"><a href="#数据保存习惯" class="headerlink" title="数据保存习惯"></a>数据保存习惯</h2><p>首先保证安全的手段就是<strong>多备份</strong>，无论是本地硬盘还是云服务，总之要建立<strong>备份和可回溯机制</strong>。因为意外的发生往往是猝不及防的，当意外发生后最重要的并不是究其原因，而是尽快补救，备份和人回溯就是最最有效的减少损失的手段。世界上病毒千千万，备份主打的就是一个以不变应万变。<br>像支付宝这样的互联网支付系统就更是使用的类似机制，全国多个服务器组网同时运行，同时还有硬盘备份，除非地球突然爆炸了，否则白条欠了多少钱还是一清二楚。<br>对于经常需要查看和编辑的文件，可以的话，尽量<strong>使用云服务</strong>，这样避免了手动备份的麻烦，也方便和其他人共享和同步信息。云服务也不是保证百分百安全的，但总体来时把备份和回溯交给企业级服务器，当然比自己弄方便舒服。如果不放心还可以自己再定期备份到硬盘一下。</p><h2 id="软件杀毒"><a href="#软件杀毒" class="headerlink" title="软件杀毒"></a>软件杀毒</h2><p>因为经常使用破解和一些小插件，在开着计算机防护的情况下经常动不动报错，非常麻烦，于是我也习惯了关掉病毒防护裸奔。现在被病毒教育了，老实下了一个火绒，平时可以不用，但手段不能没有。另外听说360杀毒也不错，当然只要杀毒，不要整360全家桶。</p><h2 id="使用更简单的格式"><a href="#使用更简单的格式" class="headerlink" title="使用更简单的格式"></a>使用更简单的格式</h2><p>因为这次袭击的主要是VBA宏病毒，它会藏在word文档和excel这种文件里，如果没有设置禁用宏指令的话，电脑打开文件时就会中招，然后它会通过指令污染整个电脑里所有打开过的同类型文件。<br>所以，使用更为简单的TXT和Markdown，就可以避免VBA的攻击。当然这种选择只能减小被袭击的概率，也不该因噎废食，放弃使用office套餐，只是说减少依赖。</p><h2 id="学习和掌握有关知识"><a href="#学习和掌握有关知识" class="headerlink" title="学习和掌握有关知识"></a>学习和掌握有关知识</h2><p>office软件里开放VBA，就是因为它是一把双刃剑，在用得好的人手里能提高工作效率，而在别有用心的人手里也能变成险恶的病毒武器。要想做生活和工作中的强者，对于这样的工具就需要主动去学习和掌握，把刀握在自己手里。其实在当下的中文互联网，已经基本是各种大公司和APP地盘了，不再需要攻击性极强的恶意病毒，但是多了让人厌烦的植入广告。现在的立法和执法也比较完善，敢做商业病毒的人早都进去踩缝纫机了。但我们也不能因为生活在现代社会，就忘记了原始丛林的法则。</p><h1 id="蠕虫病毒Synaptics"><a href="#蠕虫病毒Synaptics" class="headerlink" title="蠕虫病毒Synaptics"></a>蠕虫病毒Synaptics</h1><p>一刻也没为宏病毒的逝去而哀悼，接下来赶到战场的是，蠕虫病毒！还有高手？！</p><h2 id="病毒发现"><a href="#病毒发现" class="headerlink" title="病毒发现"></a>病毒发现</h2><p>在弹出优盘的时候发现有个东西一直在占用进程，莫名其妙的，经查询确诊蠕虫病毒Synaptics。</p><p><img src="/2023/11/30/%E3%80%90%E8%AD%A6%E9%92%9F%E9%95%BF%E9%B8%A3%E3%80%91%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4%E4%B8%8E%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92%E5%8F%91%E7%8E%B0.png" alt="蠕虫病毒发现"></p><p>其实这个病毒的破坏性并不大，没有像宏病毒一样直接摧毁了我的文件，不过既然发现了那就处理一下，省的问题越积越多。</p><h2 id="病毒特性"><a href="#病毒特性" class="headerlink" title="病毒特性"></a>病毒特性</h2><ol><li>运行第一次感染的可执行程序，并使用其感染程序图标，其后随着使用者运行感染程序而改变；</li><li>可执行程序被感染后，右键属性后发现“描述”内容被改变为：“Synaptics Pointing Device Driver”；</li><li>被感染文件首次执行时会在同文件夹内新产生一个和感染文件同名且前缀为：“._cache_”的病毒文件；</li><li>系统被感染后，对任何插入的U盘，都会被病毒搜索到，并立即采取遍历可执行文件的方式感染。成为新的感染源。</li><li>病毒只感染可执行文件，无法感染压缩文件。</li><li>病毒首次在硬盘或U盘被触发传染时，硬盘灯或U盘指示灯会狂闪。</li><li>注册表中创建2个启动项：</li></ol><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>这不过是个小病毒，在网上已经有非常多的解决方案了。<br>吾爱破解网站大佬的解决方案和程序：</p><p><a href="https://www.52pojie.cn/thread-1066827-1-1.html">https://www.52pojie.cn/thread-1066827-1-1.html</a></p><ol><li>在注册表查找Synaptics，有一个删一个。一般就两处。</li><li>清除病毒的安装路径<code>C:\ProgramData\Synaptics</code>，以及病毒释放的文件<code>C:\用户\***\AppData\Local\Temp\qk3296d7.exe</code></li><li>用杀软全盘剿杀，并重新启动系统，再次全盘在剿杀。</li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>病毒</tag>
      
      <tag>宏</tag>
      
      <tag>宏病毒</tag>
      
      <tag>xlsm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大势智慧城市三维模型构建软件测试</title>
    <link href="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <url>/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>软件名称：DasEntityLOD<br>软件版本：202311181530</p><h1 id="数据加载测试"><a href="#数据加载测试" class="headerlink" title="数据加载测试"></a>数据加载测试</h1><p>可以加载shp和OSBG，数据坐标系要一致。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/e5749ece8ba5d4e06ef0ae24f54506de.png" alt="e5749ece8ba5d4e06ef0ae24f54506de.png"></p><h1 id="数据处理测试"><a href="#数据处理测试" class="headerlink" title="数据处理测试"></a>数据处理测试</h1><h2 id="自动提取轮廓"><a href="#自动提取轮廓" class="headerlink" title="自动提取轮廓"></a>自动提取轮廓</h2><p>该功能在大模型和小范围模型中均无法使用，可能存在较为严苛的使用条件。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/6d9cf911751d81b991b00081f358464f.png" alt="6d9cf911751d81b991b00081f358464f.png"></p><p><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/f76ed32b0da54f15b42b633a65ece4ef.png" alt="f76ed32b0da54f15b42b633a65ece4ef.png"></p><h2 id="由shp生成模型"><a href="#由shp生成模型" class="headerlink" title="由shp生成模型"></a>由shp生成模型</h2><p>从地形图等数据导出的精确建筑物轮廓，根据相应属性由二维矢量直接生成模型。<br>需要做数据的字段匹配。<br>shp 指定底面高度和建筑高度的快速建模。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/32c31a0144e768ae8a846ae971598204.png" alt="32c31a0144e768ae8a846ae971598204.png"></p><p><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/6cd445e6841c9acf2d9c4dde4229912b.png" alt="6cd445e6841c9acf2d9c4dde4229912b.png"></p><h2 id="单个模型轮廓的自动提取"><a href="#单个模型轮廓的自动提取" class="headerlink" title="单个模型轮廓的自动提取"></a>单个模型轮廓的自动提取</h2><p>测试在软件中进行采集的效果。除了手动绘制矢量范围，还可以自动识别和提取单个建筑轮廓，但前提是建筑模型有较高的独立性，没有和周围干扰物有粘连。<br>在模型中选择对应建筑，自动生成二维轮廓。可以通过调整参数自动简化轮廓节点数量。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/9b83302bea9112db0afae5013f9c6ce7.png" alt="9b83302bea9112db0afae5013f9c6ce7.png"></p><p>对于多层复杂结构，需要单独制作每个部件。体现在shp图层中为重叠的两个要素。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/db1edbad3a67527fee0c76ebc7441695.png" alt="db1edbad3a67527fee0c76ebc7441695.png"></p><h2 id="模型构建"><a href="#模型构建" class="headerlink" title="模型构建"></a>模型构建</h2><p>模型构建建立在有二维轮廓的基础上。<br>在已有shp轮廓时。可以使用快速拉白模功能，在osgb中选取单个模型的高度。<br>还可以使用“构建体块模型”进行批量构建，自动提取osgb中的模型高度。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/e5ac1a728b77c5a39868159cb4779646.png" alt="e5ac1a728b77c5a39868159cb4779646.png"></p><h2 id="贴图处理"><a href="#贴图处理" class="headerlink" title="贴图处理"></a>贴图处理</h2><p>模型建立后可以设置贴图材质。仅支持使用预设的材质模板，不能从osgb中提取贴图。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/1921ebb2fe8bf50b62bb75fd1771be5a.png" alt="1921ebb2fe8bf50b62bb75fd1771be5a.png"></p><p>在二维平面选择对应的矢量，可以统一给模型贴图。贴图后模型呈现实体不透明效果，未贴图为透明效果，可以在单体视图中启动预览。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/0dc926218fdb4cf2c45d0b6852518895.png" alt="0dc926218fdb4cf2c45d0b6852518895.png"><br>批量贴图功能在处理大范围数据时会卡住。</p><h1 id="数据导出测试"><a href="#数据导出测试" class="headerlink" title="数据导出测试"></a>数据导出测试</h1><p>体块成果导出功能正常。可以将构建的白膜导出到一个osgb模型中。<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/38f8b95e9984dd2d18d9f19536e27554.png" alt="38f8b95e9984dd2d18d9f19536e27554.png"></p><p>模型素体<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/af703f60cb57705f4f72bf49937bdd94.png" alt="af703f60cb57705f4f72bf49937bdd94.png"></p><p>贴图效果<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/fb96290670fdbe8fde96ca0ed94e614d.png" alt="fb96290670fdbe8fde96ca0ed94e614d.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="实际作业流程"><a href="#实际作业流程" class="headerlink" title="实际作业流程"></a>实际作业流程</h2><p>自动从模型批量提取建筑轮廓的功能并不能使用，所以比较快速的构建方式依然是在已有shp轮廓的基础上，匹配高程和楼层高度属性。模型高度可以使用<strong>构建体块模型</strong>工具进行批量构建，可以让shp轮廓自动匹配osgb中的建筑高度。可以先使用批量构建，再使用白膜编辑进行细节调整。<br>shp轮廓矢量是重要的数据基础，直接决定模型成果的质量。保留<strong>shp轮廓和相关高程高度信息</strong>，即可快速构建白模。完善的字段信息、准确的矢量范围才能构建高质量的模型。忽略复杂的模型部件，仅保留基本形状和高度信息，也可以提高建模效率。</p><p>成果预览<br><img src="/2023/11/23/%E5%A4%A7%E5%8A%BF%E6%99%BA%E6%85%A7%E5%9F%8E%E5%B8%82%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/68c2e0127b7e880575c10acc02be338d.png" alt="68c2e0127b7e880575c10acc02be338d.png"></p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>地理信息</tag>
      
      <tag>软件测试</tag>
      
      <tag>大势智慧</tag>
      
      <tag>建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GDB数据库的批量裁剪模型实现</title>
    <link href="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/"/>
    <url>/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为工作需要，项目到了要出成果的阶段，本来分割数据库的工作量从一个变成了十几个，直接指数增长，用之前的分割工具还必须手动操作十几次，太慢了，所以基于之前的工具进行一下优化升级和完善。顺便把之前没能实现的功能给它做出来。</p><h1 id="模型嵌套"><a href="#模型嵌套" class="headerlink" title="模型嵌套"></a>模型嵌套</h1><p><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/f92e41c2467d21b040d01f7b162bac80.png" alt="f92e41c2467d21b040d01f7b162bac80.png"><br>PS：小细节，外层模型要和里面模型的输入输出要对应，例如迭代要素的结果是要素图层，那么子模型的模型参数就不能是要素类，也要是要素图层。一字之差，就会导致运行失败。</p><p>运行界面：<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/7f8cc1adb19b8aec5af126c8e102a1e0.png" alt="7f8cc1adb19b8aec5af126c8e102a1e0.png"></p><p>其实除了直接打开模型外，还可以使用批处理启动，也是可以实现多次处理的，但这样不如再做一个工具方便。可以作为备选方案来使用。<br>模型批处理启动：<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/5be9e46ed8970b6107b2df8f84c2c5b3.png" alt="5be9e46ed8970b6107b2df8f84c2c5b3.png"></p><h1 id="模型优化思路"><a href="#模型优化思路" class="headerlink" title="模型优化思路"></a>模型优化思路</h1><p>在原来程序的基础上创建一层循环做嵌套，其实还是比较容易的，而还有一个最重要的问题就是：如何把要素成果写入到原本的要素数据集里面，保留原始的数据结构。外层模型已经基本完善了，果然问题还是在内层子模型上。<br>参考了一下网上别人的思路，要想保留数据库内的原始数据结构，那就不能在子模型内使用简单粗暴的递归，而是要再建一层循环，实现裁剪图层→要素数据集→要素图层的三重循环，按照ArcGIS工具不能嵌套循环的设计逻辑，那就总共需要设计三个工具箱。第一层和最后一层其实已经设计好了，就是之前的模型拿来改改输入输出，最关键的还是实现中间数据集迭代层的参数衔接。</p><p>模块1设计<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/2003d688e8c3fb9ac4950a3124dc2e13.png" alt="2003d688e8c3fb9ac4950a3124dc2e13.png"></p><p>还是一样，除了模型构建以外，最重要的一点是裁剪工具内的参数，在输出要素类一栏要输入<code>%输出要素数据集%\%图层名称%</code>，变量要和模型内参数名称一致。</p><p><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/4b86c89a9210ec4cfd397352453f52bb.png" alt="4b86c89a9210ec4cfd397352453f52bb.png"></p><p>模块2设计<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/b9017566f7c775176bcdebbd20e71306.png" alt="b9017566f7c775176bcdebbd20e71306.png"></p><h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>处理过程中某一个图层会卡住，彻底动不了。之前用递归的时候完全没有这种情况。这个模型理论应该没有问题，别人的样例也是这样的。难道这还设计了ArcGIS软件本身的玄学？图层里某一些数据错误导致了整个程序彻底卡死？<br>等了一小会，没有卡死，只是处理得比较慢而已。<del>有个猜想是数据量太大（这一图层是20W规模的数据），触发了ArcGIS本身的分批处理机制。过了这一趴以后后面又快起来了，但也是有时候卡在组合要素这第四步上。虽然数据量大有影响，但是之前用递归明明也很快，想不明白加了一层循环后，差距居然如此之大。照这个速度，电脑切完十几个数据库可能一天都过去了，还没有我用递归切完在手动挪数据快。</del>后面找到了真正的问题所在，再回头看之前的猜想并不正确，但可以作为重要的思考过程留着。</p><p><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/c4b8a3ee5c18ca188d09273fe9d44df4.png" alt="c4b8a3ee5c18ca188d09273fe9d44df4.png"></p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>然后我又找了个小份的数据（规模只有几百条要素）进行测试，果然可以跑通，但是跑出来的结果是没有坐标系的。既然如此那就加一个坐标系，在原来的模型基础上改了一下，添加一个模型参数“坐标系”。并且创建要素数据集的名称保守起见改成了字段引用的形式：<code>%迭代数据集名称%</code>。在对应参数的框框里填上百分号夹心的参数名称，就可以实现参数的引用，这也是这两天学会的。</p><p>模块2重新设计<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/aabd41f18deb49ae63b1dbd73b9698d7.png" alt="aabd41f18deb49ae63b1dbd73b9698d7.png"></p><p>执行结果<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/d4cbd8d3c0feb778036aca08b2b4c9e3.png" alt="d4cbd8d3c0feb778036aca08b2b4c9e3.png"></p><p>成功了！</p><p>然后我再带着这个修改后的工具模块去裁剪了一下之前25W级的大规模数据，依然究极顺利！并且耗时超级短！</p><p>原来问题的关键就在于<strong>坐标系</strong>！这是参考其他人的资料都没有提到的地方，因为进行数据集自动创建的时候没有输入坐标系而导致的进程缓慢，甚至软件都不会报错。差点以为涉及到软件的深层设计都要放弃了，没想到最后是坐标系这么简单又基础的问题。<br>另外，创建要素数据集的时候名称参数要填迭代名称的变量，例如图中的：<code>迭代数据集名称</code><br>在原来进行要素的迭代的时候，因为仅仅是进行了范围上的裁剪，坐标系之类的信息是自带在要素里直接写进结果的，所以根本不需要考虑坐标系。但是创建数据集就不一样了，创建的数据集并不知道要素是什么坐标系，它需要获取自己的坐标系。</p><h1 id="完善成果"><a href="#完善成果" class="headerlink" title="完善成果"></a>完善成果</h1><p>剩下的工作就非常简单了，完善最外层的循环工具，然后测试一下跑个数据，再补充一下说明，就大功告成。</p><p>完善主程序设计<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/1fea72c28568f0c6b62fd89a0e48b93f.png" alt="1fea72c28568f0c6b62fd89a0e48b93f.png"></p><p>处理的过程中因为数据量大，每次到25W的那个数据都会卡一下，每次都提心吊胆，差点以为香槟开早了，还好最后还是顺利运行了。但是跑起来也是得一个一个切数据，总耗时也有个几十分钟，但已经非常可以了，毕竟是一键全自动裁剪，之前手动切要折腾一上午。</p><p>大规模数据处理结果：<br><img src="/2023/11/20/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%89%B9%E9%87%8F%E8%A3%81%E5%89%AA%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/2fcd18b39f3cdd551994e9992907235c.png" alt="2fcd18b39f3cdd551994e9992907235c.png"></p><p>至此工具已经制作完成，大范围GDB数据裁剪不再是问题。接下来计划研究数据转换、数据比对之类的问题，后面的业务还会涉及到实景三维、地理实体之类的三维空间数据。</p><p>更新后的工具箱：<br><a href="kwindy%E5%B7%A5%E5%85%B7%E7%AE%B1.tbx">kwindy工具箱.tbx</a></p><p>长夜漫漫，披雪孤行。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>地理信息</tag>
      
      <tag>gdb</tag>
      
      <tag>数据库</tag>
      
      <tag>分割</tag>
      
      <tag>合并</tag>
      
      <tag>模型设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库质检逻辑设计</title>
    <link href="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/"/>
    <url>/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇主要介绍基于Data Reviewer的数据库质检方法，分析数据库质检的规则设计逻辑，总结一下哪些预设的质检项目是可以直接使用的。</p><h1 id="质检设计"><a href="#质检设计" class="headerlink" title="质检设计"></a>质检设计</h1><p>一般来说，需要针对不同的业务需求来做质检设计，但所有的质检也会有基本的共通之处。地理信息数据包含时间空间信息和字段属性，所以具体的检查也需要对应空间和属性两大方面。</p><h2 id="针对线型矢量的基本检查项目"><a href="#针对线型矢量的基本检查项目" class="headerlink" title="针对线型矢量的基本检查项目"></a>针对线型矢量的基本检查项目</h2><ul><li>基本的属性、无效几何、多部件、锐角、非线性</li><li>悬挂点</li><li>连通性</li></ul><h2 id="针对面型矢量的基本检查项目"><a href="#针对面型矢量的基本检查项目" class="headerlink" title="针对面型矢量的基本检查项目"></a>针对面型矢量的基本检查项目</h2><ul><li>基本的属性、无效几何、多部件、锐角、非线性</li><li>面要素中的空洞</li><li>狭长面</li><li>狭长面的重叠和缝隙</li><li>不必要的面边界（属性相同可融合的要素）<h2 id="根据需求自定义的检查项目"><a href="#根据需求自定义的检查项目" class="headerlink" title="根据需求自定义的检查项目"></a>根据需求自定义的检查项目</h2></li></ul><ul><li>位置检查——检查图层是否与其他图层有相交，是否在其他图层的范围内等，和GIS本身的功能“按位置选择”类似，可以按要素的空间关系进行查询。</li><li>长度、面积检查——检查要素是否在规定的尺寸范围内。项目中常常会规定最小长度、最小面积，小于这个标准的就不上图或者就近和其他要素融合。<h1 id="几何检查"><a href="#几何检查" class="headerlink" title="几何检查"></a>几何检查</h1></li></ul><h3 id="几何无效检查"><a href="#几何无效检查" class="headerlink" title="几何无效检查"></a>几何无效检查</h3><p>首先定义什么是无效几何，可以看到效验规则的描述比较概略，但是在ArcGIS的官网可以找到非常详细的讲解，我直接一整个搬过来。</p><ul><li>空——当要素的几何在其最初的初始状态以外，不含点且不含由 SHAPE_LEN 和 SHAPE_AREA 字段表示的几何信息时，产生此条件。当以编程方式创建或编辑数据以及将错误数据导入您的地理信息系统时，可引入空几何。</li><li>无——当要素的 SHAPE 字段值为空时，产生此条件。当校验无法检索要素的几何信息时，将返回此类错误信息。</li><li>具有空包络矩形——当要素的包络或边界矩形不具有任何几何信息时，产生此条件。此条件与空几何方案类似。</li><li>非简单——以下任意条件为 true 时，产生此条件：<ul><li>环方向不正确（仅适用于面要素） - 不会自相交但其环未正确定向的面（外环，顺时针；内环，逆时针）。</li><li>线段方向不正确 - 各个线段的定向不一致。线段 i 的终点应该与线段 i+1 的起点重合。</li><li>包含短线段 - 有些线段短于与几何关联的空间参考的系统单位所允许的长度。</li><li>包含自相交环（仅适用于面要素）- 面不能与自身相交。</li><li>包含自相交路径（仅适用于折线要素）- 折线不能与自身相交。</li><li>包含非闭合环（仅适用于面要素）- 环中的最后一个折点须与环的第一个折点重合。</li><li>包含不匹配的属性 - 某线段端点的 z 坐标或 m 坐标与下一条线段中与之重合的端点的 z 坐标或 m 坐标不匹配。</li><li>包含不连续的部分 - 几何的某一部分由断开的或不连续的部分组成。</li><li>空的 z 值（仅适用于启用 z 值的要素）- 几何的一个或多个折点 z 值为空（例如，NaN）。</li></ul></li></ul><p>这些查出来我也暂时不知道怎么改，有些图斑看起来真的就跟正常图形一样。<br><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/418c5a4d8483e5abe5350a3bb74ee8bc.png" alt="418c5a4d8483e5abe5350a3bb74ee8bc.png"></p><h3 id="多部件检查"><a href="#多部件检查" class="headerlink" title="多部件检查"></a>多部件检查</h3><p>视情况使用，线和面都可以查，大多数时候是不允许多部件的。偶尔也有例外，有时候业务逻辑允许存在多部件，主要看数据库的建库规范。<br><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/9c99ee6cbb6699dea4f0dcc0883962e3.png" alt="9c99ee6cbb6699dea4f0dcc0883962e3.png"></p><h3 id="锐角检查"><a href="#锐角检查" class="headerlink" title="锐角检查"></a>锐角检查</h3><p>主要用在对道路、水路的检查上，线和面都可以用，也可以查出数据处理的时候遗留的一些细小图斑或者矢量错误。有的时候数据库建库不查这个，但是这样的几何明显不符合现实情况，有条件可以改一下。<br><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/0536e9eb5d1315172c4bc3a95fb2f5b1.png" alt="0536e9eb5d1315172c4bc3a95fb2f5b1.png"></p><h3 id="非线性几何"><a href="#非线性几何" class="headerlink" title="非线性几何"></a>非线性几何</h3><p>地理信息数据一般用点构成折线，再由折线构面，一般用多个折点来表示一段弯曲的对象，此类检查应该是应对一些由算式计算出的弧线的，类似CAD中常用的倒圆角。<br><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/27cf687cd0f87450599f97c62f88be6a.png" alt="27cf687cd0f87450599f97c62f88be6a.png"></p><h3 id="自闭合检查"><a href="#自闭合检查" class="headerlink" title="自闭合检查"></a>自闭合检查</h3><p>检查一个线段是否绕了一圈回到原点，可以用来查没有打断的线条。<br><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/b8834cdd830a3d63b31ad0714cc56242.png" alt="b8834cdd830a3d63b31ad0714cc56242.png"></p><h1 id="属性检查"><a href="#属性检查" class="headerlink" title="属性检查"></a>属性检查</h1><p>属性检查主要针对要素的属性表进行检查，比如必填字段是否按规范填写，以及字段之间是否遵守了一定的逻辑规定。</p><h3 id="SQL查询"><a href="#SQL查询" class="headerlink" title="SQL查询"></a>SQL查询</h3><p>经典而通用的查询方式，这不比ArcGIS Pro的Arcade好用一万倍。SQL也用在几何检查中作为辅助手段，可以对检查的目标进行筛选，过滤掉不相干的要素。<br><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/3fa45ad7405581ef61c8b2fa09b5bb1d.png" alt="3fa45ad7405581ef61c8b2fa09b5bb1d.png"></p><h3 id="表格比对检查"><a href="#表格比对检查" class="headerlink" title="表格比对检查"></a>表格比对检查</h3><p>按照表格进行查找，找到和表格中的属性有对应一致内容的要素，相比SQL更适用于大量数据和复杂内容的查询，一般情况还是用SQL更多一些。<br><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/6ca7a819484d41282d72e545832d7276.png" alt="6ca7a819484d41282d72e545832d7276.png"></p><h1 id="其他检查项目"><a href="#其他检查项目" class="headerlink" title="其他检查项目"></a>其他检查项目</h1><p>关于Data Reviewer还有很多检查工具是暂时没用上，主要取决于项目要求，还有使用人的熟练度。<br>还有关于一些细节的问题，以后用到了再补充完善。<br>几何上完全依靠质检来查错的难度还是比较大的，程序因为设定参数的问题，可能很难100%的覆盖到所有的错误。但是属性查询是比较好做的，因为字段不涉及空间关系，逻辑会简单很多，实在不行还可以用统计分析把所有的字段情况全部列出来看。</p><p><img src="/2023/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%A8%E6%A3%80%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1/5f4f152fd278f595f16d43d54b8fff3c.png" alt="5f4f152fd278f595f16d43d54b8fff3c.png"></p><p>有多少人工才有多少智能，好的质检逻辑设计需要提前进行准备，不能等到要用了再想起来弄。<br>未雨绸缪，临危不乱。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>数据库</tag>
      
      <tag>Data Reviewer</tag>
      
      <tag>质检</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GDB数据库分割与合并工具原理</title>
    <link href="/2023/11/03/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%89%B2%E4%B8%8E%E5%90%88%E5%B9%B6%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/"/>
    <url>/2023/11/03/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%89%B2%E4%B8%8E%E5%90%88%E5%B9%B6%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>本文介绍数据库的分割与合并实现过程，主要应用于地理信息项目中对大规模数据的处理。<br>工具箱文件放在结尾。</p><h1 id="数据库分割"><a href="#数据库分割" class="headerlink" title="数据库分割"></a>数据库分割</h1><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>数据库分割的实现主要依赖ArcGIS工具库中的两个模块来实现：一个是迭代要素，一个是裁剪。围绕这两个模块完善工具模型，就做好了一个简单的数据库分割的工具模型。</p><p><img src="/2023/11/03/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%89%B2%E4%B8%8E%E5%90%88%E5%B9%B6%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/gdb%E5%88%86%E5%89%B2%E5%B7%A5%E5%85%B7%E6%A8%A1%E5%9E%8B%E5%9B%BE.png" alt="gdb分割工具模型图.png"></p><h2 id="过程与重要细节"><a href="#过程与重要细节" class="headerlink" title="过程与重要细节"></a>过程与重要细节</h2><ul><li>添加迭代要素类和裁剪两个主要模块，</li><li>添加一个要素作为裁剪图层，添加一个数据库作为输入，添加一个工作空间作为输出，把他们都作为模型参数。</li><li>给迭代添加输入参数，另外两个一般用不上，主要是添加递归选项。要素类型的作用是可以指定需要裁剪的要素类型，这样迭代中就会跳过其他类型，比如只裁剪面。选择递归可以迭代选择到路径中子文件夹和要素数据集中的要素，而取消递归的话就是只迭代当前目录下的要素。</li><li>按照模型图完成连线</li><li>把输出路径、迭代要素类的名称、裁剪结果名称三项的名字进行统一，**裁剪结果的存放路径<code>%名称%</code>的内容要改成<code>%输出路径%\%名称%</code>**。此处需要注意格式。<h1 id="数据库合并"><a href="#数据库合并" class="headerlink" title="数据库合并"></a>数据库合并</h1></li></ul><p>直接复制了别人的代码来实现。将以下代码保存为.py格式的python脚本，可以放在工具箱中运行。<br>理论上直接写入文件路径，也可以直接运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*-###############</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> arcpy<br><span class="hljs-comment"># 添加这两行可以解决乱码问题</span><br>reload(sys)<br>sys.setdefaultencoding(<span class="hljs-string">&quot;utf-8&quot;</span>)<br><br>in_path = arcpy.GetParameterAsText(<span class="hljs-number">0</span>)  <span class="hljs-comment"># 文件地理数据库（.gdb）所在文件夹路径</span><br>out_gdb_path = arcpy.GetParameterAsText(<span class="hljs-number">1</span>)  <span class="hljs-comment"># 合并后输出的文件地理数据库（.gdb）路径</span><br><br><span class="hljs-comment"># 将文件地理数据库（.gdb）所在文件夹设置为当前工作空间环境</span><br>arcpy.env.workspace = in_path<br><span class="hljs-comment"># 获取当前工作环境下所有文件数据库列表</span><br>workspaces = arcpy.ListWorkspaces(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-string">&quot;FileGDB&quot;</span>)<br><span class="hljs-comment"># workspaces = arcpy.ListWorkspaces(&quot;*&quot;, &quot;Access&quot;)</span><br>in_fc_list = []  <span class="hljs-comment"># 用于存放gdb内的要素类名称的列表</span><br><br><span class="hljs-comment"># 遍历gdb</span><br><span class="hljs-keyword">for</span> wsp <span class="hljs-keyword">in</span> workspaces:<br>    <span class="hljs-comment"># 将gdb设置为当前工作空间环境</span><br>    arcpy.env.workspace = wsp<br>    <span class="hljs-comment"># 获取gdb内要素类列表</span><br>    fc_lss = arcpy.ListFeatureClasses()<br>    <span class="hljs-keyword">for</span> fc <span class="hljs-keyword">in</span> fc_lss:<br>        <span class="hljs-keyword">if</span> fc <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> in_fc_list:<br>            <span class="hljs-comment"># 如果当前遍历到的要素类名称不在in_fc_list列表中，则添加到列表</span><br>            in_fc_list.append(fc)<br><br>arcpy.AddMessage(<span class="hljs-string">u&quot;共&#123;0&#125;个图层。&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">len</span>(in_fc_list)))<br><br>cout = <span class="hljs-number">0</span><br><span class="hljs-comment"># 遍历要素类名称列表</span><br><span class="hljs-keyword">for</span> infc <span class="hljs-keyword">in</span> in_fc_list:<br>    cout += <span class="hljs-number">1</span><br>    merge_list = []  <span class="hljs-comment"># 用于存放所有gdb中相同名称的要素类的列表</span><br>    arcpy.AddMessage(<span class="hljs-string">u&quot;  &#123;0&#125;.正在合并: &#123;1&#125;&quot;</span>.<span class="hljs-built_in">format</span>(cout, infc))<br>    <span class="hljs-keyword">for</span> wsp <span class="hljs-keyword">in</span> workspaces:<br>        <span class="hljs-comment"># 重新遍历所有gdb，分别拼接路径</span><br>        merge_fc = os.path.join(wsp, infc)<br>        <span class="hljs-keyword">if</span> arcpy.Exists(merge_fc):<br>            <span class="hljs-comment"># 如果当前遍历到的gdb内存在该名称的要素类，则添加到merge_list列表中</span><br>            merge_list.append(merge_fc)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># 如果当前遍历到的gdb内不存在该名称的要素类，则给出警告</span><br>            arcpy.AddWarning(<span class="hljs-string">u&quot;    警告：&#123;0&#125; 中不存在名称为 &#123;1&#125; 的要素类，请留意！&quot;</span>.<span class="hljs-built_in">format</span>(wsp, infc))<br>    <span class="hljs-comment"># 合并所有gdb中相同名称的要素类</span><br>    arcpy.Merge_management(merge_list, os.path.join(out_gdb_path, infc))<br>    <span class="hljs-keyword">del</span> merge_list<br></code></pre></td></tr></table></figure><p>放在工具箱里打开后，可以生成图形界面：</p><p><img src="/2023/11/03/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%89%B2%E4%B8%8E%E5%90%88%E5%B9%B6%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/gdb%E5%90%88%E5%B9%B6%E5%B7%A5%E5%85%B7%E7%95%8C%E9%9D%A2.png" alt="gdb合并工具界面.png"></p><h2 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h2><p>本篇中的数据库分割与合并的处理结果<br>本文档制作时，作者也尚未掌握更近一步的数据库处理方式。实际业务中常常需要将对应数据放在要素数据集中。理论上来说，按照指定的格式进行数据存放，把数据自动放进相应的数据集应该是不难实现的事情，不管是用Python还是用FME。该功能有待在以后进行实现。 ——20231103 kwindy</p><h1 id="额外内容：关于工具模型的描述"><a href="#额外内容：关于工具模型的描述" class="headerlink" title="额外内容：关于工具模型的描述"></a>额外内容：关于工具模型的描述</h1><p>项目描述这东西就相当于编程中的注释，可以对工具本身和每一项输入输出和参数选项进行解释说明，方便别人和以后的自己能更容易理解当前的代码，所以创建模型完成后最好补充一下模型的使用方法描述。</p><p>关于项目描述的编辑方式，可以在工具箱右键-<strong>属性</strong> 选项中进行编辑描述。而更好的方式是倒数第二个选项【<strong>项目描述</strong>】，打开项目描述框。在项目描述中可以看到Esri已经规范好了整片描述文档的格式，点击编辑即可修改整个项目所有位置的描述。</p><p><img src="/2023/11/03/GDB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%89%B2%E4%B8%8E%E5%90%88%E5%B9%B6%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/%E9%A1%B9%E7%9B%AE%E6%8F%8F%E8%BF%B0%E4%BF%AE%E6%94%B9%E7%95%8C%E9%9D%A2.png" alt="项目描述修改界面.png"></p><p>在每个文本框上面可以看到有许多格式按钮，显然这是一个类似于word的文档模式，里面是一套独有的格式系统，不适用于C语言的<code>\n</code>以及·Markdown和HTML的那套东西。</p><h2 id="工具箱文件："><a href="#工具箱文件：" class="headerlink" title="工具箱文件："></a>工具箱文件：</h2><p><a href="kwindy%E5%B7%A5%E5%85%B7%E7%AE%B1.tbx">kwindy工具箱.tbx</a></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>地理信息</tag>
      
      <tag>gdb</tag>
      
      <tag>数据库</tag>
      
      <tag>分割</tag>
      
      <tag>合并</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>地理信息数据质检的自动化实现（ArcGIS_Data_Reviewer）</title>
    <link href="/2023/10/30/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%A3%80%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E7%8E%B0%EF%BC%88ArcGIS_Data_Reviewer%EF%BC%89/"/>
    <url>/2023/10/30/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%A3%80%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E7%8E%B0%EF%BC%88ArcGIS_Data_Reviewer%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="地理信息数据质检的自动化实现（ArcGIS-Data-Reviewer）"><a href="#地理信息数据质检的自动化实现（ArcGIS-Data-Reviewer）" class="headerlink" title="地理信息数据质检的自动化实现（ArcGIS_Data_Reviewer）"></a>地理信息数据质检的自动化实现（ArcGIS_Data_Reviewer）</h1><p>在地理信息项目中经常需要提交数据库作为项目成果，一般而言常用的就是gdb或者mdb格式，对数据成果进行质检和修改，是提交成果前非常重要的一环。在当前内卷的环境下，紧缺的人手和有限的时间，让检查工作的窗口非常短暂。Data_Reviewer可以实现数据库的自动化质检，只要提前设置好规则，就不用一遍一遍的再进行手动查询了。</p><h2 id="ArcGIS-Pro-中的属性规则"><a href="#ArcGIS-Pro-中的属性规则" class="headerlink" title="ArcGIS Pro 中的属性规则"></a>ArcGIS Pro 中的属性规则</h2><p>关于这一项功能，最新的ArcGIS Pro是直接集成在内容列表里的，直接在数据列表中右键就能启动数据规则的设计和质检页面。它与曾经的属性域的主要差别应该是不一样的，属性域只是该字段内能够填写的所有值的一个范围，而且质检时，会有多个属性的数据联动的情况，属性范围在不同的情况下有不同的判断标准。</p><p><img src="/2023/10/30/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%A3%80%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E7%8E%B0%EF%BC%88ArcGIS_Data_Reviewer%EF%BC%89/a1.png" alt="a1.png"></p><p>高度集成的属性规则工具让非常先进，但是它的问题也在于此，其使用的规则设计语法是Esri自己开发的Arcade语言，而且仅支持这一项（当前版本pro 3.1）。说是为了数据安全，该语言只能在ArcGIS内部运行，其实也限制了它的潜力，<del>也就是说它只能写在ArcGIS的工程文件里头，导入导出什么的方不方便那就不得而知了，暂时还没有时间研究这个。</del>看了一下其实还可以，规则是可以通过scv导入导出的，理论上来说，应该不会很难用，只是要熟悉Arcade语言，还是需要一定的学习成本。先尝试其他方法看看，说不定老版本的玩意更难用呢。</p><p><img src="/2023/10/30/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%A3%80%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E7%8E%B0%EF%BC%88ArcGIS_Data_Reviewer%EF%BC%89/a2.png" alt="a2.png"></p><h2 id="ArcGIS-Data-Reviewer组件"><a href="#ArcGIS-Data-Reviewer组件" class="headerlink" title="ArcGIS Data Reviewer组件"></a>ArcGIS Data Reviewer组件</h2><p>实际上Data_Reviewer并不是Pro才有的，从ArcGIS 10.4里就能看到一个Data_Reviewer的安装包了，但是点击以后安装不了。这应该说的是它需要先安装ArcGIS10.4的桌面程序，可是我明明已经装了，难道是小版本对不上？10.4和10.4.1的区别？唉搞不懂。</p><p><img src="/2023/10/30/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%A3%80%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E7%8E%B0%EF%BC%88ArcGIS_Data_Reviewer%EF%BC%89/a3.png" alt="a3.png"></p><p>后来重新安装了匹配的版本，安装启动成功了，果然这个东西必须严格按照版本来匹配，最简单的办法就是找到官方的全套完整安装包。但是10.4的Data Reviewer没有中文！看着这一个个不认识的单词真是头大，于是找了一下，现在最新的10.8.2是有全套的汉化的，而且这应该是10系列32位的GIS最后一个版本了，还是重新安装个10.8.2。</p><p>找个10.8.2的全套安装包，装好了桌面端和Data Reviewer插件之后，果然能使用了，而且有中文，看的不费劲。<br>稍微研究一下就知道，它用的是SQL查询，感觉大体上应该是没问题的。不像Pro现在只支持Arcade，网上都找不到啥资料来学。</p><p><img src="/2023/10/30/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%A3%80%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%9E%E7%8E%B0%EF%BC%88ArcGIS_Data_Reviewer%EF%BC%89/a4.png" alt="a4.png"></p><h2 id="总结与探讨：关于其他的数据质检方式"><a href="#总结与探讨：关于其他的数据质检方式" class="headerlink" title="总结与探讨：关于其他的数据质检方式"></a>总结与探讨：关于其他的数据质检方式</h2><p>在实际生产项目中，用Data Reviewer进行数据质检应该是少数，就连教程都不怎么找得到，因为这实在是一个不上不下的折中方案。在数据量很小的情况下，自己手动看看属性表基本上也就搞定了，根本不用费心思去编写规则；在数据量很大的情况下，大单位和技术大佬可以另起炉灶，用Python或者其他什么方式自己构建一个质检程序，自己定义数据包和成果的格式。</p><p>所以这个工具可以是拔高个人能力上限的手段，小单位也可以用来辅助提升效率，大单位财大气粗估计是瞧不上的。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>地理信息</tag>
      
      <tag>数据库质检</tag>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Data_Reviewer使用方法</title>
    <link href="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="一、软件安装等前期步骤"><a href="#一、软件安装等前期步骤" class="headerlink" title="一、软件安装等前期步骤"></a>一、软件安装等前期步骤</h1><ol><li>必须安装<strong>版本匹配</strong>的ArcGIS和Data Reviewer插件，最好的办法是找到官方的完整程序包，并且最好带汉化。</li><li>成功安装后打开ArcMap，在主菜单-自定义-扩展模块 选项中找到<strong>扩展模块</strong>管理器，把Data Reviewer模块勾选上。</li><li>在工具栏中按右键，把Data Reviewer<strong>工具栏</strong>调出来。至此配置完成。</li></ol><h1 id="二、编辑和运行规则的方法"><a href="#二、编辑和运行规则的方法" class="headerlink" title="二、编辑和运行规则的方法"></a>二、编辑和运行规则的方法</h1><h2 id="0-单项规则的直接编辑和使用"><a href="#0-单项规则的直接编辑和使用" class="headerlink" title="0. 单项规则的直接编辑和使用"></a>0. 单项规则的直接编辑和使用</h2><p>直接在工具栏里选对应的规则，然后按右边的小按钮运行。因为太过鸡肋，一般不会这么用，可以用来测试代码。<br><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c1.png" alt="c1.png"></p><h2 id="1-启动Reviewer会话"><a href="#1-启动Reviewer会话" class="headerlink" title="1. 启动Reviewer会话"></a>1. 启动Reviewer会话</h2><p>在Data Reviewer工具栏的第二个小按钮(小绿勾地球)，打开Reviewer会话管理器，选择工作空间和会话，在左下角点击第二个按钮。会话，启动！<br>如果是线上Oracle库的话，还可以选择数据库版本。</p><p><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c2.png" alt="c2.png"></p><h2 id="2-编辑质检规则"><a href="#2-编辑质检规则" class="headerlink" title="2. 编辑质检规则"></a>2. 编辑质检规则</h2><p>使用<strong>Reviewer批处理管理器</strong>，编辑质检规则。在批处理作业内容列表里，按右键就可以建立分组和质检条目，并且可以支持导入。每次写完规则以后，都需要保存，因为这个管理器是不会保存内容的，每次打开编辑规则都需要重新导入。<br>编辑规则使用选项+SQL查询的方式，不需要懂许多代码。<br>可以先编辑碎片化的规则，再使用插入功能，由简到繁逐渐完善。<br>另外，编辑好的规则可以适用不同的工作空间，只需要切换就可以了。<br><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c3.png" alt="c3.png"></p><p>打开保存的.rbj文件可以看到是非格式化的代码，但用的还是标准字符，理论上可以解析，实际上还是先用这个批处理管理器去编辑就行了。</p><p><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c4.png" alt="c4.png"></p><h2 id="3-启动批量验证"><a href="#3-启动批量验证" class="headerlink" title="3. 启动批量验证"></a>3. 启动批量验证</h2><p>点击Reviewer工具栏倒数第四个按钮（三个小绿勾），启动批量验证，选择<strong>工作空间、质检范围，导入质检规则</strong>。准备好以后，点击<strong>运行</strong>。质检，启动！<br><strong>如果没有第一步建立会话，这个按钮就是黑的点不了。</strong><br><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c5.png" alt="c5.png"></p><h2 id="4-打开Reviewer表"><a href="#4-打开Reviewer表" class="headerlink" title="4. 打开Reviewer表"></a>4. 打开Reviewer表</h2><p>运行质检成功后，反馈的结果可以用Reviewer 表查看，在Reviewer工具栏中第三个小表格按钮。在这个界面下可以进行分组、统计、编辑，还可以将检查结果符号化，比如将错误的位置作为单独的一个图层显示出来。<br>本次质检流程结束。</p><p><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c6.png" alt="c6.png"></p><h2 id="5-其他功能"><a href="#5-其他功能" class="headerlink" title="5. 其他功能"></a>5. 其他功能</h2><p>手动添加错误要素进检查表<br><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c7.png" alt="c7.png"></p><p>标记错误位置<br><img src="/2023/10/30/Data_Reviewer%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/c8.png" alt="c8.png"></p><h1 id="三、结尾"><a href="#三、结尾" class="headerlink" title="三、结尾"></a>三、结尾</h1><p>Data Reviewer插件的基本使用方法就是这样，还有很多细节比如每一项质检规则的用法，以及用Reviewer表配合数据修改，甚至错误数据自动更正等等，以后用到了再进行记录。</p><p>数据库质检自动化还是非常有用的，小项目预算有限，普通人能力也有限，不是谁都能徒手搓软件的，会写点SQL查询不错了。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Arcgis</tag>
      
      <tag>软件</tag>
      
      <tag>地理信息</tag>
      
      <tag>Reviewer</tag>
      
      <tag>数据库质检</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArcGISPro的安装和使用</title>
    <link href="/2023/10/27/ArcGISPro%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/10/27/ArcGISPro%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="ArcGIS-Pro的安装和使用"><a href="#ArcGIS-Pro的安装和使用" class="headerlink" title="ArcGIS Pro的安装和使用"></a>ArcGIS Pro的安装和使用</h1><h2 id="开头废话"><a href="#开头废话" class="headerlink" title="开头废话"></a>开头废话</h2><p>Esri公司最早的地理信息相关产品大概可以追溯到1981年，ArcGIS 9大概出现在2004年，而里程碑式的标杆版本ArcGIS 10.2是2012年的产品，距今已经过去了10年了。Arcmap在当时可以说是极其先进的地理信息集成处理软件，在各个领域广泛的应用。<br>但刚好这十年也是个人计算机性能大爆发的时间，所以至今就算是版本更新到10.8，其性能调度设定依然比较保守，即使是比较好的电脑在显示刷新数据时一样也是会卡，而且大规模的数据处理也是软件卡死的重灾区，可以理解为在软件设计时考虑到减少bug，做了很多限制，没有让计算机性能得到充分利用，而且随着软件的迭代，一些历史遗留问题堆积起来也就变成了屎山代码，如果没有进行彻底的底层重构的话，再怎么优化也有上限。<br>总之就是用起来卡爆了，还得是尝试一下最新的产品，所以试一下ArcGIS pro。它其实也出了一段时间，大改随着10.4一并发展的，优化到现在是3.1版本，应该相当不错了。</p><p>目前虽然出了ArcGIS pro，但原来的ArcGIS也在更新，版本已经来到了11.1，和ArcGIS pro 3.1并列两条产品线。<br>而且我看到官网上说，10.9是最后一个支持Arcmap发布服务到ArcGIS Server的版本，后面好像就对整个体系进行大改了。</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="1-安装-NET环境"><a href="#1-安装-NET环境" class="headerlink" title="1. 安装.NET环境"></a>1. 安装.NET环境</h3><p>Microsoft.NET，很多软件都要求的东西了，软件包里配的版本是6.0.5，经供参考。</p><h3 id="2-ArcGISPro主程序"><a href="#2-ArcGISPro主程序" class="headerlink" title="2. ArcGISPro主程序"></a>2. ArcGISPro主程序</h3><h3 id="3-安装补丁包"><a href="#3-安装补丁包" class="headerlink" title="3. 安装补丁包"></a>3. 安装补丁包</h3><p>可能是因为ArcGIS Pro还是比较新的软件，现在还在不断地更新中，所以才有这种东西，我也不知道补了啥，反正就装着吧。</p><h3 id="4-程序汉化"><a href="#4-程序汉化" class="headerlink" title="4. 程序汉化"></a>4. 程序汉化</h3><p>主程序里是包含了汉化包的，安装的时候不要手贱取消就用不上这个。</p><h3 id="5-其他工具"><a href="#5-其他工具" class="headerlink" title="5. 其他工具"></a>5. 其他工具</h3><p>软件包里还配了一些东西，和老版本的GIS有些类似，反正我也没搞懂，先不装也行。</p><ul><li>Data_Interop_Ext</li><li>ArcGISProSDK</li><li>Workflow_Manager_Classic</li><li>ArcGIS_License_Manager</li></ul><h3 id="6-替换文件破解"><a href="#6-替换文件破解" class="headerlink" title="6.替换文件破解"></a>6.替换文件破解</h3><p>首先感谢破解人的贡献</p><p>原说明</p><blockquote><p>Copy “AfCore.dll” to the <installdir><br>Import “lic.reg” to the registry.<br>Copy folder “ESRI_Licensing&quot; to the folder “C:\Users{username}\AppData\Local&quot;</p></blockquote><p><img src="/2023/10/27/ArcGISPro%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/b1.png" alt="b1.png"></p><p>就是AfCore.dll要放软件根目录bin，ESRI_Licensing文件夹要放用户目录里面，最后注册表lic.reg双击运行一下就行。</p><h2 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h2><p>在使用体验上，最明显的提升就是画面显示的速度，比起ArcMap提升了许多倍，在显示省级甚至国级的几十万条数据时也可做到延迟极短。不仅是数据加载的快了，操作也流畅了很多，各种功能和按键的交互过程非常流畅主要是不会像ArcMap一样卡顿。（当然不是Pro就完美无缺了，一通乱点的话也是会卡死的）<br>当然相应的，Pro会占用更多的性能资源，这一点对于老电脑当然是不友好的。</p><p>另外值得一提的是，从导入地图的选项中，可以导入以前用Arcmap制作的地图文件，然后在通过熟悉的重新定向数据源，就可以轻松实现地图文档的版本转换。<br><img src="/2023/10/27/ArcGISPro%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/b2.png" alt="b2.png"></p><h2 id="ArcGIS-Oracle工作环境"><a href="#ArcGIS-Oracle工作环境" class="headerlink" title="ArcGIS + Oracle工作环境"></a>ArcGIS + Oracle工作环境</h2><p>Oracle数据库存储gdb数据可以很方便的在内网环境实现多人协同工作。这种方式在应对复杂的团队内业工作时非常重要。<br>ArcGIS pro支持的Oracle数据库最低版本为<strong>19c</strong>，而已经部署好的Arcgis10.4环境所匹配的数据库版本是<strong>11g</strong>。所以即使用上了新软件，也无法直接连接老的Oracle数据库。<br><img src="/2023/10/27/ArcGISPro%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/b3.png" alt="b3png"><br>所以解决方案应该是在服务器上重新安装新版本的Oracle数据库和客户端，在把新的数据库挂在线上。这方面主要的麻烦点还是服务器端的配置，而用户端只需要安装好软件配置好监听，基本上流程不是很长。</p><h2 id="ArcGIS-Server"><a href="#ArcGIS-Server" class="headerlink" title="ArcGIS Server"></a>ArcGIS Server</h2><p>虽然Oracle无法直接使用，但ARCGIS自身的server是可以直接使用的，这个主要用来发布地图服务，让多个用户共享影像，避免几个T的影像拷赖拷去，节省了空间。当然如果要加载流畅的话，数据源该切片还得切片。对于已发布的地图服务，可以直接通过url调用。另外如果有设置访客认证的话还需要输入账户和密码。</p><p><img src="/2023/10/27/ArcGISPro%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/b4.png" alt="b4.png"></p><p><img src="/2023/10/27/ArcGISPro%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/b5.png" alt="b5.png"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>老版本Arcmap作为已经投入使用十年的产品，好处就是比较稳定，相应的插件也比较多，即使有了新软件，但为了能够和以前的业务衔接上，以及和其他人配合工作，还是不得不安装的。</p><p>ArcGIS Pro确实值得尝试，但是关于数据发布相关的Server不知道是集成在了软件内还是另有程序，一些使用上的细节和习惯还得以后继续学习。尤其是<strong>ArcGIS + Oracle的环境配置</strong>，要搞明白这个得写好多篇文档才行。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Arcgis</tag>
      
      <tag>Pro</tag>
      
      <tag>软件</tag>
      
      <tag>地理信息</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown文档装饰技巧</title>
    <link href="/2023/10/18/markdown%E6%96%87%E6%A1%A3%E8%A3%85%E9%A5%B0%E6%8A%80%E5%B7%A7/"/>
    <url>/2023/10/18/markdown%E6%96%87%E6%A1%A3%E8%A3%85%E9%A5%B0%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<p>修饰只是锦上添花的技巧，<br>优质的内容才是一篇文档的意义所在</p><h1 id="字体颜色"><a href="#字体颜色" class="headerlink" title="字体颜色"></a>字体颜色</h1><ol><li>markdown的文字变色方法<figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">$\color</span><span class="hljs-template-variable">&#123;颜色对应的英文或16进制码&#125;</span><span class="hljs-template-variable">&#123;想要变色的内容&#125;</span><span class="language-xml">$</span><br></code></pre></td></tr></table></figure>示例：<code>$\color&#123;red&#125;&#123;red 红色&#125;$</code></li></ol><p>效果：$\color{red}{red 红色}$</p><p>但是有个很奇怪的地方就是这个改色方法不能识别字符串中的空格，使用时需要注意。</p><ol start="2"><li>html的文字变色方法<br>html的变色方式就比上面那种要繁琐一些，</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">颜色英文名或16进制码</span>&gt;</span>需要变色的文字内容<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br></code></pre></td></tr></table></figure><p>示例：<code>&lt;font color=RoyalBlue&gt;宝蓝色&lt;/font&gt;</code></p><p>效果：<font color=RoyalBlue>宝蓝色</font></p><h2 id="色卡表"><a href="#色卡表" class="headerlink" title="色卡表"></a>色卡表</h2><p>| 红色 | #FF0000 | red | </p><p>橙色 #FF7D00 orange<br>黄色 #FFFF00 yellow<br>绿色 #008000 green<br>亮绿色 #00FF00 lime<br>灰绿色 #32CD32 LimeGreen<br>蓝色 #0000FF Blue<br>蓝绿色（蓝绿均全色） #00FFFF Cyan<br>蓝绿色（蓝绿均半色） #008080 teal<br>深蓝色 #000080 navy<br>浅蓝色 #A0B0E0 NavyBlue<br>紫红色（新的命名） #FF00FF Magenta<br>紫红色（旧的命名） #FF00FF fuchsia<br>黑色 #000000 Black<br>艾丽丝蓝 #F0F8FF AliceBlue<br>古典白色 #FAEBD7 AntiqueWhite<br>浅绿色 #7FFFD4 Aquamarine<br>蓝紫色 #8A2BE2 BlueViolet<br>棕色 #A52A2A Brown<br>灰色 #808080 gray<br>橄榄绿色 #808000 olive<br>草绿色 #6B8E23 OliveDrab<br>紫色 #800080 purple<br>银色 #C0C0C0 silver<br>白色 #FFFFFF white</p><h1 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h1>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>字体颜色</tag>
      
      <tag>html</tag>
      
      <tag>文档</tag>
      
      <tag>字体大小</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>“三旧”改造入库数据处理流程</title>
    <link href="/2023/10/18/%E2%80%9C%E4%B8%89%E6%97%A7%E2%80%9D%E6%94%B9%E9%80%A0%E5%85%A5%E5%BA%93%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/"/>
    <url>/2023/10/18/%E2%80%9C%E4%B8%89%E6%97%A7%E2%80%9D%E6%94%B9%E9%80%A0%E5%85%A5%E5%BA%93%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="“三旧”改造入库数据处理流程"><a href="#“三旧”改造入库数据处理流程" class="headerlink" title="“三旧”改造入库数据处理流程"></a>“三旧”改造入库数据处理流程</h1><h2 id="前期需要准备的材料"><a href="#前期需要准备的材料" class="headerlink" title="前期需要准备的材料"></a>前期需要准备的材料</h2><ol><li>旧时期的影像（如2009年）</li><li>范围内的建筑物矢量数据（可以自己用影像画）</li><li>土地规划数据</li><li>第二次国土调查数据</li><li>最新国土调查数据</li><li>土地证数据</li></ol><ul><li>以宗地为基本单元。有合法用地手续的，以用地批文（按项目报批）、土地划拨决定书、土地出让合同、建设用地批准书、不动产权证（土地使用证）确定的宗地范围为基本单元入库；</li></ul><p>无合法用地手续的，按历史用地协议（包括流转土地所有权、使用权的各类用地合同或协议）约定的用地范围、违法用地处罚决定书、行政区划界限、详细规划控制单元、道路、河流或者产权边界等因素合理确定入库范围。</p><h2 id="处理步骤"><a href="#处理步骤" class="headerlink" title="处理步骤"></a>处理步骤</h2><h3 id="1-确认入库范围"><a href="#1-确认入库范围" class="headerlink" title="1. 确认入库范围"></a>1. 确认入库范围</h3><p>入库范围由地方资源局的更新股提供，一般而言土地证范围就是入库范围。若土地证面积过大而指标不足时，需要自定范围。入库范围必须符合土地规划（必须是建设用地、允许建设区）、第二次国土调查（建设用地）、第三次国土调查（建设用地或城镇村范围内）。自定范围时若宗地的图形节点过多，可以做适量的删减，这样界址点成果表就不会太长。土地证一般拿不到矢量，需要自己，若能拿到界址点成果表也可以自己生成范围。</p><p>入库范围和一些字段要求需要和材料的提交方核对，例如改造类型、图斑编号等。<br>确认入库范围以后就可以制作入库矢量数据了，根据系统不同，可能是shp、mdb、gdb，甚至离谱一点的用txt。</p><h3 id="2-制作建筑物测量图"><a href="#2-制作建筑物测量图" class="headerlink" title="2. 制作建筑物测量图"></a>2. 制作建筑物测量图</h3><p>一般而言入库范围根据法规要求，建筑基底面积需要满足一定的比例，例如大于等于30%，才能入库。工厂等建筑稀少的特殊区域不受此限制。测量图需要标明宗地线、范围内的建筑物以及建筑物的占地面积。需要核对旧时期的影像，确保建筑物是旧时期的建筑，把不是旧建筑的去除。确认建筑物矢量后，计算建筑物占地面积占宗地总面积的比例。入库范围和建筑比例都确认无误后，可以制作图框，生成界址点成果表，补充文字说明。</p><h3 id="3-制作其他地图"><a href="#3-制作其他地图" class="headerlink" title="3. 制作其他地图"></a>3. 制作其他地图</h3><p>土地利用总体规划图、旧时期土地利用现状图、最新一期土地利用现状图、旧时期影像图。若入库地块的相邻处有已入库的地块，要需要一个入库范围示意图。在有模板的情况下套用数据，出图就很快；若没有模板则需要自己制作模板，一些图例等可以从参考资料的图片里抠下来直接贴在地图上，避免自己制作图例。</p><h3 id="4-制作其他材料"><a href="#4-制作其他材料" class="headerlink" title="4. 制作其他材料"></a>4. 制作其他材料</h3><p>入库申请表、确认函、测绘报告、面积统计表、XX证明等等，根据文件的要求进行准备。整理完毕后放一起，排个序，列一个成果清单。</p><h3 id="5-提交盖章的电子版材料-需要盖章的部分用扫描件-，同时线下提交盖章的纸质版材料。"><a href="#5-提交盖章的电子版材料-需要盖章的部分用扫描件-，同时线下提交盖章的纸质版材料。" class="headerlink" title="5. 提交盖章的电子版材料(需要盖章的部分用扫描件)，同时线下提交盖章的纸质版材料。"></a>5. 提交盖章的电子版材料(需要盖章的部分用扫描件)，同时线下提交盖章的纸质版材料。</h3><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>需要和更新股沟通好需要的数据，尤其是土地证，一些国有土地的城市区域可能很难找到相关的材料，早都遗失不知道哪去了，或者是土地权利太过分散的，也不好弄，因为要以宗地为基本的入库单元。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>三旧改造</tag>
      
      <tag>内业</tag>
      
      <tag>标图建库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>几种osgb格式转3Dtiles格式的方法</title>
    <link href="/2023/10/18/%E5%87%A0%E7%A7%8Dosgb%E6%A0%BC%E5%BC%8F%E8%BD%AC3Dtiles%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2023/10/18/%E5%87%A0%E7%A7%8Dosgb%E6%A0%BC%E5%BC%8F%E8%BD%AC3Dtiles%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="几种osgb格式转3Dtiles格式的方法"><a href="#几种osgb格式转3Dtiles格式的方法" class="headerlink" title="几种osgb格式转3Dtiles格式的方法"></a>几种osgb格式转3Dtiles格式的方法</h1><h2 id="小工具：可以转，但是要手动输入坐标。效率应该也比较一般。"><a href="#小工具：可以转，但是要手动输入坐标。效率应该也比较一般。" class="headerlink" title="小工具：可以转，但是要手动输入坐标。效率应该也比较一般。"></a>小工具：可以转，但是要手动输入坐标。效率应该也比较一般。</h2><h2 id="OSGBLab"><a href="#OSGBLab" class="headerlink" title="OSGBLab"></a>OSGBLab</h2><p>几经迭代，已经是比较成熟的软件了。可以转格式，可以查看，效率非常高，很好用，但是超过10G会有水印。由需求的话可以购入专业版，但这个价格可能不便宜，个人还是不要买了，看公司需要再采购。</p><h2 id="Cesiumlab"><a href="#Cesiumlab" class="headerlink" title="Cesiumlab"></a>Cesiumlab</h2><p>Cesium实验室的一个工具，也是比较成熟和完善的软件。个人可以使用，要转换大模型的话还是看公司采购。【可以在咸鱼买到破解版，也可以用】</p><h2 id="三维工厂"><a href="#三维工厂" class="headerlink" title="三维工厂"></a>三维工厂</h2><p>加载不了模型，一加载就闪退，让人摸不着头脑。虽然网上说很好用，但我实在是没整明白。难道是我的问题？</p><h2 id="其他可能的选项"><a href="#其他可能的选项" class="headerlink" title="其他可能的选项"></a>其他可能的选项</h2><p>FME 这个我是真的不想在自己的电脑上装，它的许可管理会和Arcgis打架，用起来很麻烦。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>3Dtiles</tag>
      
      <tag>osgb</tag>
      
      <tag>论坛</tag>
      
      <tag>格式转换</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo部署在GitHub的问题与解决方案汇总</title>
    <link href="/2023/08/19/Hexo%E9%83%A8%E7%BD%B2%E5%9C%A8GitHub%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2023/08/19/Hexo%E9%83%A8%E7%BD%B2%E5%9C%A8GitHub%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h2 id="因为使用博客总是会遇到问题，所以此贴专门用来记录遇到的各种问题以及解决方案。缝缝补补又一年。"><a href="#因为使用博客总是会遇到问题，所以此贴专门用来记录遇到的各种问题以及解决方案。缝缝补补又一年。" class="headerlink" title="因为使用博客总是会遇到问题，所以此贴专门用来记录遇到的各种问题以及解决方案。缝缝补补又一年。"></a>因为使用博客总是会遇到问题，所以此贴专门用来记录遇到的各种问题以及解决方案。缝缝补补又一年。</h2><h2 id="Fatal-Unable-To-Access-‘Https-Github-Com-…‘的解决办法"><a href="#Fatal-Unable-To-Access-‘Https-Github-Com-…‘的解决办法" class="headerlink" title="Fatal: Unable To Access ‘Https://Github.Com/…‘的解决办法"></a>Fatal: Unable To Access ‘Https://Github.Com/…‘的解决办法</h2><p>问题日期：2023年8月19日</p><p>问题描述：</p><p>莫名其妙的就无法上传了。执行<code>hexo d</code>时，报错<code>Fatal: Unable To Access ‘Https://Github.Com/…‘</code>,错误代码128。</p><p>解决过程：</p><p>单独试了一下GitHub.com能否打开，发现是可以打开的，说明不是网络问题，是设置的问题，于是百度了一下，尝试在CMD中输入以下代码：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--unset</span> http<span class="hljs-selector-class">.proxy</span><br>git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--unset</span> https.proxy<br></code></pre></td></tr></table></figure><p>然后上传成功，问题解决。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python环境安装和配置</title>
    <link href="/2023/07/27/python%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/07/27/python%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>突然发现我的大笔记本重装了系统后，除了Arcgis自带的python2.7，还没有安装过python环境。为了</p><p>首先当然是去python的官网下载python安装包<br><a href="https://www.python.org/">www.python.org</a></p><p>然后正常安装和配置就可以了</p><p>但是有时候遇到python不同版本之间的不兼容问题，就会非常头大，所以更好的方式还是安装一个环境管理，例如Anaconda。（以前Anaconda还是很好用的，现在不一定，所以要根据实际情况去选择。）</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>osgb</tag>
      
      <tag>三维模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Cesium的Mars3D使用方法</title>
    <link href="/2023/07/24/%E5%9F%BA%E4%BA%8ECesium%E7%9A%84Mars3D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2023/07/24/%E5%9F%BA%E4%BA%8ECesium%E7%9A%84Mars3D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="基于Cesium的Mars3D使用方法"><a href="#基于Cesium的Mars3D使用方法" class="headerlink" title="基于Cesium的Mars3D使用方法"></a>基于Cesium的Mars3D使用方法</h1><p>最近在做相关的项目，就记录一下自己对轻量化的数据平台Mars3D和轻量化服务器Nginx的理解。</p><h2 id="一、基础资源列表"><a href="#一、基础资源列表" class="headerlink" title="一、基础资源列表"></a><font color=RoyalBlue>一、基础资源列表</font></h2><ol><li>Nginx 站点的全部代码内容</li><li>mapdata 用于存放平台使用的本地地理数据，包括矢量、地形、影像、模型等等。可以根据自己的需要在里面进一步细分存储空间。</li></ol><h3 id="Nginx下的各文件夹的作用："><a href="#Nginx下的各文件夹的作用：" class="headerlink" title="Nginx下的各文件夹的作用："></a>Nginx下的各文件夹的作用：</h3><p>conf 服务器配置文件夹</p><p>contrib 扩展文件夹</p><p>docs 文档文件夹</p><p>html 网页界面相关文件夹</p><p>logs 日志文件夹</p><p>temp 临时文件夹</p><h2 id="二、主要的配置文件"><a href="#二、主要的配置文件" class="headerlink" title="二、主要的配置文件"></a><font color=RoyalBlue>二、主要的配置文件</font></h2><h3 id="1-“nginx-service-xml”-文件"><a href="#1-“nginx-service-xml”-文件" class="headerlink" title="1.  “nginx-service.xml” 文件"></a>1.  “nginx-service.xml” 文件</h3><p>服务器部署文件，在里面修改网站的部署地址。</p><h3 id="2-“conf-host-localhsot-80-conf”-文件"><a href="#2-“conf-host-localhsot-80-conf”-文件" class="headerlink" title="2. “conf\host\localhsot_80.conf” 文件"></a>2. “conf\host\localhsot_80.conf” 文件</h3><p>本地部署时的端口和数据路径设置。</p><p>修改本地地图数据的路径。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> /mapdata &#123;  <br>    <span class="hljs-attribute">include</span> nginx_cors; <br>    <span class="hljs-attribute">root</span> H:\\;  <br>            <span class="hljs-attribute">index</span>  index.html index.htm;<br>            <span class="hljs-attribute">expires</span> <span class="hljs-number">30d</span>;  <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-“conf-nginx-conf”-文件"><a href="#3-“conf-nginx-conf”-文件" class="headerlink" title="3. “conf\nginx.conf” 文件"></a>3. “conf\nginx.conf” 文件</h3><p>服务器性能调用配置文件，调用性能与硬件性能匹配以达到最佳效果。</p><h3 id="4-“html-index-html”-文件"><a href="#4-“html-index-html”-文件" class="headerlink" title="4. “html\index.html” 文件"></a>4. “html\index.html” 文件</h3><p>网站起始页码，内容比较简洁，大部分内容都放在外置的js文件里了。</p><h3 id="5-“html-js-index-js”-文件"><a href="#5-“html-js-index-js”-文件" class="headerlink" title="5. “html\js\index.js” 文件"></a>5. “html\js\index.js” 文件</h3><p>网站起始页的代码，包括了初始化和开场动画，以及不同设备的优化。<br>旁边的server.js还包含了用户访问、登录方面的设置，但目前好像并没有用上。</p><h3 id="6-“html-config-config-json”-文件"><a href="#6-“html-config-config-json”-文件" class="headerlink" title="6. “html\config\config.json” 文件"></a>6. “html\config\config.json” 文件</h3><p>用来导入数据的主要配置文件。因为内容较多会显得比较冗长杂乱，后期可以通过代码的完善。</p><ul><li><p>“scene”<br>基础场景对象，加载的时候会初始化一个center对象，用来改变镜头的位置和角度。</p></li><li><p>“center”<br>lat 纬度 ；lng 经度 ； alt 高程 ；heading 镜头朝向的方位角 ； pitch 俯仰角 ；roll 翻滚角。<br>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;center&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;lat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">18.63970149</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;lng&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">109.9013823</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;alt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">11333.9</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;heading&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">359.2</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;pitch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">-39.5</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;roll&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">360</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure></li><li><p>“terrain”<br>地形对象，可以通过url调用地形数据，在三维场景中制造地形效果。</p></li><li><p>“basemaps”<br>底图对象，通过url调用基础地图和基础影像服务。</p></li><li><p>“layers”<br>图层对象，用来导入各种矢量、影像、模型等数据。矢量需要转成geojson格式，模型也需要转成浏览器支持的gltf、3Dtiles格式。<br>通过url进行导入，例如</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://localhost:801/mapdata/3dtiles/倾斜摄影-县城社区/qx-shequ/tileset.json&quot;</span><br></code></pre></td></tr></table></figure><p>在导入数据后，需要把center的位置改为对象的位置，便于查看。<br>一般json文件中会自带模型的位置，可以通过position参数调整对象的位置。<br>例如修改高程：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&quot;<span class="hljs-attribute">position</span>&quot;: &#123; &quot;alt&quot;: <span class="hljs-number">54.41342228</span> &#125;<br></code></pre></td></tr></table></figure></li><li><p>“html\config\widget.json” 文件<br>按钮和功能的配置文件，包括了工具栏里面的一些内容的链接，而实现具体功能的文件在<br><code>html\widgets\</code></p></li></ul><h2 id="三、几种数据的加载方式"><a href="#三、几种数据的加载方式" class="headerlink" title="三、几种数据的加载方式"></a><font color=RoyalBlue>三、几种数据的加载方式</font></h2><p><font color=red size=5>重要事项：在将shp数据导出geojson成格式之前，一定要做坐标转换，从常用的CGCS2000等转换成WGS84，否则会在加载时显示异常。</font></p><h3 id="1-”geojson”格式"><a href="#1-”geojson”格式" class="headerlink" title="1.”geojson”格式"></a>1.”geojson”格式</h3><p>geojson格式相当于Arcmap中的shp，只包含矢量数据和字段，而不包含制图表达和符号系统，在Arcmap中可以简单的通过符号系统去设置的东西，在这里只能自己去配置了。这里仅测试了已定义的表达方式，如果需要更好的效果，可能需要重新进行定义。</p><p>加载geojson格式矢量时需要注意数据的大小问题，超过20Mb的json文件就会在加载时卡顿了，体验非常不好，可能可以通过矢量节点简化、拆分json文件进行分段式加载等手段进行优化。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;<br>    &quot;pid&quot;: <span class="hljs-number">3030</span>,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;geojson&quot;</span>, 【数据类型标记】<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;提蒙村庄规划&quot;</span>,  【数据名称】<br>    <span class="hljs-string">&quot;url&quot;</span>: <br>    <span class="hljs-string">&quot;http://localhost:801/mapdata/json/timengcunguihua.json&quot;</span>,【数据来源】<br>    <span class="hljs-string">&quot;symbol&quot;</span>: &#123;<br>        &quot;styleOptions&quot;: &#123; &quot;<span class="hljs-attribute">opacity</span>&quot;: <span class="hljs-number">0.6</span>【不透明度】, <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;#0000FF&quot;</span>, <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">3</span>, <span class="hljs-string">&quot;clampToGround&quot;</span>: true 【是否紧贴地面】,<span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">100</span>【尝试加了高度但没有用】&#125;,<br>        &quot;styleField&quot;: <span class="hljs-string">&quot;GHDLMC&quot;</span>【根据字段重新添加配色】,<br>        <span class="hljs-string">&quot;styleFieldOptions&quot;</span>: &#123; 【配色列表】<br>            &quot;耕地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FFDF7F&quot;</span> &#125;,<br>            &quot;园地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FFFF00&quot;</span> &#125;,<br>            &quot;林地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF6A38&quot;</span> &#125;,<br>            &quot;湿地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF6A38&quot;</span> &#125;,<br>            &quot;村庄内部道路用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF850A&quot;</span> &#125;,<br>            &quot;种植设施建设用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF00FF&quot;</span> &#125;,<br>            &quot;畜禽养殖建设用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF00FF&quot;</span> &#125;,<br>            &quot;农村宅基地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF7FFF&quot;</span> &#125;,<br>            &quot;农村社区服务设施用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF7FFF&quot;</span> &#125;,<br>            &quot;中小学用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#00A57C&quot;</span> &#125;,<br>            &quot;社会福利用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#A5527C&quot;</span> &#125;,<br>            &quot;商业用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF7F9F&quot;</span> &#125;,<br>            &quot;通信用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF0000&quot;</span> &#125;,<br>            &quot;水工设施用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#7F0000&quot;</span> &#125;,<br>            &quot;其他公用设施用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#FF7F7F&quot;</span> &#125;,<br>            &quot;特殊用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#A57C52&quot;</span> &#125;,<br>            &quot;留白用地&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#C0C0C0&quot;</span> &#125;,<br>            &quot;河流水面&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#00BFFF&quot;</span> &#125;,<br>            &quot;坑塘水面&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#00FF00&quot;</span> &#125;,<br>            &quot;沟渠&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#007F00&quot;</span> &#125;<br>        &#125;<br>    &#125;,<br>    &quot;popup&quot;: <span class="hljs-string">&quot;&#123;GHDLMC&#125;&quot;</span>, 【标签】<br>    <span class="hljs-string">&quot;show&quot;</span>: false, 【是否默认展示】<br>    <span class="hljs-string">&quot;flyTo&quot;</span>: true  【跳转至目标位置】<br>&#125;,<br></code></pre></td></tr></table></figure><h3 id="“symbol”"><a href="#“symbol”" class="headerlink" title="“symbol”"></a><strong>“symbol”</strong></h3><p>symbol对象就是矢量数据的对象，支持geojson和kml格式。</p><p><img src="/2023/07/24/%E5%9F%BA%E4%BA%8ECesium%E7%9A%84Mars3D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/geojson%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E6%A0%B7%E4%BE%8B1.png" alt="geojson矢量数据样例"></p><p>需要注意的是，根据geojson的不同对象类型，symbol也会起到不同的作用。geojson可以包含点、线、面、多点、多线、多面等矢量类型，比如对象是线的时候，可以用outlineColor去修改线的颜色，用fill可以填充成面的效果，但好像改不了颜色，而且线不完整的时候会有BUG；但是对象是面的时候，就可以使用color去改变图块的颜色。</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">&quot;symbol&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;styleOptions&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;fill&quot;</span>: <span class="hljs-literal">false</span>,          【内部是否填充,选<span class="hljs-literal">true</span>的话就会自动填满白色，还改不了颜色】<br>            <span class="hljs-string">&quot;opacity&quot;</span>: <span class="hljs-number">0</span>,           【不透明度，取值<span class="hljs-number">0</span>~<span class="hljs-number">1</span>之间，<span class="hljs-number">0</span>表示透明】<br>            <span class="hljs-string">&quot;outline&quot;</span>: <span class="hljs-literal">true</span>,        【外边线是否显示】<br>            <span class="hljs-string">&quot;outlineColor&quot;</span>: <span class="hljs-string">&quot;<span class="hljs-subst">#FED976</span>&quot;</span>, 【外边线的颜色】<br>            <span class="hljs-string">&quot;outlineWidth&quot;</span>: <span class="hljs-number">3</span>,      【外边线宽度】<br>            <span class="hljs-string">&quot;outlineOpacity&quot;</span>: <span class="hljs-number">1</span>,    【外边线的不透明度】<br>            <span class="hljs-string">&quot;perPositionHeight&quot;</span>: <span class="hljs-literal">false</span>, 【是否根据位置来调整符号的高度】<br></code></pre></td></tr></table></figure><h3 id="“label”"><a href="#“label”" class="headerlink" title="“label”"></a><strong>“label”</strong></h3><p>label标签的作用是直接在矢量上进行文字注记，它是symbol下的一个子对象。类似与Arcmap的注记，不过这个功能当然少很多，调起来也麻烦很多。</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">&quot;label&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;&#123;name&#125;&quot;</span>, 【显示的字段】<br>            <span class="hljs-string">&quot;opacity&quot;</span>: <span class="hljs-number">0</span>,     【标签不透明度，<span class="hljs-number">0</span>是完全透明】<br>            <span class="hljs-string">&quot;font_size&quot;</span>: <span class="hljs-number">30</span>,  【标签字体大小】<br>            <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;<span class="hljs-subst">#ffffff</span>&quot;</span>,【字体颜色】<br>            <span class="hljs-string">&quot;outline&quot;</span>: <span class="hljs-literal">true</span>,      【文字轮廓线】<br>            <span class="hljs-string">&quot;outlineColor&quot;</span>: <span class="hljs-string">&quot;#000000&quot;</span>,    【轮廓线颜色】<br>            <span class="hljs-string">&quot;outlineWidth&quot;</span>: <span class="hljs-number">3</span>,            【轮廓线宽度】<br>            <span class="hljs-string">&quot;scaleByDistance&quot;</span>: <span class="hljs-literal">true</span>,          【是否根据距离调整标签大小】<br>            <span class="hljs-string">&quot;scaleByDistance_far&quot;</span>: <span class="hljs-number">2743804</span>,   【最远阈值】<br>            <span class="hljs-string">&quot;scaleByDistance_farValue&quot;</span>: <span class="hljs-number">0.3</span>,  【最远缩放比例】<br>            <span class="hljs-string">&quot;scaleByDistance_near&quot;</span>: <span class="hljs-number">10000</span>,    【最近阈值】<br>            <span class="hljs-string">&quot;scaleByDistance_nearValue&quot;</span>: <span class="hljs-number">1</span>,   【最近缩放比例】<br>            <span class="hljs-string">&quot;distanceDisplayCondition&quot;</span>: <span class="hljs-literal">true</span>, 【是否根据距离来显示标签】<br>            <span class="hljs-string">&quot;distanceDisplayCondition_far&quot;</span>: <span class="hljs-number">2743804</span>,  【最远显示阈值】<br>            <span class="hljs-string">&quot;distanceDisplayCondition_near&quot;</span>: <span class="hljs-number">0</span>        【最近显示阈值】<br>            &#125;<br></code></pre></td></tr></table></figure><h3 id="“popup”"><a href="#“popup”" class="headerlink" title="“popup”"></a><strong>“popup”</strong></h3><p>popup的作用是鼠标点击矢量对象后，在它的上面显示一个小框去展示更多的内容。关于这个popup标签，上面的案例是只展示一个字段的情况，而实际上还可以有其他的扩展方式，例如表格，直接展示数据的属性表。</p><p>在显示的时候，会根据矢量里的字段名（field）去链接预设的表格里的字段名（name），只显示可以匹配上的字段。</p><p>另外不知道是否支持用地面积的计算，最好还是算好以后再直接显示数值。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-string">&quot;popup&quot;</span>: [<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;项目名称&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;项目名称&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;建设性质&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;建设性质&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;设施级别&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;设施级别&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;所属区县&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;所属区县&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;建筑内容及&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;建筑内容&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;新增用地（&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;新增用地&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;开工&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;开工&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;总投资（万&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;总投资&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;资金来源&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;资金来源&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;初步选址&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;初步选址&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;设施类型&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;设施类型&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;设施等级&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;设施等级&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;所在区县&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;所在区县&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;具体位置&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;具体位置&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;建设内容（&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;建设内容&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;用地面积（&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;用地面积&quot;</span>, <span class="hljs-string">&quot;format&quot;</span>: <span class="hljs-string">&quot;mars3d.MeasureUtil.formatArea&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;设施规模（&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;设施规模&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;举办者类型&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;举办者类型&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;开工时间&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;开工时间&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;总投资额（&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;总投资额&quot;</span>, <span class="hljs-string">&quot;unit&quot;</span>: <span class="hljs-string">&quot;亿元&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;项目推进主&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;项目推进主体&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;项目进度&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;项目进度&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;项目来源&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;项目来源&quot;</span> &#125;,<br>    &#123; <span class="hljs-string">&quot;field&quot;</span>: <span class="hljs-string">&quot;备注&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;备注&quot;</span> &#125;<br>    ],<br></code></pre></td></tr></table></figure><p><img src="/2023/07/24/%E5%9F%BA%E4%BA%8ECesium%E7%9A%84Mars3D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/popup%E6%A0%87%E7%AD%BE%E7%A4%BA%E4%BE%8B1.jpg" alt="标签示例"></p><h3 id="2-“KML”格式"><a href="#2-“KML”格式" class="headerlink" title="2. “KML”格式"></a>2. “KML”格式</h3><p>KML格式相较于geojson就简单得多，它只能是线的形式，用shp转成kml的时候，shp也必须是线要素。而KML的渲染在示例里只用了两样参数：颜色和宽度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;<br>    &quot;pid&quot;: <span class="hljs-number">3050</span>,<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;kml&quot;</span>,<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;陵水行政村&quot;</span>,<br>    <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://localhost:801/mapdata/kml/lingshuixianxingzhengcun.kml&quot;</span>,<br>    <span class="hljs-string">&quot;symbol&quot;</span>: &#123; &quot;styleOptions&quot;: &#123; &quot;<span class="hljs-attribute">color</span>&quot;: <span class="hljs-string">&quot;#00FF00&quot;</span>, <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">2</span> &#125; &#125;  【symbol只有这一小段】<br>    &#125;,<br></code></pre></td></tr></table></figure><h3 id="3-“3Dtiles”格式"><a href="#3-“3Dtiles”格式" class="headerlink" title="3. “3Dtiles”格式"></a>3. “3Dtiles”格式</h3><ul><li>三维的数据的问题是由其他格式向3Dtiles格式的转换问题，10G以内可以用OSGBlab转换，10G以上会有水印，需要用其他软件，或者购买专业版。</li><li>并且，需要注意模型的坐标，有些模型使用的是CGCS的投影坐标系，和geojson一样需要转换成WGS84坐标下，使用经纬度+高程进行坐标定位。好的软件会读取xml中的SRS信息自动转换，条件有限的话只能手动输入经纬度和高程了。</li><li>另外，需要测试服务器的负载能力，看看加载速度会不会太久，实在不行只能对模型进行优化处理，需要大幅压缩模型的节点数量，以保证服务器不被卡死。</li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">&#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">203013</span>,<br>        <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">2030</span>,<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;3dtiles&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;村庄&quot;</span>,<br>        <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;//Kwindygtx/h/mapdata/3dtiles/村庄模型157/Data.scene.json&quot;</span>,<br>        <span class="hljs-string">&quot;maximumScreenSpaceError&quot;</span>: <span class="hljs-number">2</span>,<br>        <span class="hljs-string">&quot;maximumMemoryUsage&quot;</span>: <span class="hljs-number">2048</span>,<br>        <span class="hljs-string">&quot;dynamicScreenSpaceError&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&quot;cullWithChildrenBounds&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;skipLevelOfDetail&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&quot;preferLeaves&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&quot;position&quot;</span>: &#123; <span class="hljs-string">&quot;alt&quot;</span>: <span class="hljs-number">54.41342228</span> &#125;, 【高程】<br>        <span class="hljs-string">&quot;center&quot;</span>: &#123; <span class="hljs-string">&quot;lat&quot;</span>: <span class="hljs-number">18.63970149</span>, <span class="hljs-string">&quot;lng&quot;</span>: <span class="hljs-number">109.9013823</span>, <span class="hljs-string">&quot;alt&quot;</span>: <span class="hljs-number">200</span>, <span class="hljs-string">&quot;heading&quot;</span>: <span class="hljs-number">3.1</span>, <span class="hljs-string">&quot;pitch&quot;</span>: <span class="hljs-number">-22.9</span>, <span class="hljs-string">&quot;roll&quot;</span>: <span class="hljs-number">0</span> &#125;【摄像头位置】<br>    &#125;,<br></code></pre></td></tr></table></figure><p><img src="/2023/07/24/%E5%9F%BA%E4%BA%8ECesium%E7%9A%84Mars3D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/3Dtiles%E6%A0%BC%E5%BC%8F%E5%80%BE%E6%96%9C%E6%A8%A1%E5%9E%8B%E6%A0%B7%E4%BE%8B.png" alt="模型加载示例"></p><h3 id="4-影像数据"><a href="#4-影像数据" class="headerlink" title="4. 影像数据"></a>4. 影像数据</h3><p><del>目前比较靠谱的影像数据加载方式主要是依赖地图服务的形式，使用服务器发布影像数据服务，通过URL进行调取。</del><br>经过测试，可以使用cesiumlab或者其他软件，把影像切成类似谷歌的xyz格式影像切片，然后就可以通过代码实现本地加载了。<br>其他的方式还有待发掘。</p><p>切片的时候要选对正确的坐标系，坐标系标签要和影像真正的坐标系一致。另外，需要设置切片文件类型为散列。切片会相当花时间，需要提前准备。</p><p>加载方式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">401030</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;pid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4010</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;海南省文昌市正摄影像2020&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;icon&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;img/basemaps/tdt_img.png&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xyz&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://localhost:801/mapdata/maptile/wenchangdom/&#123;z&#125;/&#123;x&#125;/&#123;y&#125;.png&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;minimumLevel&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;maximumLevel&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;position&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;alt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;center&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;lat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">19.667064</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;lng&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">110.799869</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;alt&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">147580</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;heading&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;pitch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">-85</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;roll&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">359.8</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;show&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">false</span></span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><p><img src="/2023/07/24/%E5%9F%BA%E4%BA%8ECesium%E7%9A%84Mars3D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/xyz%E6%A0%BC%E5%BC%8F%E5%BD%B1%E5%83%8F%E5%88%87%E7%89%87%E6%A0%B7%E4%BE%8B.png" alt="影像加载示例"></p><h2 id="四、基础指令"><a href="#四、基础指令" class="headerlink" title="四、基础指令"></a><font color=RoyalBlue>四、基础指令</font></h2><ol><li><p>启动</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> nginx<br></code></pre></td></tr></table></figure><p>或运行nginx.exe</p></li><li><p>重新加载：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">nginx.exe -s <span class="hljs-keyword">reload</span> <br></code></pre></td></tr></table></figure></li><li><p>关闭nginx</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">nginx.<span class="hljs-keyword">exe</span> -s <span class="hljs-keyword">stop</span>  \\快速停止nginx<br>nginx.<span class="hljs-keyword">exe</span> -s <span class="hljs-keyword">quit</span>  \\完整有序的停止nginx<br></code></pre></td></tr></table></figure></li></ol><p>更多细节内容有待补充。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cesium</tag>
      
      <tag>3Dtiles</tag>
      
      <tag>地理信息</tag>
      
      <tag>Mars3D</tag>
      
      <tag>Nginx</tag>
      
      <tag>json</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ZOD论坛的hosts登录方法</title>
    <link href="/2023/06/26/ZOD%E8%AE%BA%E5%9D%9B%E7%9A%84hosts%E7%99%BB%E5%BD%95%E6%96%B9%E6%B3%95/"/>
    <url>/2023/06/26/ZOD%E8%AE%BA%E5%9D%9B%E7%9A%84hosts%E7%99%BB%E5%BD%95%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="ZODGAME登录"><a href="#ZODGAME登录" class="headerlink" title="ZODGAME登录"></a>ZODGAME登录</h1><p>登录ZOD论坛的主要方式就是通过修改hosts登录，或者直接用加速器登录。</p><h2 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改hosts文件</h2><p>补充一下hosts文件的位置：<code>C:\Windows\System32\drivers\etc</code></p><p>在hosts文件的末尾加上</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">172.67.72.116</span> zodgame.xyz<br><span class="hljs-number">172.67.72.116</span> www.zodgame.xyz<br></code></pre></td></tr></table></figure><h2 id="其他的备用站点"><a href="#其他的备用站点" class="headerlink" title="其他的备用站点"></a>其他的备用站点</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">104.26.14.233</span> http://www.zodgame.xyz<br><span class="hljs-number">104.26.14.223</span> zodgame.xyz<br><span class="hljs-number">104.26.15.233</span> http://www.zodgame.xyz<br><span class="hljs-number">104.26.15.223</span> zodgame.xyz<br></code></pre></td></tr></table></figure><p>如果不需要的话可以在前面加<code>#</code>井字符号，这样就能把本行后面的内容注释掉了。</p><h2 id="其他登录方式"><a href="#其他登录方式" class="headerlink" title="其他登录方式"></a>其他登录方式</h2><p>花钱找个加速器，应该也是可以上的。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ZOD</tag>
      
      <tag>论坛</tag>
      
      <tag>hosts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AdobeAcrobat闪退处理办法</title>
    <link href="/2023/04/12/AdobeAcrobat%E9%97%AA%E9%80%80%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/"/>
    <url>/2023/04/12/AdobeAcrobat%E9%97%AA%E9%80%80%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="关于adobe-acrobat闪退的问题"><a href="#关于adobe-acrobat闪退的问题" class="headerlink" title="关于adobe acrobat闪退的问题"></a>关于adobe acrobat闪退的问题</h2><p>在使用adobe acrobat的时候，经常刚打开一会就闪退，应该不是软件本身的问题，查了一下可能是许可的问题，在线许可检查没通过就强制关闭程序。</p><ol><li><p>在C盘里找到hosts文件<br><code>C:\Windows\System32\drivers\etc</code></p></li><li><p>在hosts文件里的末尾添加<br><code>127.0.0.1 acroipm.adobe.com</code></p></li></ol><p>若遇到无法修改的情况，先右键hosts，在属性框的安全选项卡里，给当前用户添加一个修改权限，就可以修改了。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Adobe</tag>
      
      <tag>Acrobat</tag>
      
      <tag>闪退</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArcGIS进行图斑排序的方法</title>
    <link href="/2023/04/12/ArcGIS%E8%BF%9B%E8%A1%8C%E5%9B%BE%E6%96%91%E6%8E%92%E5%BA%8F%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2023/04/12/ArcGIS%E8%BF%9B%E8%A1%8C%E5%9B%BE%E6%96%91%E6%8E%92%E5%BA%8F%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="ArcGIS进行图斑排序的方法"><a href="#ArcGIS进行图斑排序的方法" class="headerlink" title="ArcGIS进行图斑排序的方法"></a>ArcGIS进行图斑排序的方法</h2><p>在实际项目中，需要我们按照自上而下，从左往右的顺序为图斑编号，并且多数时候序号位数是确定的</p><h2 id="具体操作步骤"><a href="#具体操作步骤" class="headerlink" title="具体操作步骤"></a>具体操作步骤</h2><ol><li>计算Xmin与Ymax</li></ol><p>计算Xmin与Ymax。利用坐标进行排序，首先要算出坐标值。需要说明的是这里没有直接利用质心坐标而采用Xmin、Ymax进行排序，是因为质心坐标会遇到一种情况，就是当这个图斑很长或者很宽时，本应排在前面的序号，而因为质心靠后不得不被排到后面的序号中，所以为避免这种情况而采用Xmin与Ymax来进行排序。分别新建字段Xmin与Ymax，在字段计算器中输入python语句</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!shape.extent.Xmin!<br></code></pre></td></tr></table></figure><p>和</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!shape.extent.Ymax!<br></code></pre></td></tr></table></figure><p>分别计算出Xmin与Ymax的值</p><ol start="2"><li>排序</li></ol><p>利用sort（Data management）排序工具对Xmin和Ymax排序。Ymax在前为降序，Xmin在后为升序。</p><ol start="3"><li>图斑编号。</li></ol><p>新建一个字段BH，在字段计算器中利用python语句进行自动编号。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">rec</span>=0<br>def autoIncrement():<br>global rec<br><span class="hljs-attribute">pStart</span>=1#初始值<br><span class="hljs-attribute">pInterval</span>=1#间隔值<br><span class="hljs-keyword">if</span>(<span class="hljs-attribute">rec</span>==0):<br><span class="hljs-attribute">rec</span>=pStart<br><span class="hljs-keyword">else</span>:<br><span class="hljs-attribute">rec</span>=rec+pInterval<br>return rec<br></code></pre></td></tr></table></figure><p>以下是赋值栏填写</p><ul><li>（1）实现常规编号(1、2、3……)：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">autoIncrement</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure></li><li>（2）实现给定长度编号，例如长度为4，在前面补零：<figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl">(<span class="hljs-function"><span class="hljs-title">str</span>(<span class="hljs-title">autoIncrement</span>())).zfill(<span class="hljs-number">4</span>)</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>地理信息</tag>
      
      <tag>排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于影像镶嵌的方法与注意事项</title>
    <link href="/2023/02/22/%E5%85%B3%E4%BA%8E%E5%BD%B1%E5%83%8F%E9%95%B6%E5%B5%8C%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%8E%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <url>/2023/02/22/%E5%85%B3%E4%BA%8E%E5%BD%B1%E5%83%8F%E9%95%B6%E5%B5%8C%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%8E%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="关于影像镶嵌的方法与注意事项"><a href="#关于影像镶嵌的方法与注意事项" class="headerlink" title="关于影像镶嵌的方法与注意事项"></a>关于影像镶嵌的方法与注意事项</h1><p>在处理栅格数据成果时，经常遇到需要将几个部分的栅格拼接在一起形成一整块成果的情况。</p><h2 id="可以使用的工具："><a href="#可以使用的工具：" class="headerlink" title="可以使用的工具："></a><font color=LightSlateBlue>可以使用的工具：</font></h2><ul><li>Arcgis</li><li>FME</li><li>QGIS </li><li>ERDAS IMAGINE</li><li>ENVI</li></ul><h2 id="其他工具："><a href="#其他工具：" class="headerlink" title="其他工具："></a><font color=LightSlateBlue>其他工具：</font></h2><ul><li>Arcgis Pro （要钱）</li><li>GDAL （过于硬核）<br><font color=LightSlateBlue></font><h2 id="个人观点"><a href="#个人观点" class="headerlink" title="个人观点"></a><font color=LightSlateBlue>个人观点</font></h2>我个人主要用的是Arcgis（10.x版本）和FME（很厉害但比较难上手），一个是日常工作的常用工具，一个是压箱底的手段。QGIS浅浅尝试了一下，貌似只能做单波段的栅格合成，也可能是因为我愚钝没整明白。ERDAS做栅格拼接时的接缝处理，包括接缝线绘制和周围羽化非常方便，自己没试过（Arcgis也有类似功能，叫构建接缝线，但我还没用过）。ENVI我也用的极少，基本就上学时用过。<br>FME的主要问题是它的许可破解程序和Arcgis有冲突，打开一个就不能用另一个，频繁的切换非常麻烦，或者干脆奢侈一点一台电脑用一种软件。所以有机会还是要多尝试后面两款软件。</li></ul><h2 id="栅格拼接的基本步骤："><a href="#栅格拼接的基本步骤：" class="headerlink" title="栅格拼接的基本步骤："></a><font color=LightSlateBlue>栅格拼接的基本步骤：</font></h2><ol><li><p>拼接前确认栅格影像的切片能够衔接的上，观察拼接处的道路、房屋之类的地方有没有断裂开。一般而言衔接处的重叠区域有控制点的话，一般是不会有问题的，但也要小心有控制点误差大的情况。如果有问题那就要回到栅格处理上，要么重新生成，要么地理配准。</p></li><li><p>确认用来合并的栅格有没有问题，包括影像有没有扭曲，有问题要回到上一步去，换个软件重新生成或者用栅格修复打补丁。这些都是合并前数据源的准备工作，避免合完之后才发现问题，浪费时间，合一次要老久了，还占空间。</p></li><li><p>保证需要合并的栅格属性一致，包括像元大小（根据项目需求而定），NoData值，波段数（一般为RGB），像素深度（一般为8bit），压缩类型等。如果有不一致的地方可以处理一下。或许软件有自动处理的功能，但重采样肯定也要花费大量的时间。这一步非常关键，关系到合并时会不会报错。</p></li><li><p>合并时进行接缝处理，包括接缝线可以画在不显眼的地方，接缝线周围进行羽化处理等，这些是非必须的加分项，时间充足时最好做一下，有效提升成果质量。</p></li><li><p> 如果是处理大工程，合并时选择一下压缩类型，例如LZW，不然合出来的影像可能比原始文件大几倍。另外，确保电脑硬盘空间充足，包括缓存路径和存储路径。</p></li><li><p>合并出来的影像要重新生成金字塔，方便查看。</p></li></ol><h2 id="踩过的坑："><a href="#踩过的坑：" class="headerlink" title="踩过的坑："></a><font color=LightSlateBlue>踩过的坑：</font></h2><ol><li><p>一般影像用的都是RGB模型，但也有的时候莫名其妙多一个RGBA，这个Alpha就是透明度。若要去掉一个波段，比较简单的办法就是用Arcgis的影像导出功能，用渲染器强制渲染为RGB颜色。如果这个时候有像元大小和Nodata不一致，也可以顺便处理了，节省时间。</p></li><li><p>坐标系要一样是常识，但是坐标系的写法不一样也会导致FME报错，比如pix4d导出的数据和Arcgis的坐标系数值一样但名称上有差别，可以用定义投影的方式修改。</p></li><li><p>FME在处理时，在写入数据时要勾选BIGtiff属性为是，不然处理不了大型的数据。</p></li><li><p>FME的破解是个大麻烦，许可程序和Arcgis有冲突，并且用的Imtools许可控制程序，优先级还比ArcGIS的License Server Administrator优先级更高。折腾完之后Arcgis也得用Imtools启动许可了。</p></li><li><p>tif和GeoTiff的区别，前者就是个图片，需要外置的坐标文件才能用；后者内置了地理坐标，一个文件就能用。</p></li><li><p>电脑缓存空间和存储空间不足时，合并程序会数据溢出强制终止，所以合并前务必检查缓存路径和存储路径。尤其是缓存路径，经常默认为C盘的。</p></li></ol><p>后面有时间再补充几种软件的具体操作，包括合并时会用到的常用工具、功能。</p><p>——————–施工中———————–</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
      <tag>地理信息</tag>
      
      <tag>影像镶嵌</tag>
      
      <tag>FME</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客的迁移</title>
    <link href="/2023/02/10/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%81%E7%A7%BB/"/>
    <url>/2023/02/10/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%81%E7%A7%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客的迁移"><a href="#Hexo博客的迁移" class="headerlink" title="Hexo博客的迁移"></a>Hexo博客的迁移</h1><p>因为各种各样的原因，比如换电脑了，或者因为设备的玄学问题不得不迁移一下环境（我的笔记本连不上github，每次上传同步都报错，头都大了，家里的台式却能轻松链接）。</p><p>总之迁移Hexo环境也是一件非常重要的事情，因为我之前的迁移都是通过看自己以前写的博客创建文档，以及自己的一些写进DNA的经验，所以时间久了难免有些遗忘和不靠谱。特此记录一下迁移的步骤，以便以后查看。</p><h2 id="1-安装Node-js、git和npm"><a href="#1-安装Node-js、git和npm" class="headerlink" title="1. 安装Node.js、git和npm"></a>1. 安装Node.js、git和npm</h2><p>【<strong>这一条是给新电脑用的，如果已经有了就跳过。</strong>】具体步骤也不再赘述，关于系统环境参数的配置也有一大堆教程和说明了。</p><h2 id="2-运行Hexo的一键部署命令"><a href="#2-运行Hexo的一键部署命令" class="headerlink" title="2. 运行Hexo的一键部署命令"></a>2. 运行Hexo的一键部署命令</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></td></tr></table></figure><h2 id="3-安装依赖库"><a href="#3-安装依赖库" class="headerlink" title="3. 安装依赖库"></a>3. 安装依赖库</h2><p>在命令指令行<strong>进入博客目录下</strong>安装相关的配置</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>如果有报错的话，就配置一下淘宝源，用cnpm。</p><h2 id="4-安装一键上传的插件：hexo-deployer-git"><a href="#4-安装一键上传的插件：hexo-deployer-git" class="headerlink" title="4. 安装一键上传的插件：hexo-deployer-git"></a>4. 安装一键上传的插件：hexo-deployer-git</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>这也就是我们熟悉的hexo g 、hexo d命令的插件。</p><p>如果因为404原因安装失败的话，就使用<strong>cnpm+淘宝源</strong>，大概率成功。<br>用npm安装cnpm，再使用cnpm安装hexo插件</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">npm install -g cnpm <span class="hljs-params">--registry=https</span>:<span class="hljs-string">//registry.npm.taobao.org</span><br>cnpm install hexo-deployer-git <span class="hljs-params">--save</span><br></code></pre></td></tr></table></figure><h2 id="5-账户信息设置"><a href="#5-账户信息设置" class="headerlink" title="5. 账户信息设置"></a>5. 账户信息设置</h2><p>因为是新的电脑第一次使用git仓库，可能需要填一下相关信息。（还是在指令框中）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;在这填你的github邮箱&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;填你的用户名&quot;</span> <br></code></pre></td></tr></table></figure><p>这个如果没输入的话，运行上传时也会提示你who are you的。</p><h2 id="6-检查是否能上传"><a href="#6-检查是否能上传" class="headerlink" title="6. 检查是否能上传"></a>6. 检查是否能上传</h2><p>其实到上一步配置就基本已经完成了，可以直接执行上传指令。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>如果配置文件不对的话，也是会出现<code>spawn failed 128</code>错误的。（我最近真是被这个问题锤得头疼）。而检测是不是配置导致的无法上传，方法就是看能不能直接打开<a href="https://github.com/">github.com</a>。能打开基本就是配置问题。</p><p>检查<code>_config.yml</code>文件</p><ol><li><p>url是博客的访问地址，要设置对。例如我的是：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">url: http:<span class="hljs-regexp">//</span>kw1649190133.github.io<br></code></pre></td></tr></table></figure></li><li><p>还有一项就是推送更新的设置，一般在配置文件的最后，现在可以不用ssh了，用token很方便，但是要注意保存好令牌代码。token的使用方法就是放在http访问链接里，github的前面，然后再加上一个<code>@</code>符号</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//【这里放token，然后删掉括号】@github.com/kw1649190133/kw1649190133.github.io</span><br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>搬一次家挺麻烦的，可以的话还是少搬比较好。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>迁移</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo的复活和升级计划</title>
    <link href="/2023/02/10/Hexo%E7%9A%84%E5%A4%8D%E6%B4%BB%E5%92%8C%E5%8D%87%E7%BA%A7%E8%AE%A1%E5%88%92/"/>
    <url>/2023/02/10/Hexo%E7%9A%84%E5%A4%8D%E6%B4%BB%E5%92%8C%E5%8D%87%E7%BA%A7%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo的复活和升级计划"><a href="#Hexo的复活和升级计划" class="headerlink" title="Hexo的复活和升级计划"></a>Hexo的复活和升级计划</h1><p><em>为了能够愉快的继续使用Hexo，之前积累的一些问题也必须得解决了，所谓“工欲善其事必先利其器”，不把这博客弄好我都不能专心去搞神经网络。</em></p><p>之前的问题归纳下来就三个:</p><ol><li><p>之前刚搞博客喜欢研究新鲜玩意，整了个2Dlive,搞得文件夹变成了几百MB，这次必须另起炉灶，把原来的modle都抛弃掉。</p></li><li><p>之前的页面会一直卡加载，研究了一下发现是没有合理的优化，一进去主页就会直接加载全部文章，百度一下之后，发现可以通过换主题解决，之前的主题只能说太简陋了。</p></li><li><p>最后一点也是最重要的一点，github时常连不上的问题，经常导致上传失败，现在只能暂时存在本地，还是得尝试一下其他平台的部署。</p></li><li><p>然后是支线任务，想办法做一下一键预览、一键打包和一键同步，以及快速创建文章，。我的水平也许做不出Gridea这种集成式程序，但优化一下基本体验应该还是做得到的，体验这一块不能输。或者找一下别人有没有现成的。</p></li></ol><p>之前一直使用ayer主题，虽然好看是好看，但是它完全没有优化，主页会直接加载全部的文章，东西一多直接爆卡，除非写文章的时候全部手动设置截断或者隐藏，但那也太麻烦了，于是我决定找一个简约而又好看，优化还得好的主题。</p><h2 id="fluid主题"><a href="#fluid主题" class="headerlink" title="fluid主题"></a>fluid主题</h2><p>挑挑拣拣半天，终于找到了一个合心意的主题，这简约的界面和流畅的优化，舒服了。还有这个右上角的一键切换夜间模式，也非常好用。我决定就它了。其实还有一些主题我也挺喜欢的，但是要么就是广告味太浓，要么就是特效太多，速度不够快。经过了以前2Dlive的折磨，我再也不敢在博客里塞大件的东西了，还是简单实用最好。</p><p>主题的主页在此，上面有详细的使用手册，后面有时间了我再去研究研究怎么调整和优化。</p><p><a href="https://fluid-dev.github.io/hexo-fluid-docs/">点击跳转fluid</a></p><p><img src="/2023/02/10/Hexo%E7%9A%84%E5%A4%8D%E6%B4%BB%E5%92%8C%E5%8D%87%E7%BA%A7%E8%AE%A1%E5%88%92/fulid%E4%B8%BB%E9%A2%98.png" alt="fulid主题"></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
      <tag>fluid主题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gridea博客创建和部署</title>
    <link href="/2023/02/09/Gridea%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%92%8C%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/02/09/Gridea%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%92%8C%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="Gridea博客的创建和部署"><a href="#Gridea博客的创建和部署" class="headerlink" title="Gridea博客的创建和部署"></a>Gridea博客的创建和部署</h1><h2 id="想要使用Gridea的原因"><a href="#想要使用Gridea的原因" class="headerlink" title="想要使用Gridea的原因"></a>想要使用Gridea的原因</h2><p>原来用hexo的时候，刚开始还觉得很新鲜，要挂个指令行去输代码来更新页面非常酷，但用了一段时间就累了，实在是太麻烦了，大大降低了写文档的欲望。并且hexo+giehub最大的问题不是它自己，而是github，在国内连不上才是常态，开加速又会遇到各种问题，更新文档都有意外发生，头疼死了。而且自己之前作死往里头塞了2Dlive，搞得页面有点卡，加载非常慢。综上所述正在头疼的我正好看到了一个介绍Gridea的视频，那个简洁漂亮的界面和一键同步的便捷，瞬间击穿了我的防线，决定迁移博客。</p><h2 id="关于Hexo在Github-page上更新的问题"><a href="#关于Hexo在Github-page上更新的问题" class="headerlink" title="关于Hexo在Github page上更新的问题"></a>关于Hexo在Github page上更新的问题</h2><p><strong>unable to verify the first certificate</strong><br>这是使用steam++（现在更名为瓦特工具箱）加速器加速了github后出现的问题。<br>message: “unable to verify the first certificate”, success: false</p><p><strong>网络链接不上的问题</strong><br>关掉加速器后，又出现了新的问题<br><code>报错：connect ETIMEDOUT 192.30.253.113:443</code></p><p>用检测工具一测就看到国内没有一个地方能访问的<br>ping检测工具:<br><a href="http://ping.chinaz.com/github.com">http://ping.chinaz.com/github.com</a><br><code>报错：message: &quot;connect ETIMEDOUT 192.30.253.113:443&quot;, success: false</code></p><p>虽然可以通过一些其他的方式访问，比如翻个墙，设置一下代理。但显然麻烦程度指数上升，背离了简单高效的初衷。<br>所以最好的解决办法就是当前大环境不允许的情况下，不用github pages。</p><h2 id="寻找GIthub-page的替代品"><a href="#寻找GIthub-page的替代品" class="headerlink" title="寻找GIthub page的替代品"></a>寻找GIthub page的替代品</h2><p>目前比较好的就是<strong>Netlify</strong>和<strong>gitee</strong>这两个选择。<br>Netlify好像是个专门托管网站代码的平台，它的好处就是不需要复杂的认证，就可以白嫖网站建设的资源，用来做个人的博客已经绰绰有余。<br>Gitee是国内为了不被卡脖子仿造Github打造的代码托管平台，在GitHub被墙的情况下，用Gitee也是不错的选择，只是它受到官方的严格管辖，不仅代码的发布者要统一平台的协议，不能传敏感内容，否则要承担责任，要想使用它的gitee page功能还必须实名制。</p><p>我折腾了半天Netlify，还是没整明白，暂时放弃了，先申请gitee的实名吧。以防万一，看来hexo+GitHub还不能丢，偶尔还是得更新一下，留个备份。</p><p>ps:gitee的实名制申请巨久，过了一整天还没好。</p><h2 id="Hexo文章迁移到Gridea"><a href="#Hexo文章迁移到Gridea" class="headerlink" title="Hexo文章迁移到Gridea"></a>Hexo文章迁移到Gridea</h2><p><strong>从Hexo导入文章到Gridea，需要将头部词条中的分类(Categories)删掉，因为Gridea中只有标签(Tag)</strong><br>不删掉的话会导致Gridea打不开。感谢前人的经验。<br>另外，Gridea也是支持中文文件名的，但是从软件里面新建文章的时候，标题总是会自动变成汉语拼音，以后标题可能还得单独去编辑一下，或者干脆在Vscode里写好了再搬运过来，毕竟用这个软件主要还是图它界面好看和同步方便，一点小小的问题无伤大雅。</p><p><strong>Gridea的图片导入无法使用相对路径</strong><br>当我把装了图片的文件夹也拖入post文件夹时，就出大问题了，Gridea界面又打不开了，进去就是空白，把文件夹路径删掉又好了。看来是读取文件路径的问题，它只能从固定的post-images路径里读图片。而当我使用图片插入功能将图片转换成链接时，它又只能是绝对路径，直接指到了我的博客路径里的post-images文件夹，并且自动生成了一张重命名为随即数字编码的图片，这下不光是好不好看的问题，而是能不能用的问题了，就算能用，兼容性也不行，我想搬到别的地方去这图片就全寄了。百度了一下也没找到合适的解决办法，好像大神们都是直接用的网图链接，反正我是受不了。</p><p>现在界面是打开了，同步也没有问题，但是图片链接的兼容寄了，这就是鱼和熊掌不可得兼吗。</p><h2 id="世上无难事，只要肯放弃"><a href="#世上无难事，只要肯放弃" class="headerlink" title="世上无难事，只要肯放弃"></a>世上无难事，只要肯放弃</h2><p>到这一步我真的快崩溃了，这些个无良自媒体摁夸Gridea界面好看写作方便一键预览一键同步，那是只字不提排版与兼容的问题啊（TAT ），网上能找到的教程屈指可数，几乎找不到足够全面的内容。Markdown原生的相对路径都不支持，这™整的我浑身难受，想简简单单传个图片还得挂网图，真就只适合纯文字呗。我经常需要做一些步骤和教程的文档，图片还是非常重要的，我做不到割舍图片功能。<br>对不起Hexo刚才是我说话太大声了，我这就把Github Page布回去，以后有空了再做个python程序来实现一键更新和一键同步，还有头文件生成之类的东西。也尝试一下把网站放到gitee page或者netlify上，这样至少不会因为网络链接的问题无法实现同步。<br>再次感谢程序羊Codesheep的hexo保姆级教程，帮我实现了自己的第一个博客。这次尝试虽然有些失败，但也算一次有趣的探索，让我认识到了自己的能力的不足。失败是成功之母，下次继续加油。接下来该抓紧时间研究YOLO神经网络了。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>Gridea</tag>
      
      <tag>失败经历</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于2023年的年初展望</title>
    <link href="/2023/01/07/%E5%85%B3%E4%BA%8E2023%E5%B9%B4%E7%9A%84%E5%B9%B4%E5%88%9D%E5%B1%95%E6%9C%9B/"/>
    <url>/2023/01/07/%E5%85%B3%E4%BA%8E2023%E5%B9%B4%E7%9A%84%E5%B9%B4%E5%88%9D%E5%B1%95%E6%9C%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="所以这是一篇展望2023年的文章"><a href="#所以这是一篇展望2023年的文章" class="headerlink" title="所以这是一篇展望2023年的文章"></a>所以这是一篇展望2023年的文章</h1><p><del>展望个屁，都寄成这样了，好好活着吧。</del></p><h2 id="这是一个开头"><a href="#这是一个开头" class="headerlink" title="这是一个开头"></a><font color=RoyalBlue>这是一个开头</font></h2><p>现在是2023年1月7日，一个不加班的星期六。我平常就有写日记的习惯，最近刚好又有许多的想法，于是就写下了这一篇文章，仅代表一个井底之蛙的愚见。</p><p>疫情从2020年初开始爆发，刚好横贯了我毕业后的两年半，到2020年的11月底《新十条》颁布，彻底放开了对疫情的管控，正式进入了全民感染的时代。</p><p>在这三年的时间里，发生了太多的变化，也让我看清了许多东西。曾以为上完大学后不说一飞冲天，至少也应该积极向上，对未来充满希望，过上事业有成、娶妻生子的平凡人生。然而现实是我从大二大三开始就逐渐意识到了，这上面的平凡人生离我有多么遥远。客观的说，我觉得我还算幸运的，毕业回家后找到了月薪三四千的工作，吃在家住在家，暂时衣食无忧，甚至还能存下来点钱，小城市的小日子也就不过如此。但是若要谈未来的期望，那就不好说了，说不定自己今年就得失业呢，更别提谈恋爱、结婚、生小孩这种烧钱的事情了，想都不敢想，自己好好活着就是极限了。</p><h2 id="说个笑话：言论自由"><a href="#说个笑话：言论自由" class="headerlink" title="说个笑话：言论自由"></a><font color=RoyalBlue>说个笑话：言论自由</font></h2><p>昨晚还看到一个只有200粉丝的小up主的视频，说的是《当今的中国，还能够相信吗》，这标题一看就起的相当大胆，但实际上内容还是鼓励大家相信政府、相信国家的。视频盘点了从2008年出现的“三聚氰胺奶粉”事件开始，到2011年，洛阳电视台调查地沟油的记者在路上被捅十一刀身亡等等，中国的食品行业曾经发生过的严重信任危机。而2020年，疫情刚刚爆发的时候，政府采取的强力管控措施显然让信用瞬间回满，大家都在依赖着政府组织的免费核酸检测和严格的健康码制度带来的安全保障。按理说这应该是挽回信用，彰显能力的大好机会。结果后面大家也知道，疫情顶不住了，财政也见底了，最后被迫突然全面放开，大家照常顶着病毒搞经济。这中间更别提还有河南给取钱的储户赋红码，垃圾车偷偷倒卖封控区食品物资，以及大规模核酸检测造假等等事情。</p><p>而最为精彩的部分不是视频本身，而是视频下面的评论，几乎所有的评论都表示了不相信，大家都来看热闹，看评论有没有没被社会毒打过的99新小宝宝，还有的说：“你这视频能活到明天，我就信”。第二天早晨一看，视频果然没了，好像是凌晨三点半被噶掉的。看来，大家都对现在的环境，都是心知肚明的。我当然也是第一时间前来围观，再发个狗头小小嘲笑一下，但没想到up主回了我的评论，他还在试着相信，再重新尝试投稿，所以我也从如何绕开审查顺利发视频的角度认真的给了一些建议。虽然我已经累了不想再参与这种话题，但看到还在努力的人我也不会吝啬鼓励的话语。</p><p>关于信任危机的问题，马督工也谈过，就着三年的疫情管控突然放开的话题，说放开只不过是基于现实情况的无奈之举，因为无论是感染人数还是财政状况都压不住了，最严重的地方实质上已经被动的放开了，中央只不过是被迫承认了放开的合法性。而这三年的时间里，我们本可以做更多的事情，做更多的准备，以应对不得不放开的这一天到来，但是并没有，政府也只不过是被现实推着走罢了，甚至把质疑推到了“执政党是否还代表着先进生产力”这个份上，连我这个已经比较麻木的人都被这句话震撼到了。结果当然不出意料，视频没活过第二天被直接噶掉。这视频看到的就很震惊了，这居然都能发出来，审核怕不是在睡觉。真正的媒体战士就是什么都敢说，不像现在的报社电视台，早就被上级拿捏的死死的，调查记者都养不起了。</p><blockquote><p>如果批评不自由，则赞美无意义。</p></blockquote><p>现在别说批评了，连质疑都很困难。许多话题发都发不出来，一碰就封，硬发那就有人要来查水表了，甚至像大猛子一样被喊去北京谈话。除非发到不会翻墙的人看不到的外网去。</p><p>信用的下降从黑心企业开始，到监管部门，到政府单位，逐渐蔓延到执政党。破坏容易，想要修复，太难了。许多人对掌权者不信任、对司法体制不信任，到现在暂时还能信的只有人民币了。通货膨胀虽然严重，但还远没到吃不起饭的时候。</p><h2 id="关于房地产"><a href="#关于房地产" class="headerlink" title="关于房地产"></a><font color=RoyalBlue>关于房地产</font></h2><p><del>这还有啥好说的，寄中寄，毁灭吧赶紧的</del></p><p>买不起就对了，这套收割制度从设计时就没打算让所有人都买得起。很抱歉我是买不起的那个。</p><p>一套房子一万一平的价格里，成本也就2000，最多不超过4000，而大量的溢价，进了开发商的口袋，成了公务员的福利，养了一堆“炒房客”，造就了一批富得流油的“先富群体”。那些建造房子的建筑工人，他们的工资早就算在了成本里，这多出的利润与他们无关，但是当行业过热，供大于求，进入下行周期时，他们却要承担失业的后果。而那些赚走利益的家伙，会拿着他们的“个人财富”跑路，公司破产和他们又没有关系。</p><p>在地产不再猛涨的年代，土地财政再也玩不动,相关的城建项目应该会逐步放缓，少了土地出让金这一项大头收入，公务员的福利必然要降低，甚至铁饭碗不再铁。公务员这个稳定的行业，早就不满现状，在追求高薪追求吃红利了，而随着红利消失，没有人愿意去造饭碗，未来也必将被迫发生翻天覆地的变化。随着销量的下滑，价格的崩盘，房地产这一套击鼓传花的庞氏必然会土崩瓦解，一地鸡毛，最终回归到和实体产业一样3%的慢速稳定增长上。而那些依托房地产的产业，则更不必说，遇冷是必然的。</p><p>还有一个和地产相关的话题，是人口。2022年是见证历史的一年，中国的14亿人口，开始出现了减少，出生率低于死亡率，而且出生率排在世界倒数，比一些低生育率的发达国家还低得多。怎么评价呢，只能说计划生育对出生率的抑制效果远远不如社会高速发展的效果，计划生育是限制生几个的问题，而社会发展带来的巨大变化，直接让人绝育了。未来人口会进入长期的下降阶段，减少的快慢，取决于环境。人口都在减少了，房子还能增加？能保持现有的楼房更新就不错了。</p><p>当一个金字塔的底层逐渐减少时，自然会有上面的沙子滑落下来，成为新的底层。</p><h2 id="保持独立思考的能力"><a href="#保持独立思考的能力" class="headerlink" title="保持独立思考的能力"></a><font color=RoyalBlue>保持独立思考的能力</font></h2><p>都说“互联网没有记忆”，发生了这么多事情，是真的一点记录都有没有吗，只不过是被当前的环境管控噶掉了而已。所有的平台，无论大小，全部管控，从微博到B站，传统媒体到公众号，甚至现在聊天群也不是法外之地了，“不利于团结的话不能说”，到处都是“碰都不能碰的话题”。就像曾经历史课上历史老师说过的一句经典的话：“历史是一个任人打扮的洋娃娃”，主要宣传口的权力全部掌握在**手里，普通人哪里挡得住这种宣传攻势，看多了脑袋都被洗干净了，不知不觉就变成了一个任人利用的傀儡。而一些非官方的视频号、公众号，还有那些砖家叫兽，那就更分裂了，睁眼说瞎话的都有，为了利益和自保什么事都能干出来。</p><p>所以留下自己的记录还是相当重要的，哪怕是我这么懒的人，也不得不爬起来写点东西。作为一个独立的成年人，必须保持自己独立判断现实的能力，不然在铺天盖地的正面宣传和视频平台的各种焦虑言论下，早晚会精神分裂的。我觉得有自己建站的能力还是非常必要的，虽然麻烦了点，但起码能发的出来，这要是在其他的“公共场合”，话都说不了。学会建立自己的“合订本”，回看历史，扎根现在，望眼未来。</p><p>现代社会把人从组织中分离出来，变成了一个个原子，并不是我们要放弃相互协作，相反我们更应该抱团取暖，并且清醒的认识到：“我只是我自己”。别人给的财富和权力，别人自然也能够收回去。说人话就是保持低调，不要太飘。</p><h2 id="说一些正能量吧"><a href="#说一些正能量吧" class="headerlink" title="说一些正能量吧"></a><font color=RoyalBlue>说一些正能量吧</font></h2><p>虽然疫情扩散、高房价、人口下滑、经济衰退、贪污腐败、信任危机等等这些不好的事情正在发生，听起来好像天要塌了一样，今年就几乎没什么好消息。但实际上，离世界末日还远着呢。正因为国家正在努力摆脱贫困走向现代化，所以人们都会用高标准高要求，去批判我们现在的社会，我们关注的不再是我们有什么，而是我们还没有什么。高期望会带来前进的动力，但也会带来矛盾与焦虑。</p><p>现实中还是有人在努力实践着理想，释放着善意的。企业家陈光标还在进行着自己的慈善活动，尽管已经没有太多人关注；背景很假的新疆阿力木当上了政协委员，努力带动着当地的产业；温暖的冷风忙在助农的一线，也依然抽空去探望贫困山村的儿童和老人；苏州的Geist餐厅每周六举办营养餐活动，请外卖员免费吃饭。<del>洪工已经带着女朋友从工地跑路了，大猛子还在一个人打灰</del>。虽然例子举起来有点像议论文，但我这么写下来只是想让自己哪天快要心灰意冷的时候，能点亮一根火柴。我希望有一天，我也有幸能够参与到他们当中去，把理想的火炬传递下去。</p><p>历史总是在曲折中发展，对于普通人而言要做的很简单，那就是保持警觉，努力生存，有能力就帮一帮身边的同志，等待黎明的到来，哪怕黎明还有很久，甚至不一定会来。偶尔去公园逛逛，看一看热闹的人群，就会感觉一切还没有那么糟糕了。</p><h2 id="关于新一年的计划"><a href="#关于新一年的计划" class="headerlink" title="关于新一年的计划"></a><font color=RoyalBlue>关于新一年的计划</font></h2><p><del>买车</del> （真买了就没钱了，不如留着应对一下风险，看情况吧）</p><p>换一台新的轻薄笔记本，出差和平时工作更方便（如果买车的钱还有剩的话）</p><p>继续学习新技能，重新开始培养练习乐器的习惯。</p><p><strong>好好吃饭，好好睡觉，锻炼身体，活下去。这才是最重要的，以上其他都是非必须选项。</strong></p><p><font color=RoyalBlue><strong>所以，未来会变好吗？</strong></font></p><p><del>会的</del>   </p><p><font color=red><strong>等通知。</strong></font></p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>闲聊</tag>
      
      <tag>房地产</tag>
      
      <tag>未来期望</tag>
      
      <tag>年终总结</tag>
      
      <tag>正能量</tag>
      
      <tag>2023</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于BlanderGIS的安装和配置</title>
    <link href="/2022/11/04/%E5%85%B3%E4%BA%8EBlanderGIS%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/11/04/%E5%85%B3%E4%BA%8EBlanderGIS%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><p>安装好blander以后，不用解压BlanderGIS的压缩包，打开blander,在插件中添加压缩包的路径。打勾后重启Blander,就会出现GIS菜单。</p><h2 id="“No-ImageIO”错误"><a href="#“No-ImageIO”错误" class="headerlink" title="“No ImageIO”错误"></a>“No ImageIO”错误</h2><p>打开GIS菜单，加载地图的时候会出现“No ImageIO”错误，需要手动下载文件进行替换。</p><p>FreeImage的下载地址：<br><a href="https://github.com/imageio/imageio-binaries/tree/master/freeimage">https://github.com/imageio/imageio-binaries/tree/master/freeimage</a><br>window系统的替换文件位置<br><code>C:\Users\admin\AppData\Roaming\Blender Foundation\Blender\2.83\scripts\addons\BlenderGIS\core\lib\imageio\resources</code></p><p>建立一个freeimage文件夹，然后将相应版本的文件放入其中<br>例如:freeimage\FreeImage-3.15.1-win64.dll<br>然后重新打开blander方可生效</p><p>这个应该是linux系统的路径<br>/Contents/Resources/3.1/scripts/addons/BlenderGIS-master/core/lib/imageio/resources</p><h2 id="加载地图"><a href="#加载地图" class="headerlink" title="加载地图"></a>加载地图</h2><p>谷歌之类的地图可能因为墙的原因无法加载，国内的地图需要申请。可以去天地图申请token，然后放在插件中，就可以加载地图。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blander</tag>
      
      <tag>GIS</tag>
      
      <tag>软件安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OSGB格式的打开方式</title>
    <link href="/2022/11/04/OSGB%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/"/>
    <url>/2022/11/04/OSGB%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="OSGB简介"><a href="#OSGB简介" class="headerlink" title="OSGB简介"></a>OSGB简介</h2><p>OSGB全称为Open Scene Gragh Binary,是开源三维渲染引擎OpenSceneGraph（OSG）数据文件格式的二进制版本，同时也是目前倾斜摄影模型（尤其是使用CC处理的模型）常用的存储格式。</p><h2 id="解析OSGB"><a href="#解析OSGB" class="headerlink" title="解析OSGB"></a>解析OSGB</h2><p>由于OSG是用C++编写的，而且OSGB又是二进制格式，在解析上就存在一定的难度，如果完全从头编写解析程序的话，需要熟练掌握OSG，甚至需要深入源码，对Web开发者来说是一件不那么容易的事。</p><p>参考链接:[OSG中文社区 <a href="http://www.osgchina.org/]:http://www.osgchina.org/">http://www.osgchina.org/]:http://www.osgchina.org/</a></p><h2 id="可以打开OSGB的软件"><a href="#可以打开OSGB的软件" class="headerlink" title="可以打开OSGB的软件"></a>可以打开OSGB的软件</h2><ol><li>CC Viewer 需要制作s3c链接</li><li>DasViewer 来自武汉大势智慧，免费使用但功能有限</li><li>OsgbLab 倾斜伴侣，强大的Osgb格式转换器，但大型转换任务要收费，浏览模型的功能有限</li></ol><ul><li>除此之外一些大品牌的地理信息处理软件，例如eFeature、中海达HiData等也可以直接打开osgb格式的模型。</li><li>另外就是通过Cesium、Unity、虚幻之类的引擎，自己搭建渲染环境，制作界面，加载模型。学习成本较高</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>osgb</tag>
      
      <tag>三维模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于元宇宙的一些愚见</title>
    <link href="/2022/09/11/%E5%85%B3%E4%BA%8E%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9A%E8%A7%81/"/>
    <url>/2022/09/11/%E5%85%B3%E4%BA%8E%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9A%E8%A7%81/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近工作告一段落，开始有一些闲暇时间，开始接触什么数字孪生、元宇宙之类的东西。尽管查了一些资料，但总觉得理解得太片面，需要整理一下知识碎片。中秋节放假在书店里看了一本书，叫做《简单元宇宙》，于是有了一点灵感，遂将想法记录下来，尽管不一定正确。</p><h2 id="元宇宙与多元宇宙"><a href="#元宇宙与多元宇宙" class="headerlink" title="元宇宙与多元宇宙"></a>元宇宙与多元宇宙</h2><p>之前一直没能理解，什么是元宇宙，感觉像是一个生造出来的词语一样。<br>但是在书中看到了把元宇宙和多元宇宙放在一起解释的说法，一下子就清晰了起来。<br>所以按我的理解，应该是这样的：<br>元宇宙，即我们所处的世界，是最基本的宇宙，而从中可以衍生出许多其他的附属宇宙空间。元，即元初，元始之意。<del>以常识来判断的话，这一段是一句正确的废话</del><br>多元宇宙，即存在多个宇宙，它们或相对独立，或存在一定关联。这一概念在以漫威为代表的许多美国电影里面已经有许多的体现了，要是看过这些电影的人应该立刻能理解。<br>而现在互联网行业所提的元宇宙，也就是以我们现实的宇宙为基础，延伸出其他虚拟的宇宙。以网络游戏《最终幻想14》为例子的话，也就是现实中的我，操作着游戏中的角色，以冒险者的角色在虚拟的艾欧泽亚大陆冒险。</p><h2 id="元宇宙的形成条件"><a href="#元宇宙的形成条件" class="headerlink" title="元宇宙的形成条件"></a>元宇宙的形成条件</h2><p>那么网络游戏就是元宇宙了吗，也并不是，因为元宇宙还需要满足其他的一些条件。</p><ul><li>元宇宙里的资产，是收到保护的，不会轻易消失或者挪用。就像我们用的微信零钱、支付宝一样，虽然上面只有一个数字，但一般情况我们并不需要担心这个钱莫名的消失。而游戏的账号，所有权完全在游戏公司手里，哪天游戏停服了，什么都不会剩下，公司也不会把你充的钱退给你。</li><li>元宇宙里的资产，要具备通用性。还是举支付宝的例子，像这样虽然把现金变成了电子数据，但它仍然在哪都可以花，甚至可以在国外花。而游戏里的角色、等级、能力、装备，在这家的游戏里可以用，而换一款游戏，就得一切从头开始，所以说元宇宙像网络游戏，但网络游戏不是元宇宙。电影《头号玩家》里的绿洲，倒是非常符合元宇宙的畅想。</li><li>元宇宙里面，需要能够进行生产活动。这也是为什么网络游戏不是元宇宙的另一个重要原因，元宇宙不能只是一个从现实。从现实一点的角度出发，元宇宙空间里，应该能够进行内容的生产，并且能够产出产品到现实世界，从而实现对现实的影响，或者说，它本身就是现实的一部分。目前的技术也不可能做到虚拟空间里种出粮食来再放到现实中吃，这已经是魔法了。以目前的技术水平，能做到在虚拟空间中创作文化产品就不错了，像现在已经有的AR作画，51world的虚拟办公室等。<br>所以综上所述，我觉得现在的情况就是：<strong>我们习以为常的日常生活中，其实已经融入了元宇宙的部分要素或者特征，但它们都分散在各种各样的系统或者产品当中，并不能通过简单的拼凑或者融合来实现或者进化出一个元宇宙出来。</strong><br>那么如何构建一个元宇宙呢，这个问题应该由那些掌握了社会绝大多数资源的人来回答。以我的见识和资源，并不足以支持我做出睿智的判断。<br>说了这么多，所谓的元宇宙，也就和以前的量子科技一样。量子理论是存在的吗？当然是的，至今还有许多科学家们在不断地探索着人类未知的领域，向科学家们致敬。那现在市面上查到的以量子为噱头的产品是真的吗？当然绝大多数是假的，目前并没有量子技术投入到商业当中，就连量子计算机之类的东西，目前也只是在实验室里，市场上的“量子”二字只是商人们拿来炒作的工具罢了。</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>以上一切仅为个人愚见，不是真理，也不代表任何人。<br>作为站在二十一世纪的路口的打工人，我希望自己秉持对未知事物的尊重躬身而行。<strong>路漫漫其修远兮，吾将上下而求索。</strong></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>元宇宙</tag>
      
      <tag>多元宇宙</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>版本控制与环境管理</title>
    <link href="/2022/09/05/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E4%B8%8E%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86/"/>
    <url>/2022/09/05/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E4%B8%8E%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="需要版本控制的原因"><a href="#需要版本控制的原因" class="headerlink" title="需要版本控制的原因"></a>需要版本控制的原因</h2><p>在使用python的时候偶尔会遇到版本的冲突，尤其是有一些轮子只适配老型号的底盘，为了避免安装新环境的时候拆除已经搭好的旧环境，所以需要使用版本控制工具对程序版本进行管理。<br>本来不碰论文之后好久没折腾这玩意了，但是最近尝试vue3的时候又遇到了three.js不适配新版本Node.js的问题，而我的博客也在使用Node.js，为了保护已有的环境，要么换台电脑，要么只能用版本控制工具来协助我切换版本了。</p><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><p>python上以前我用过的就是Anaconda，可以支持一键创建环境，管理环境，还算方便。<br>此处以后再更新一下具体的使用方法</p><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><p>查了一下好像只有nvm又支持Windows系统的nvm-windows，还有一个支持全平台的fnm。</p><p>此处以后再更新一下具体的使用方法</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>版本控制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（二）</title>
    <link href="/2022/09/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2022/09/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>本章节主要对一些零散知识的整理，下一章节开始项目代码的构建</strong></p><h2 id="关于网页构成和代码注入"><a href="#关于网页构成和代码注入" class="headerlink" title="关于网页构成和代码注入"></a>关于网页构成和代码注入</h2><p>打开网站的入口文件index.html，发现body里面明明什么都没有，只有一条备注，但运行dev的时候却能看到一个初始化界面。这条备注的信息，说的就是生成的文件将自动注入，这里实际上是通过插件实现的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>   <span class="hljs-comment">&lt;!-- built files will be auto injected --&gt;</span><br></code></pre></td></tr></table></figure><p>在dev启动的页面中，用浏览器F12查看代码，会发现多了一行，就是注入文件的路径，也就是我们要写代码的地方了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- built files will be auto injected --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/app.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>`<br></code></pre></td></tr></table></figure><h2 id="项目打包"><a href="#项目打包" class="headerlink" title="项目打包"></a>项目打包</h2><p>项目打包使用指令<code>cnpm run build</code>实现项目的打包，打包完成后会在Vue项目下面生成一个<code>dist</code>目录，包含了index.html和static目录，static目录包含静态文件js、css以及图片目录images（如果有的话）</p><p><img src="/2022/09/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/%E6%89%93%E5%8C%85%E5%AE%8C%E6%88%90%E7%94%BB%E9%9D%A21.png" alt="打包完成画面"></p><p>打包完成后，理论上就可以直接部署在其他地方了。但是双击index.html会打不开网页，因为里面的路径是绝对路径。需要修改成相对路径。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">/static/css/app.33da80d69744798940b135da93bc7b98.css</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">stylesheet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">text/javascript</span> <span class="hljs-attr">src</span>=<span class="hljs-string">/static/js/app.717bb358ddc19e181140.js</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>...<br></code></pre></td></tr></table></figure><p>修改之后变成下面这样。其实就是去掉了个别/</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">static/css/app.33da80d69744798940b135da93bc7b98.css</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">stylesheet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">text/javascript</span> <span class="hljs-attr">src</span>=<span class="hljs-string">static/js/app.717bb358ddc19e181140.js</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>...<br></code></pre></td></tr></table></figure><p>修改完以后，双击index.html就可以打开。</p><h3 id="关于打包时node报错"><a href="#关于打包时node报错" class="headerlink" title="关于打包时node报错"></a>关于打包时node报错</h3><p>报错提示：<code>(Use node --trace-warnings ...to show where the warning was created</code><br>在网上查了一下，好像是node版本的问题，vue支持的node版本太低了，得降低版本才行。回头再整个环境管理的玩意才行。</p><h3 id="VUE的目录结构"><a href="#VUE的目录结构" class="headerlink" title="VUE的目录结构"></a>VUE的目录结构</h3><table><thead><tr><th align="left">目录/文件</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">build</td><td align="left">项目构建（webpack）相关代码</td></tr><tr><td align="left">config</td><td align="left">配置目录，包括端口号等</td></tr><tr><td align="left">node_modules</td><td align="left">npm加载的项目依赖模块</td></tr><tr><td align="left">src</td><td align="left">开发目录<br>assets：放置图片。<br>components：组件文件。<br>App.vue：项目入口文件<br>main.js：项目的核心文件<br>index.css：样式文件（不建的话没有）<br>router：里面放了个index.js</td></tr><tr><td align="left">static</td><td align="left">静态资源目录</td></tr><tr><td align="left">public</td><td align="left">公共资源目录</td></tr><tr><td align="left">test</td><td align="left">测试目录</td></tr><tr><td align="left">dist</td><td align="left">使用<code>npm run build</code>命令打包之后可以生成目录</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VUE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（一）</title>
    <link href="/2022/09/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2022/09/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="VUE基础"><a href="#VUE基础" class="headerlink" title="VUE基础"></a>VUE基础</h2><p>Vue.js是一套构建用户界面的渐进式框架。<br>只关注图层，采用自底向上的开发设计。<br>所需要的知识基础：<strong>HTML</strong>,<strong>CSS</strong>,<strong>JavaScript</strong></p><h2 id="安装和运行过程"><a href="#安装和运行过程" class="headerlink" title="安装和运行过程"></a>安装和运行过程</h2><p>使用npm（或cnpm）安装稳定版的vue<br><code>cnpm install vue@next</code><br>升级一下@vue/cli<br><code>cnpm install -g @vue/cli</code><br>在Vue项目中运行（应该是组件升级用的）<br><code>vue upgrade --next</code><br>进入项目文件夹，安装并运行dev<br><code>cd runoob-vue3-test cnpm run dev</code><br>然后就会给一个端口<code>http://localhost:8080/</code>，直接进浏览器打开<br>运行成功后的画面：<br><img src="/2022/09/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/vue%E8%BF%90%E8%A1%8C%E6%88%AA%E5%9B%BE1.png" alt="运行成功画面"></p><h2 id="安装过程中遇到的问题"><a href="#安装过程中遇到的问题" class="headerlink" title="安装过程中遇到的问题"></a>安装过程中遇到的问题</h2><p>出师不利，一上来就遇到了问题<br><code> vue-cli · Failed to download repo vuejs-templates/webpack: unable to verify the first certificate</code></p><p>关闭了steam++的加速后，不会直接报网络错误了，但是显示下载后，又会卡很长一段时间然后依旧报错。换了淘宝源之后，依旧不行。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">downloading <span class="hljs-keyword">template</span><br>vue-cli · Failed <span class="hljs-keyword">to</span> download repo vuejs-templates/webpack: <span class="hljs-keyword">connect</span> ETIMEDOUT <span class="hljs-number">52.192</span><span class="hljs-number">.72</span><span class="hljs-number">.89</span>:<span class="hljs-number">443</span><br></code></pre></td></tr></table></figure><p>大概率还是网络的问题，换源并没有用，只能用手动下载离线部署的方式解决。<br>去到git仓库手动下载webpack模块[<a href="https://github.com/vuejs-templates/webpack]:https://github.com/vuejs-templates/webpack">https://github.com/vuejs-templates/webpack]:https://github.com/vuejs-templates/webpack</a><br>下载后是一个压缩包<strong>webpack-develop.zip</strong>，需要解压后把文件夹名称改为<strong>webpack</strong>然后放到<code>C:\Users\用户名\.vue-templates</code>路径下，也就是<code>C:\Users\用户名\.vue-templates\webpack</code>。<br>（如果是初次安装这个.vue-templates文件夹是没有的，要自己建）</p><p>然后就可以运行vue创建项目了，但是要使用<code>--offline</code><br><code>vue init webpack --offline runoobvue3</code>(最后的是项目名称)<br>如果没有放对位置，就会出现<br><code>vue-cli · Local template &quot;C:\Users\用户名\.vue-templates\webpack&quot; not found</code><br>根据提示的地址，放到对应的位置就好，毕竟问题总是千奇百怪，一个方法不一定能解决所有问题。<br>大概是因为vue里面把这个安装路径给写死了，所以只能放在这里。后续有机会再研究这个路径的问题。<br>一顿操作以后，终于看到了创建成功的提示出现，总算是没白忙活</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&gt; Use cached template at ~\.vue-templates\webpack<br><br>? Project name runoobvue3<br>? Project description A Vue.js project<br>? Author <span class="hljs-string">&#x27;kw344456731&#x27;</span> &lt;1649190133@qq.com&gt;<br>? Vue build standalone<br>? Install vue-router? <span class="hljs-literal">Yes</span><br>? Use ESLint <span class="hljs-keyword">to</span> lint your code? <span class="hljs-literal">Yes</span><br>? Pick an ESLint preset Standard<br>? <span class="hljs-built_in">Set</span> up unit tests <span class="hljs-literal">Yes</span><br>? Pick a test runner jest<br>? Setup e2e tests with Nightwatch? <span class="hljs-literal">Yes</span><br>? Should we <span class="hljs-built_in">run</span> `npm install` <span class="hljs-keyword">for</span> you after the project has been created? (recom<br>mended) npm<br><br>   vue-cli · Generated <span class="hljs-string">&quot;runoobvue3&quot;</span>.<br><br><br><span class="hljs-comment"># Installing project dependencies ...</span><br><span class="hljs-comment"># ========================</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VUE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于Repository_No_Found的问题</title>
    <link href="/2022/08/31/%E5%85%B3%E4%BA%8ERepository_No_Found%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2022/08/31/%E5%85%B3%E4%BA%8ERepository_No_Found%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>今天进行<code>hexo d</code>的时候，出现了新的问题，提示<br><code>repository 我的仓库地址 no Found</code><br>尝试在网上寻找解决办法，一番研究后查明，是登录信息有问题。但是不应该啊，最近也没有修改过账号和密码，也没有动过密钥和令牌。<br>然后看到有大佬说，是windows的凭据管理器，自动填写了其他的账号和密码进去。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>打开<code>控制面板\用户帐户\凭据管理器</code>，选择windows保管库，然后找到自己的github仓库的账号和密码，重新编辑一下，输入正确的密码，然后保存，就恢复正常了。<br>再次使用仓库时，会提示重新登录或者重新输入令牌。</p><p>PS:最近还遇到了无法上传的问题，折腾了半天也没解决，最后才发现是网络问题，github大概被墙了，用steam++加速一下就搞定了。也许这就是久病成医吧。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>github</tag>
      
      <tag>凭据问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL学习(一)</title>
    <link href="/2022/08/30/SQL%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2022/08/30/SQL%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然以前上学的时候上了数据库的课程，但是很遗憾并没有学的很好。如今工作后时常和数据库打交道，所以在W3school中复习一下SQL。</p><h2 id="SQL是什么"><a href="#SQL是什么" class="headerlink" title="SQL是什么"></a>SQL是什么</h2><p>SQL 是一门 ANSI 的标准计算机语言，用来访问和操作数据库系统。但是不同版本的SQL库除了重要关键词一样之外，还会有自己的私有扩张库。</p><h2 id="SQL-DML和DDL"><a href="#SQL-DML和DDL" class="headerlink" title="SQL DML和DDL"></a>SQL DML和DDL</h2><ul><li>DML 数据操作语言，</li><li>DDL 数据定义语言，创建、删除表格，定义索引（键），规定表之间的链接，以及施加表之间的约束。</li></ul><h2 id="重要事项"><a href="#重要事项" class="headerlink" title="重要事项"></a>重要事项</h2><ol><li>SQL对大小写不敏感</li><li>如果使用的是 MS Access 和 SQL Server 2000，则不必在每条 SQL 语句之后使用分号，不过某些数据库软件要求必须使用分号。根据实际情况使用。<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h3>筛选结果包含的列<br>基本语法：<br><code>select 列名称 from 表名称</code><br>以及用*获取所以列：<br><code>select * from 表名称</code><br>获取多个列时：<br><code>select 列名称1,列名称2 from 表名称</code></li></ol><h3 id="DISTINCT"><a href="#DISTINCT" class="headerlink" title="DISTINCT"></a>DISTINCT</h3><p>distinct用于筛选出把不同的值，相同的列但不同行只显示一次，相当于一次汇总统计。<br>语法：<br><code>SELECT DISTINCT 列名称 FROM 表名称</code></p><h3 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h3><p>引出筛选条件的语句<br>where语句的基本语法如下：<br><code>SELECT 列名称 FROM 表名称 WHERE 列 运算符 值</code><br>示例：<br><code>SELECT * FROM Persons WHERE City=&#39;Beijing&#39;</code></p><p>可以在where中使用的运算符有：<br>= 等于（某些版本也写作<code>!=</code>）<br>&lt;&gt; 不等于<br>&gt; 大于<br>&lt; 小于<br>&gt;= 大于等于<br>&lt;= 小于等于<br>BETWEEN 在某个范围内<br>LIKE 搜索某种模式</p><h4 id="引号的使用"><a href="#引号的使用" class="headerlink" title="引号的使用"></a>引号的使用</h4><p>请注意，我们在例子中的条件值周围使用的是单引号。<br>SQL 使用单引号来环绕<strong>文本值</strong>（大部分数据库系统也接受双引号）。如果是<strong>数值</strong>，请不要使用引号。</p><h3 id="AND-和-OR"><a href="#AND-和-OR" class="headerlink" title="AND 和 OR"></a>AND 和 OR</h3><p>与和或的逻辑，或者说交集和并集，平时用的也非常多了。<br>二者结合的示例：<br><code>SELECT * FROM Persons WHERE (FirstName=&#39;Thomas&#39; OR FirstName=&#39;William&#39;)AND LastName=&#39;Carter&#39;</code><br>为了防止逻辑的混乱，要适当的使用圆括号进行分割。</p><h3 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h3><p>语法示例：<br><code>ORDER BY 列名称 ASC</code><br>语句根据指定列对结果进行升序排序。因为默认是升序，所以ASC一般可以省略。如果需要按降序排序，在指定列的后面加上关键字<code>DESC</code>。<br>但是如果按照多个字段进行排序时，还是要把ASC加上。<br>示例：<br><code>SELECT 字段一, 字段二 FROM 表名 ORDER BY 字段一 DESC, 字段二 ASC</code></p><h3 id="INSERT-INTO"><a href="#INSERT-INTO" class="headerlink" title="INSERT INTO"></a>INSERT INTO</h3><p>该语句用于向表格中插入新的行。<br>语法示例：<br><code>INSERT INTO 表名称 VALUES (值1, 值2,....)</code><br>也可以指定单独插入数据的列，这样的话没有插入数据的列就会被空着。<br><code>INSERT INTO table_name (列1, 列2,...) VALUES (值1, 值2,....)</code></p><h3 id="UPDATA"><a href="#UPDATA" class="headerlink" title="UPDATA"></a>UPDATA</h3><p>该语句用于修改表格中的数据<br>语法示例：<br><code>UPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值</code><br>更新某一行中的若干列：<br><code>UPDATE Person SET Address = &#39;Zhongshan 23&#39;, City = &#39;Nanjing&#39; WHERE LastName = &#39;Wilson&#39;</code></p><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><p>该语句用于删除表中的行。<br>语法示例：删除某个条件下的记录<br><code>DELETE FROM 表名称 WHERE 列名称 = 值</code><br>在不删除表的情况下删除所有行（表的结构、属性和索引都是完整的）<br><code>DELETE * FROM table_name</code><br>其中<code>*</code>是可以省略的。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArcGIS入门</title>
    <link href="/2022/08/30/ArcGIS%E5%85%A5%E9%97%A8/"/>
    <url>/2022/08/30/ArcGIS%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="Arcgis安装"><a href="#Arcgis安装" class="headerlink" title="Arcgis安装"></a>Arcgis安装</h2><p>桌面端主程序 ArcGIS_Desktop<br>许可程序 License_Manager<br>破解，可使用注册机或替换文件。</p><h2 id="ArcMap界面介绍"><a href="#ArcMap界面介绍" class="headerlink" title="ArcMap界面介绍"></a>ArcMap界面介绍</h2><p>内容列表<br>制图区<br>菜单及工具条<br><img src="/2022/08/30/ArcGIS%E5%85%A5%E9%97%A8/GIS%E7%95%8C%E9%9D%A2.png" alt="arcgis界面"></p><h2 id="地图文档（-Mxd）与地图矢量以及数据库的关系"><a href="#地图文档（-Mxd）与地图矢量以及数据库的关系" class="headerlink" title="地图文档（.Mxd）与地图矢量以及数据库的关系"></a>地图文档（.Mxd）与地图矢量以及数据库的关系</h2><p>多对多联系<br>地图文档只存储实际数据在硬盘上的指针和有关地图显示的信息。<br>数据存放在.shp文件或者.gdb数据库</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h4 id="图层的开启关闭"><a href="#图层的开启关闭" class="headerlink" title="图层的开启关闭"></a>图层的开启关闭</h4><p>通过勾选图层左侧的✔，可以对该图层进行显示/关闭操作</p><h4 id="图层顺序调整"><a href="#图层顺序调整" class="headerlink" title="图层顺序调整"></a>图层顺序调整</h4><p>在内容列表中对某一图层长按，然后进行拖拽，可以改变图层之间的覆盖关系，位置靠上的图层可以有效覆盖位置靠下的图层。</p><h4 id="图层透明度调整"><a href="#图层透明度调整" class="headerlink" title="图层透明度调整"></a>图层透明度调整</h4><p>在内容列表中修改的图层，在图层属性中选择【显示】，即可对该图层的透明度进行调整</p><h4 id="视图切换"><a href="#视图切换" class="headerlink" title="视图切换"></a>视图切换</h4><p>主菜单-视图，可以切换数据视图和布局视图<br>数据视图：用于数据的绘制、 编辑等。<br>布局视图：该视图下会显示图框、图名、比例尺等要素，主要用于图纸的最后输出。、<br>在【主菜单】中的【插入】选项中，插入我们出图需要的各种要素。</p><h4 id="创建Shapefile文件"><a href="#创建Shapefile文件" class="headerlink" title="创建Shapefile文件"></a>创建Shapefile文件</h4><p>Shapefile文件类似于CAD中的一个图层，它只可以储存同一类型（点、线、面等）的数据文件，如学校布点、道路或行政区划<br>在【目录】-【文件夹连接】中，右键点击我们的目标文件夹，选择【新建】-【Shapefile】</p><h4 id="创建Geodatabase文件"><a href="#创建Geodatabase文件" class="headerlink" title="创建Geodatabase文件"></a>创建Geodatabase文件</h4><p>与“Shapefile”文件只能储存单一属性数据不同的是，Geodatabase是按照一定的模型和规则组合起来的储存空间数据和属性的数据合集。它的优势在于不同类型数据的整合和整体移动的便捷。【Geodatabase】的子集为【要素数据集】，【要素数据集】的子集为【要素类】。相当于一个文件夹，包含多个shapefile和表。<br>在【目录】-【文件夹连接】中，右键单击【现状道路】，选择【新建】-【个人地理数据库】</p><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h4 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h4><p>选择、跟踪、折点编辑、整形、分割、属性框、创建要素。<br>粘滞移动容差设置。</p><h4 id="字段计算器"><a href="#字段计算器" class="headerlink" title="字段计算器"></a>字段计算器</h4><p>用于在编辑字段内容时进行批量赋值。<br>例如常用的<strong>按顺序编号</strong>，可以用python实现。在代码块中定义函数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">rec</span>=0<br>def autoIncrement():<br>global rec<br><span class="hljs-attribute">pStart</span>=1#初始值<br><span class="hljs-attribute">pInterval</span>=1#间隔值<br><span class="hljs-keyword">if</span>(<span class="hljs-attribute">rec</span>==0):<br><span class="hljs-attribute">rec</span>=pStart<br><span class="hljs-keyword">else</span>:<br><span class="hljs-attribute">rec</span>=rec+pInterval<br>return rec<br></code></pre></td></tr></table></figure><p>在赋值区用运行函数</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">autoIncrement</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><h4 id="属性查询器"><a href="#属性查询器" class="headerlink" title="属性查询器"></a>属性查询器</h4><p>使用属性查询器对要素进行属性筛选，例如</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">DLTB</span> LIKE <span class="hljs-string">&#x27;03%&#x27;</span><br></code></pre></td></tr></table></figure><p>需要了解SQL、以及基本的通配字符。例如<br>【<code>%</code>】表示0个或多个字符</p><h4 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h4><p>创建矢量数据、数据库，查看数据库中的内容，对数据库进行修改。</p><h4 id="工具箱"><a href="#工具箱" class="headerlink" title="工具箱"></a>工具箱</h4><p>分析工具-叠加分析<br>数据管理工具-常规-合并<br>投影和变化-定义投影、投影<br>缓冲区、数据驱动<br>转换工具Dwg、shp、kml</p><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>方便快捷的找到相应的工具</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ArcGIS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在markdown文档中插入图片的方式</title>
    <link href="/2022/08/29/%E5%9C%A8markdown%E6%96%87%E6%A1%A3%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <url>/2022/08/29/%E5%9C%A8markdown%E6%96%87%E6%A1%A3%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="插入图片的方法"><a href="#插入图片的方法" class="headerlink" title="插入图片的方法"></a>插入图片的方法</h1><p>在hexo中插入图片的语法为<code>![]()</code><br>其中【方括号】是图片描述，(圆括号)是图片路径。</p><p>一般来说有三种图片路径，分别是相对路径，绝对路径和网络路径。<br><strong>网络路径</strong><br>直接引用网上的图片，直接复制图片地址，放在圆括号中就完事了。这种方式十分的方便，但是也存在一定的问题。</p><ul><li>图片失效导致无法加载；</li><li>打开网页后要再请求加载图片；</li><li>原网站限制，如微信公众号的图片会变得不可见等。</li></ul><p><strong>绝对路径</strong><br>文件在计算机中的绝对位置</p><p><strong>相对路径</strong><br>相对于当前引用的文件路径</p><p>在hexo中使用文章资源文件夹需要在config.yaml文件中更改一下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>该项配置更改后，新建文档时会自动生成同名文件夹，用于存放文档资源。</p><p>在实际使用中，虽然编辑器中可以预览到图片了，但是部署到网上之后会图片依然会无法显示，此时需要一个图片插件<u>hexo-renderer-marked</u>。使用npm指令可以快速安装：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo-renderer-marked<br></code></pre></td></tr></table></figure><p>安装后在config.yaml文件中更改一下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>之后就可以在使用<code>![](image.jpg)</code>的方式愉快的插入图片了。</p><h3 id="图片上传测试"><a href="#图片上传测试" class="headerlink" title="图片上传测试"></a>图片上传测试</h3><p><img src="/2022/08/29/%E5%9C%A8markdown%E6%96%87%E6%A1%A3%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E5%BC%8F/%E5%85%AB%E9%87%8D%E6%A8%B1%E5%A3%81%E7%BA%B82.png" alt="八重樱壁纸"></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>图片</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据格式3Dtiles和osgb的学习</title>
    <link href="/2022/05/30/%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F3Dtiles%E5%92%8Cosgb%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/05/30/%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F3Dtiles%E5%92%8Cosgb%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>今天整理了一下关于前几天学习模型格式的笔记</p><h2 id="OSGB格式"><a href="#OSGB格式" class="headerlink" title="OSGB格式"></a>OSGB格式</h2><p>osgb格式的模型数据，无论是.s3c文件还是Data中的.osgb，打开都是人类难以理解的16进制码，只有.xml文件里记录了一些信息。<br>可以很明显的看到里面有投影坐标系、中央子午线、地理坐标系，地理坐标和高程等信息，程序在使用模型时，就可以根据这些位置信息，将文件夹中碎片的模型数据准确的摆放在正确的坐标上。而模型的数据，没有相应程序的解析就是个黑匣子（文件夹的名称也应当符合程序要求）。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ModelMetadata</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">SRS</span>&gt;</span>PROJCS[<span class="hljs-symbol">&amp;quot;</span>CGCS2000 / 3-degree Gauss-Kruger CM 109.91666667E<span class="hljs-symbol">&amp;quot;</span>,    GEOGCS[<span class="hljs-symbol">&amp;quot;</span>China Geodetic Coordinate System 2000<span class="hljs-symbol">&amp;quot;</span>,        DATUM[<span class="hljs-symbol">&amp;quot;</span>China_2000<span class="hljs-symbol">&amp;quot;</span>,            SPHEROID[<span class="hljs-symbol">&amp;quot;</span>CGCS2000<span class="hljs-symbol">&amp;quot;</span>,6378137,298.257222101,                AUTHORITY[<span class="hljs-symbol">&amp;quot;</span>EPSG<span class="hljs-symbol">&amp;quot;</span>,<span class="hljs-symbol">&amp;quot;</span>1024<span class="hljs-symbol">&amp;quot;</span>]],            AUTHORITY[<span class="hljs-symbol">&amp;quot;</span>EPSG<span class="hljs-symbol">&amp;quot;</span>,<span class="hljs-symbol">&amp;quot;</span>1043<span class="hljs-symbol">&amp;quot;</span>]],        PRIMEM[<span class="hljs-symbol">&amp;quot;</span>Greenwich<span class="hljs-symbol">&amp;quot;</span>,0,            AUTHORITY[<span class="hljs-symbol">&amp;quot;</span>EPSG<span class="hljs-symbol">&amp;quot;</span>,<span class="hljs-symbol">&amp;quot;</span>8901<span class="hljs-symbol">&amp;quot;</span>]],        UNIT[<span class="hljs-symbol">&amp;quot;</span>degree<span class="hljs-symbol">&amp;quot;</span>,0.0174532925199433,            AUTHORITY[<span class="hljs-symbol">&amp;quot;</span>EPSG<span class="hljs-symbol">&amp;quot;</span>,<span class="hljs-symbol">&amp;quot;</span>9122<span class="hljs-symbol">&amp;quot;</span>]],        AUTHORITY[<span class="hljs-symbol">&amp;quot;</span>EPSG<span class="hljs-symbol">&amp;quot;</span>,<span class="hljs-symbol">&amp;quot;</span>4490<span class="hljs-symbol">&amp;quot;</span>]],    PROJECTION[<span class="hljs-symbol">&amp;quot;</span>Transverse_Mercator<span class="hljs-symbol">&amp;quot;</span>],    PARAMETER[<span class="hljs-symbol">&amp;quot;</span>latitude_of_origin<span class="hljs-symbol">&amp;quot;</span>,0],    PARAMETER[<span class="hljs-symbol">&amp;quot;</span>central_meridian<span class="hljs-symbol">&amp;quot;</span>,109.91666667],    PARAMETER[<span class="hljs-symbol">&amp;quot;</span>scale_factor<span class="hljs-symbol">&amp;quot;</span>,1],    PARAMETER[<span class="hljs-symbol">&amp;quot;</span>false_easting<span class="hljs-symbol">&amp;quot;</span>,500000],    PARAMETER[<span class="hljs-symbol">&amp;quot;</span>false_northing<span class="hljs-symbol">&amp;quot;</span>,0],    UNIT[<span class="hljs-symbol">&amp;quot;</span>metre<span class="hljs-symbol">&amp;quot;</span>,1,        AUTHORITY[<span class="hljs-symbol">&amp;quot;</span>EPSG<span class="hljs-symbol">&amp;quot;</span>,<span class="hljs-symbol">&amp;quot;</span>9001<span class="hljs-symbol">&amp;quot;</span>]],    AUTHORITY[<span class="hljs-symbol">&amp;quot;</span>EPSG<span class="hljs-symbol">&amp;quot;</span>,<span class="hljs-symbol">&amp;quot;</span>4545<span class="hljs-symbol">&amp;quot;</span>]]<span class="hljs-tag">&lt;/<span class="hljs-name">SRS</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">SRSOrigin</span>&gt;</span>507021.25,2057836.2,46.4<span class="hljs-tag">&lt;/<span class="hljs-name">SRSOrigin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ModelMetadata</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="3Dtiles格式"><a href="#3Dtiles格式" class="headerlink" title="3Dtiles格式"></a>3Dtiles格式</h2><p>而3Dtiles格式的数据，就有好多个可以阅读的文本。<br>也就是.json文件。但是要注意模型加载的前提是需要有顶层json路径，若没有则需要进行顶层重建。<br>下面是一段实例的展示：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br><span class="hljs-string">&quot;asset&quot;</span>: &#123;<br><span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;0.0&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;geometricError&quot;</span>: <span class="hljs-number">89.0000000063020877</span>,<br><span class="hljs-string">&quot;root&quot;</span>: &#123;<br><span class="hljs-string">&quot;boundingVolume&quot;</span>: &#123;<br><span class="hljs-string">&quot;sphere&quot;</span>: [<span class="hljs-number">-1832255.4880568594671786</span>, <span class="hljs-number">4636065.7251678528264165</span>, <span class="hljs-number">3967474.6662561106495559</span>, <span class="hljs-number">92.5177488416835700</span>]<br>&#125;,<br><span class="hljs-string">&quot;refine&quot;</span>: <span class="hljs-string">&quot;replace&quot;</span>,<br><span class="hljs-string">&quot;geometricError&quot;</span>: <span class="hljs-number">2</span>,<br><span class="hljs-string">&quot;content&quot;</span>: &#123;<br><span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;Tile_p000_p000.b3dm&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;children&quot;</span>: [&#123;<br><span class="hljs-string">&quot;boundingVolume&quot;</span>: &#123;<br><span class="hljs-string">&quot;sphere&quot;</span>: [<span class="hljs-number">-1832256.7506676781922579</span>, <span class="hljs-number">4636064.3549550874158740</span>, <span class="hljs-number">3967471.9338256986811757</span>, <span class="hljs-number">53.0235926788538521</span>]<br>&#125;,<br><span class="hljs-string">&quot;geometricError&quot;</span>: <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;content&quot;</span>: &#123;<br><span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;Tile_p000_p000_L16_0.b3dm&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;children&quot;</span>: [&#123;<br><span class="hljs-string">&quot;boundingVolume&quot;</span>: &#123;<br><span class="hljs-string">&quot;sphere&quot;</span>: [<span class="hljs-number">-1832256.7506676781922579</span>, <span class="hljs-number">4636064.3549550874158740</span>, <span class="hljs-number">3967471.9338256986811757</span>, <span class="hljs-number">53.0235926788538521</span>]<br>&#125;,<br><span class="hljs-string">&quot;geometricError&quot;</span>: <span class="hljs-number">0.5000000000000000</span>,<br><span class="hljs-string">&quot;content&quot;</span>: &#123;<br><span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;Tile_p000_p000_L17_00.b3dm&quot;</span><br>&#125;,<br><span class="hljs-string">&quot;children&quot;</span>: [&#123;<br><span class="hljs-string">&quot;boundingVolume&quot;</span>: &#123;<br><span class="hljs-string">&quot;sphere&quot;</span>: [<span class="hljs-number">-1832256.7506676781922579</span>, <span class="hljs-number">4636064.3549550874158740</span>, <span class="hljs-number">3967472.1795567460358143</span>, <span class="hljs-number">52.9021132641717458</span>]<br>&#125;,<br><span class="hljs-string">&quot;geometricError&quot;</span>: <span class="hljs-number">0.2500000000000000</span>,<br><span class="hljs-string">&quot;content&quot;</span>: &#123;<br><span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;Tile_p000_p000_L18_000.json&quot;</span><br>&#125;<br>&#125;]<br>&#125;]<br>&#125;]<br><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>结合实际案例和一些其他资料，大概可以整理成下面这个样式。<br>虽然json的文件格式是可以直接阅读的，但是套娃式的复杂结构决定了实际在处理大批量数据时，还是要依靠机器处理。</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs livescript">&#123;<br><span class="hljs-string">&quot;asset&quot;</span>: &#123;<span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;0.0&quot;</span>&#125;,<span class="hljs-string">\\记录整个数据集的声明和归属</span><br><br><span class="hljs-string">&quot;geometricError&quot;</span>: <span class="hljs-number">89.0000000063020877</span>,<br><span class="hljs-string">\\几何误差，用来控制不同比例尺下模型的显隐。这个数值父级瓦片一定比子级瓦片大，可以理解为放大后就能看到更多的模型细节。</span><br><br><span class="hljs-string">&quot;root&quot;</span>: &#123;<br><span class="hljs-string">&quot;boundingVolume&quot;</span>: &#123;<br><span class="hljs-string">&quot;sphere&quot;</span>: [-<span class="hljs-number">1832255.4880568594671786</span>, <span class="hljs-number">4636065.7251678528264165</span>, <span class="hljs-number">3967474.6662561106495559</span>, <span class="hljs-number">92.5177488416835700</span>]<br>&#125;,<br>        <span class="hljs-string">\\boundingVolume</span> 数据框架，有三种类型<br><br><span class="hljs-string">&quot;refine&quot;</span>: <span class="hljs-string">&quot;replace&quot;</span>,<br><span class="hljs-string">\\加载方式</span><br><br><span class="hljs-string">&quot;geometricError&quot;</span>: <span class="hljs-number">2</span>,<br><span class="hljs-string">\\几何误差</span><br><br><span class="hljs-string">&quot;content&quot;</span>: &#123;<br><span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;Tile_p000_p000.b3dm&quot;</span><br>&#125;,<br><span class="hljs-string">\\content</span> 这个root链接的数据的地址，好像url和uri都可以。可以是子结点的json。父节点可以无限引用子节点，但是子节点不能循环引用父结点。<br><br><span class="hljs-string">&quot;children&quot;</span>: [&#123;  ]&#125;<br><span class="hljs-string">\\开始套娃，里面是这个root的子叶结点</span><br><br> &#125;<span class="hljs-string">\\root是数据集的根瓦片，记录了大量的信息。</span><br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>3Dtiles允许数据集使用的四种树状结构：<br>四叉树、八叉树、KD树、格网结构。<br>四叉树可以理解为平面上的一个正方形，横竖两刀切成四块，也就成了四个子叶结点。<br>八叉树可以理解为四叉树增加了一个维度，变成一个正方体切三刀变为八个小正方体。<br>模型的树形分支构造也会影响加载速度，越大的切片文件加载越慢，根据实际需要进行选择。</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>3Dtiles的数据也是以瓦片形式保存的，而且瓦片的类型并不唯一，具体有</p><h4 id="b3dm"><a href="#b3dm" class="headerlink" title="b3dm"></a>b3dm</h4><p>传统的三维建模数据、BIM数据、倾斜摄影数据。（也是做大范围场景最常用的数据）</p><h4 id="i3dm"><a href="#i3dm" class="headerlink" title="i3dm"></a>i3dm</h4><p>一个模型多次渲染，例如路灯、售货机、摄像头</p><h4 id="pnts"><a href="#pnts" class="headerlink" title="pnts"></a>pnts</h4><p>点云数据</p><h4 id="cmpt"><a href="#cmpt" class="headerlink" title="cmpt"></a>cmpt</h4><p>前三种数据的符合，一个cmpt文件里可以内嵌多个其他类型的瓦片。</p><p>3Dtiles的基础是glTF，全称为Graphics Language Transmission Format （图形语言传输格式），针对WebGL、OpenGL等接口的运行时数据传输格式。所以3Dtiles实际的文件后缀名是glTF决定的，而3Dtiles是为了加载海量的三维数据，在glTF的基础上加入了分层概念，使其适应倾斜摄影、点云等大规模数据的加载。<br>2017年公布glTF2.0标准，2022年初公布3Dtiles Next标准（二代）。</p><h2 id="URL-URN-URI"><a href="#URL-URN-URI" class="headerlink" title="URL + URN = URI"></a>URL + URN = URI</h2><p>在使用模型时会遇到的<br>URL 统一资源定位符，是表示引用地址的字符串。主要用于连接网页、网页组件或网页程序，用访问方法来检索资源位置。<br>URL包含<br>1、用于访问资源的协议<br>2、服务器的位置<br>3、服务器端口号（可选）<br>4、资源在服务器目录结构中的位置<br>5、片段标识符（可选）<br>URI 统一资源标识符，标识逻辑或物理资源的字符序列。定义项目的标识，将一个资源与其他资源区分开。<br>URI 包含<br>1、Scheme（方案）<br>2、权限组件<br>3、查询（可选）<br>4、片段（可选）</p><h2 id="一些其他知识点："><a href="#一些其他知识点：" class="headerlink" title="一些其他知识点："></a>一些其他知识点：</h2><p>1、osgb是对人类友好的对象型数据；3Dtiles格式则为对GPU友好的图形编程型数据，一切为了渲染速度服务。</p><p>2、osgb到3Dtiles为单向转换，反向的成本过高几乎不考虑。</p><p>3、使用FME也可以进行osgb对3Dtiles的转换（但是目前尝试没有成功）</p><p>4、glTF1.0 和 glTF2.0 的不同可能会于Cesium的不同版本有不兼容的情况，过于深入暂不研究。</p><h2 id="一些相关的软件平台："><a href="#一些相关的软件平台：" class="headerlink" title="一些相关的软件平台："></a>一些相关的软件平台：</h2><p>CesiumLab<br>Mars3D</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>3Dtiles</tag>
      
      <tag>osgb</tag>
      
      <tag>数据格式</tag>
      
      <tag>Cusium</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo升级与环境整理</title>
    <link href="/2022/05/26/hexo%E5%8D%87%E7%BA%A7%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%95%B4%E7%90%86/"/>
    <url>/2022/05/26/hexo%E5%8D%87%E7%BA%A7%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>太长时间没打理blog了，现在抽空搞一搞。把本地文件复制到工作的小笔记本上，看着以前自己的笔记重新安装环境，设置连接，但是又发现了一堆问题，怎么也无法上传。</p><p>百度了一下别人的代码进行一键升级。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-comment"># 使用淘宝源的 cnpm 替换 npm</span><br><span class="hljs-built_in">npm</span> install -g cnpm --registry=https://registry.<span class="hljs-built_in">npm</span>.taobao.org<br><br>cnpm install -g cnpm                 <span class="hljs-comment"># 升级 npm</span><br>cnpm cache clean -f                 <span class="hljs-comment"># 清除 npm 缓存</span><br><br>===更新 hexo: 进入 blog 目录，执行如下命令=== <br><span class="hljs-comment"># 更新 package.json 中的 hexo 及个插件版本</span><br>cnpm install -g <span class="hljs-built_in">npm</span>-check           <span class="hljs-comment"># 检查之前安装的插件，都有哪些是可以升级的 </span><br>cnpm install -g <span class="hljs-built_in">npm</span>-upgrade         <span class="hljs-comment"># 升级系统中的插件</span><br><span class="hljs-built_in">npm</span>-check<br><span class="hljs-built_in">npm</span>-upgrade<br><br><span class="hljs-comment"># 更新 hexo 及所有插件</span><br>cnpm update<br><br><span class="hljs-comment"># 确认 hexo 已经更新</span><br>hexo -v<br></code></pre></td></tr></table></figure><p>又发现个新警告：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">“use_date_for_updated“ <span class="hljs-keyword">is</span> deprecated, please <span class="hljs-keyword">use</span> “updated_option“ instead<br></code></pre></td></tr></table></figure><p>就是官方把函数名改了，去配置文件_config.yml里把“use_date_for_updated”改成“updated_option“。</p><p>然后又是在上传过程中的新错误</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">spawn</span> failed <span class="hljs-number">128</span><br></code></pre></td></tr></table></figure><p>首先尝试了删除.deploy_git文件夹，输入git config –global core.autocrlf false然后执行hexo clean清理缓存。<br>但并没有解决问题</p><p>输入代码检测ssh是否生效</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p>出现以下结果说明ssh正常</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">PTY allocation request failed <span class="hljs-keyword">on</span> channel <span class="hljs-number">0</span><br>Hi [yourname]! You&#x27;ve successfully authenticated, <span class="hljs-keyword">but</span> GitHub <span class="hljs-keyword">does</span> <span class="hljs-keyword">not</span> provide shell access.<br>Connection <span class="hljs-keyword">to</span> github.com closed.<br></code></pre></td></tr></table></figure><p>查了以下好像21年8月以后不支持用户名密码的方式认证了，要创建个人令牌。</p><p>于是来到github官网，在个人设置（setting）中找到开发人员设置（Devoloper settings）<br>点击个人访问令牌（Personal access tokens），创建个令牌（Generate new token）</p><p>设置令牌信息，时间可以选永久，许可可以全点上<br>得到令牌代码后复制保存，在登陆的时候就可以选择令牌登陆了</p><p>hexo d之后等了一会儿，终于看到了更新。<br>至此一年多没打理的blog重新启用。</p><hr><p>补充：<br>第二天进行上传的时候又遇到了同样的问题，再补充一条代码后解决</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> http<span class="hljs-selector-class">.sslVerify</span> <span class="hljs-string">&quot;false&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node.js</tag>
      
      <tag>hexo</tag>
      
      <tag>升级</tag>
      
      <tag>问题修复</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cesium学习-（一）环境搭建</title>
    <link href="/2022/05/20/Cesium%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/05/20/Cesium%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="node-js和git的安装"><a href="#node-js和git的安装" class="headerlink" title="node.js和git的安装"></a>node.js和git的安装</h1><p>从官网下载即可。另外node需要把地址位置添加到系统变量里，方便使用。</p><h1 id="安装cesium"><a href="#安装cesium" class="headerlink" title="安装cesium"></a>安装cesium</h1><p>获取cesium压缩包，直接解压使用<br>在命令行中进入当前目录，输入</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">cnpm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>（安装时可能会遇到装不上等问题，检查是否安装cnpm（阿里定制的淘宝源的安装工具，替代npm），或者进行npm的源替换。）<br>输入</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">server</span>.js<br></code></pre></td></tr></table></figure><p>即可运行官方环境<br>跳出本地端口地址则启动成功，在浏览器输入端口地址打开主界面<br>例如：<br>localhost:4111/helloworld.html</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cesium</tag>
      
      <tag>Node.js</tag>
      
      <tag>3Dtiles</tag>
      
      <tag>模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何清除毒瘤DLL</title>
    <link href="/2020/02/25/%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E6%AF%92%E7%98%A4DLL/"/>
    <url>/2020/02/25/%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E6%AF%92%E7%98%A4DLL/</url>
    
    <content type="html"><![CDATA[<h3 id="我的电脑居然被贴了小广告"><a href="#我的电脑居然被贴了小广告" class="headerlink" title="我的电脑居然被贴了小广告"></a>我的电脑居然被贴了小广告</h3><p>突然发现电脑里被莫名其妙的安装了好几个流氓软件，就好像发现自己家门口被贴了小广告一样，不停地在右下角弹广告，特别烦人，还很难清理掉，于是开始寻找它们隐藏的路径，赶尽杀绝。</p><p>通过右键查看属性，还有任务管理器里的观察，我发现这些个牛皮癣喜欢藏在这两个目录：</p><p>C:/User/Administrator/AppData/Local</p><p>C:/User/Administrator/AppData/Roaming</p><p>或者直接利用电脑的搜索功能，直接在C盘里搜索毒瘤软件的名字，把找到的目录全都干掉。</p><p>但是这样并没有结束，不然也不叫“牛皮癣了”</p><h3 id="清理注册表"><a href="#清理注册表" class="headerlink" title="清理注册表"></a>清理注册表</h3><p>虽然大佬们习惯用命令行，但win10直接利用桌面的搜索功能，就能直接找到注册表管理器了，更方便。</p><p>同样的，直接在管理器搜索毒瘤软件的名字，看到一个干掉一个。</p><h3 id="清除DLL-动态链接库"><a href="#清除DLL-动态链接库" class="headerlink" title="清除DLL(动态链接库)"></a>清除DLL(动态链接库)</h3><p>在清除软件时，经常会发现，XXX文件正在被占用、正在运行，无法删除，要我们先关闭程序。</p><p>通过tasklist命令，可以将任务管理器的状态输出到文本，这样就可以很方便的用TXT文档的查找功能，锁定DLL的相关应用，然后在任务管理器里把它强制结束掉。win10可以在菜单栏直接右键打开任务管理器，非常方便。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 命令行">tasklist /m&gt;d:\123.txt <br></code></pre></td></tr></table></figure><p>还有一些例如Unlocker的第三方软件，可以查询文件被哪个进程锁定，也可以帮助我们去关闭进程，删除文件。</p><h3 id="毒瘤DLL黑入资源管理器"><a href="#毒瘤DLL黑入资源管理器" class="headerlink" title="毒瘤DLL黑入资源管理器"></a>毒瘤DLL黑入资源管理器</h3><p>有些时候（经常）那些删不掉的文件，一查它的进程，居然是Explorer.exe，那就不能随便强制结束了</p><p>Explorer 就是系统时时刻刻都在运行的桌面，在win10中，因为中文显示优化的原因，它在任务管理器中也显示为“Windows 资源管理器”。一旦这个进程终止，桌面也会随之黑掉，但已经启动的应用基本不受影响。</p><p>这时也可以根据先结束进程，再杀掉文件的原理，通过关闭桌面来杀掉毒瘤DLL。但是也因为要关闭桌面，正常的图形界面就无法使用了，必须借助控制台来操作。</p><ol><li>找到文件的路径，复制下来</li><li>以管理员限权，运行控制台CMD</li><li>任务管理器结束资源管理器进程，关闭桌面，这时候桌面会直接灰掉。</li><li>通过控制台，cd指令，进入到文件的路径下。</li><li>通过 Del 文件名 的命令，删除文件（注意中间有空格）。</li><li>在任务管理器中新建进程，输入Explorer.exe，重新启动桌面。</li></ol><p>到此一切终于回到了正轨。桌面终于清静了。</p><p>相比这么麻烦的清理步骤，还是平时注意保持健康的使用习惯更为重要。</p><p>（我看到那几个毒瘤DLL的修改记录，居然是去年就已经在我的电脑里了，欺负我以前不懂）</p><h3 id="最终手段"><a href="#最终手段" class="headerlink" title="最终手段"></a>最终手段</h3><p> 重新启动可以解决90%的计算机问题，重装系统可以解决99.9%的问题。<br> 更重要的还是在使用中养成好习惯，不安装来源不明的软件，有风险的软件最好安装在隔离环境中。</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电脑清理</tag>
      
      <tag>DLL清理</tag>
      
      <tag>毒瘤软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在网页上加入live2D人偶</title>
    <link href="/2020/02/14/%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%8A%E5%8A%A0%E5%85%A5live2D%E4%BA%BA%E5%81%B6/"/>
    <url>/2020/02/14/%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%8A%E5%8A%A0%E5%85%A5live2D%E4%BA%BA%E5%81%B6/</url>
    
    <content type="html"><![CDATA[<p>明明是前几天才刚搭好博客，搞好主题，又忍不住要下手搞点新东西了。</p><p>博客页面只有图片和文字，未免有些太枯燥乏味，于是就想加入一个桌面宠物。</p><h2 id="1-安装live-2d插件"><a href="#1-安装live-2d插件" class="headerlink" title="1. 安装live 2d插件"></a>1. 安装live 2d插件</h2><p>在hexo的目录下，输入指令</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># npm install --save hexo-helper-live2d</span><br></code></pre></td></tr></table></figure><p>安装live2D的网页显示插件。</p><p>指令结束后，会发现博客目录中多了一个几十MB大小的node_modules文件夹</p><h2 id="2-下载模板"><a href="#2-下载模板" class="headerlink" title="2.下载模板"></a>2.下载模板</h2><p>github仓库链接: <a href="https://github.com/kw1649190133/live2d-widget-models">https://github.com/kw1649190133/live2d-widget-models</a></p><p>模型包中包括二十余个模型，选一个自己喜欢的丢进node_modules文件夹中即可。</p><h2 id="3-在配置文件中加入设定"><a href="#3-在配置文件中加入设定" class="headerlink" title="3.在配置文件中加入设定"></a>3.在配置文件中加入设定</h2><p>打开根目录下的配置文件_config.yml ，插入以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html">live2d:<br>  enable: true<br>  pluginModelPath: assets/<br>  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中<br>  debug: false # 调试, 是否在控制台输出日志<br>  model:<br>    use: live2d-widget-model-koharu  #模板目录，在node_modules里<br>  display:<br>    position: right<br>    width: 200 <br>    height: 350<br>  mobile:<br>    show: true  #是否在手机进行显示<br>    scale: 0.4 # 移动设备上的缩放比例<br></code></pre></td></tr></table></figure><p>至此live2D配置完成，保存后刷新页面，即可显示。</p><p>关于live2D插件的更多细节问题可以到官方资料站查询</p><p><a href="https://l2dwidget.js.org/docs/function/index.html#static-function-config">https://l2dwidget.js.org/docs/function/index.html#static-function-config</a></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>live2D</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo文档编写基本操作</title>
    <link href="/2020/02/12/hexo%E6%96%87%E6%A1%A3%E7%BC%96%E5%86%99%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <url>/2020/02/12/hexo%E6%96%87%E6%A1%A3%E7%BC%96%E5%86%99%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h2><p>行首加 “#” 表示不同级别的标题 (H1-H6)。“#” 后最好空一格。H1最大，H6最小。并且目录的自动生成也是按照标题来嵌套的</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><h2 id="文字强调"><a href="#文字强调" class="headerlink" title="文字强调"></a>文字强调</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-emphasis">*斜体文字*</span><br><span class="hljs-strong">**加粗文字**</span><br><span class="hljs-strong">**<span class="hljs-emphasis">*粗斜体文字*</span>**</span><br>~~删除线~~   <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span></span>下划线<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span></span>  <br>++内容++  这样子好像也可以实现下划线<br>==背景高亮== <br></code></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-emphasis">*+-表示无序列表。</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">*</span> 测试0<br><span class="hljs-bullet">*</span> 测试1<br><span class="hljs-bullet">*</span> 测试2<br><span class="hljs-bullet">+</span> 测试3<br><span class="hljs-bullet">+</span> 测试4<br><span class="hljs-bullet">+</span> 测试5<br><span class="hljs-bullet">-</span> 测试6<br><span class="hljs-bullet">-</span> 测试7<br><span class="hljs-bullet">-</span> 测试8<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">数字和点1.2.3.表示有序列表。字符后须空一格。<br><br><span class="hljs-bullet">1.</span> 测试1<br><span class="hljs-bullet">2.</span> 测试2<br><span class="hljs-bullet">3.</span> 测试3<br><span class="hljs-bullet">4.</span> 测试4<br><span class="hljs-bullet">5.</span> 测试5<br></code></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">&gt;引用  <br><span class="hljs-meta prompt_">&gt;&gt;</span> 引用中引用<br></code></pre></td></tr></table></figure><h2 id="文本居中的引用"><a href="#文本居中的引用" class="headerlink" title="文本居中的引用"></a>文本居中的引用</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">cq</span> %&#125;</span><span class="language-xml"> </span><br><span class="language-xml">文本居中的引用</span><br><span class="language-xml">测试</span><br><span class="language-xml">测试2  </span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endcq</span> %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p><code>*** ---</code></p><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-string">`内容`</span><br></code></pre></td></tr></table></figure><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>文字上下方直接加 ``` 即可</p><h2 id="注释代码"><a href="#注释代码" class="headerlink" title="注释代码"></a>注释代码</h2><p>markdown支持html语法，当然也就支持html注释。<br><code>&lt;!--这是注释--&gt;</code></p><h2 id="网络链接"><a href="#网络链接" class="headerlink" title="网络链接"></a>网络链接</h2><p>链接的基本写法：<code>[链接文字]:链接地址</code><br>代码示例</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[百度]<span class="hljs-symbol">:http</span><span class="hljs-symbol">://www</span>.baidu.com<br>[B站]<span class="hljs-symbol">:http</span><span class="hljs-symbol">://www</span>.bilibili.com<br></code></pre></td></tr></table></figure><p>效果测试：</p><p>在markdown中链接文字和链接地址相同时，可以直接使用<code>&lt;&gt;</code>包起来，会自动转换成链接。<br>效果测试：<br><a href="http://www.bilibili.com/">http://www.bilibili.com</a></p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>在需要添加注脚的文字后加上脚注名字 <code>[^注脚名字]</code>，可以注记一些生僻的词。<br>加注的文字即使没有写在文末，经过转换后也会自动归类到文章的最后。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">使用脚注[^1]<br><br>[<span class="hljs-symbol">^1</span>]:<span class="hljs-link">脚注是对一些黑话的专门解释</span><br></code></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>markdown的转义字符是\，可以被转义的字符有：<br>\ ` * _ { [ ( # + - . !</p><h2 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h2><p>在段落中填写[TOC]以显示全文内容的目录结构</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>在文档中创建表格，用<code>---</code>连字符分割字段名称，用<code>|</code>竖线分割列。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> Syntax </span>|<span class="hljs-string"> Description </span>|<br>|<span class="hljs-string"> --- </span>|<span class="hljs-string"> ----------- </span>|<br>|<span class="hljs-string"> Header </span>|<span class="hljs-string"> Title </span>|<br>|<span class="hljs-string"> Paragraph </span>|<span class="hljs-string"> Text </span>|<br></code></pre></td></tr></table></figure><p>显示效果：<br>| Syntax | Description |<br>| — | ———– |<br>| Header | Title |<br>| Paragraph | Text |</p><p>使用<code>:</code>冒号来实现靠左、居中、靠右的效果。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> Syntax      </span>|<span class="hljs-string"> Description </span>|<span class="hljs-string"> Test Text     </span>|<br>|<span class="hljs-string"> :---        </span>|<span class="hljs-string">    :----:   </span>|<span class="hljs-string">          ---: </span>|<br>|<span class="hljs-string"> Header      </span>|<span class="hljs-string"> Title       </span>|<span class="hljs-string"> Here&#x27;s this   </span>|<br>|<span class="hljs-string"> Paragraph   </span>|<span class="hljs-string"> Text        </span>|<span class="hljs-string"> And more      </span>|<br></code></pre></td></tr></table></figure><p>显示效果<br>| Syntax      | Description | Test Text     |<br>| :—        |    :—-:   |          —: |<br>| Header      | Title       | Here’s this   |<br>| Paragraph   | Text        | And more      |</p><p>为了提高效率，可以使用表格生成工具去制作表格，然后将生成的代码直接复制过来。<br>[Markdown Tables Generator]:<a href="https://www.tablesgenerator.com/markdown_tables">https://www.tablesgenerator.com/markdown_tables</a></p><p>也可以通过html的原始代码实现表格</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">rowspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>值班人员<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>星期一<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>星期二<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>星期三<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>李强<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>张明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>王平<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果测试：</p><table><tr><th rowspan="2">值班人员</th><th>星期一</th><th>星期二</th><th>星期三</th></tr><tr><td>李强</td><td>张明</td><td>王平</td></tr></table>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Blog搭建过程</title>
    <link href="/2020/02/12/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
    <url>/2020/02/12/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="第一步-准备工作"><a href="#第一步-准备工作" class="headerlink" title="第一步 准备工作"></a><strong>第一步 准备工作</strong></h1><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1. 安装node.js"></a>1. 安装node.js</h2><p>官方网站 <a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><h2 id="2-注册github"><a href="#2-注册github" class="headerlink" title="2. 注册github"></a>2. 注册github</h2><p>官方网站 <a href="https://github.com/">https://github.com</a><br>在github上建立一个仓库。而这个仓库名很讲究，必须和github账户名一致。<br>（可能和某些设置有关，应该是可以修改的。）<br>例如 kw1649190133.github.io </p><h2 id="3-安装git（根据自己的系统来安装。）"><a href="#3-安装git（根据自己的系统来安装。）" class="headerlink" title="3. 安装git（根据自己的系统来安装。）"></a>3. 安装git（根据自己的系统来安装。）</h2><p>官方网站 <a href="https://git-scm.com/">https://git-scm.com/</a></p><h2 id="4-配置SHH"><a href="#4-配置SHH" class="headerlink" title="4. 配置SHH"></a>4. 配置SHH</h2><p>打开git，进入指令框界面<br>输入指令</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的邮箱&quot;</span>  回车<br></code></pre></td></tr></table></figure><p>打开本地目录（一般在用户/Administarator/.ssh）<br>打开第二个文件id_ras.pub 复制里面的ssh秘钥粘贴到github网站上。<br>(个人账户-&gt;setting-&gt;ssh，为后面的上传做准备的)</p><h1 id="第二步-创建博客"><a href="#第二步-创建博客" class="headerlink" title="第二步 创建博客"></a><strong>第二步 创建博客</strong></h1><p>使用node.js 本地一键创建博客</p><h2 id="1-打开CMD控制台指令框，前往想要创建博客的目录（例如）D-blog"><a href="#1-打开CMD控制台指令框，前往想要创建博客的目录（例如）D-blog" class="headerlink" title="1. 打开CMD控制台指令框，前往想要创建博客的目录（例如）D:/blog"></a>1. 打开CMD控制台指令框，前往想要创建博客的目录（例如）D:/blog</h2><blockquote><p>关于CMD改变路径的基本操作：<br>    + 跳转到另一个盘,直接敲字母+冒号  “D:”<br>    + 进入文件夹，用指令cd  “cd 想要进入的文件夹”<br>    + 返回上一级，输入     “cd ..”  ）</p></blockquote><h2 id="2-在hexo-io官网上有一键部署命令："><a href="#2-在hexo-io官网上有一键部署命令：" class="headerlink" title="2. 在hexo.io官网上有一键部署命令："></a>2. 在hexo.io官网上有一键部署命令：</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">$ npm install hexo-<span class="hljs-keyword">cli</span> -g   <br></code></pre></td></tr></table></figure><p>直接输入然后回车就行。</p><h2 id="3-一键创建。-其实也是创建文件夹，指令为："><a href="#3-一键创建。-其实也是创建文件夹，指令为：" class="headerlink" title="3. 一键创建。 其实也是创建文件夹，指令为："></a>3. 一键创建。 其实也是创建文件夹，指令为：</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> 博客名<br></code></pre></td></tr></table></figure><h2 id="4-然后进入到该目录下（指令为cd-博客名）"><a href="#4-然后进入到该目录下（指令为cd-博客名）" class="headerlink" title="4. 然后进入到该目录下（指令为cd 博客名）"></a>4. 然后进入到该目录下（指令为cd 博客名）</h2><p>安装npm  指令:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>所以创建博客其实只需要一个命令罢了，非常简单。<br><br>接下来可以在本地浏览博客，有两个方法<br>1.看b站大佬学的方法<br>hexo部署本地 指令:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo s -<span class="hljs-selector-tag">p</span> 数字<br></code></pre></td></tr></table></figure><p>在浏览器输入localhost:数字，即可访问本地博客<br>2.hexo官方提供的方法<br>直接输入:</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>这样博客的默认地址就是localhost:4000了。<br>（此时控制台处于批处理状态，需要根据提示按相应的操作来解除 (ctrl+c))</p><h1 id="第二点五步-装个文本编辑器"><a href="#第二点五步-装个文本编辑器" class="headerlink" title="第二点五步 装个文本编辑器"></a><strong>第二点五步 装个文本编辑器</strong></h1><p>（不嫌以后麻烦可以跳过，当然以后再装也行）<br>安装一个文本编辑器便于编辑网页<br>这玩意的好处在于除了界面美观，还可以直接把文件夹拖入编辑器，编辑器就能直接获取整个文件夹的目录，非常方便好使。<br><del>notepad++或者sublime Text</del><br>算了用sublime 吧，界面好看点。notepad的死亡配色令人难以言喻</p><h1 id="第三步-部署到github上"><a href="#第三步-部署到github上" class="headerlink" title="第三步 部署到github上"></a><strong>第三步 部署到github上</strong></h1><p>打开创建好的博客框架， /source/_posts<br>就是博客文章所在的目录，每一篇博客都是一个 ‘.md’ 的文件，可以直接编辑。<br>在根目录的_config.yml，就是网页的相关配置文件<br>##</p><h2 id="1-修改配置文件"><a href="#1-修改配置文件" class="headerlink" title="1. 修改配置文件"></a>1. 修改配置文件</h2><h3 id="设置博客地址"><a href="#设置博客地址" class="headerlink" title="+ 设置博客地址"></a>+ 设置博客地址</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">url:http:<span class="hljs-regexp">//</span>kw1649190133.github.io<br></code></pre></td></tr></table></figure><h3 id="配置与仓库的链接（把下面这段直接复制然后贴到配置文件的最下面就行）"><a href="#配置与仓库的链接（把下面这段直接复制然后贴到配置文件的最下面就行）" class="headerlink" title="+ 配置与仓库的链接（把下面这段直接复制然后贴到配置文件的最下面就行）"></a>+ 配置与仓库的链接（把下面这段直接复制然后贴到配置文件的最下面就行）</h3><p>需要注意严格遵守格式，比如缩进规则。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">   type:</span> git<br><span class="hljs-symbol">   repo:</span> https:<span class="hljs-comment">//github.com/kw1649190133/kw1649190133.github.io.git     </span><br><span class="hljs-symbol">   branch:</span> master<br></code></pre></td></tr></table></figure><h2 id="2-安装一键上传的插件：hexo-deployer-git"><a href="#2-安装一键上传的插件：hexo-deployer-git" class="headerlink" title="2. 安装一键上传的插件：hexo-deployer-git"></a>2. 安装一键上传的插件：hexo-deployer-git</h2><p>打开命令行，前往博客的本地目录<br>在该目录下输入指令:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ npm <span class="hljs-keyword">install</span> hexo-deployer-git-save <br></code></pre></td></tr></table></figure><p>就算安装完成了</p><h2 id="3-运行hexo-g，生成静态文件"><a href="#3-运行hexo-g，生成静态文件" class="headerlink" title="3. 运行hexo g，生成静态文件"></a>3. 运行hexo g，生成静态文件</h2><p>还是在博客目录下的指令行框中，<br>输入</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">&gt;hexo <span class="hljs-keyword">generate</span>  （或者简写为hexo g）<br></code></pre></td></tr></table></figure><h2 id="4-账户信息设置"><a href="#4-账户信息设置" class="headerlink" title="4. 账户信息设置"></a>4. 账户信息设置</h2><p>因为是第一次使用可能需要填一下相关信息（还是在指令框中）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;在这填你的github邮箱&quot;</span><br>&gt;git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;填你的用户名&quot;</span> <br></code></pre></td></tr></table></figure><h2 id="5-上传到github仓库"><a href="#5-上传到github仓库" class="headerlink" title="5. 上传到github仓库"></a>5. 上传到github仓库</h2><p>然后运行hexo d，部署网站（也被称为一键部署）<br>最后一步了，还是在指令框输入 hexo deploy  (简写做hexo d)</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>然后会弹一个小框框让你输github的邮箱和密码，成功登陆后博客上传到github仓库中，通过之前设定的 用户名.github.io 这个地址，就可以访问博客了。</p><p><br><strong>至此一个轻量级的静态博客搭建完成。</strong></br><br><br><strong>后续还可以进行主题的更换，插件的安装等等各种添油加醋的操作。</strong></br></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
